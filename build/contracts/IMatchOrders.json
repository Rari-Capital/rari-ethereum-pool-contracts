{
  "contractName": "IMatchOrders",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "leftOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "rightOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "leftSignatures",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes[]",
          "name": "rightSignatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchMatchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "protocolFeePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LibFillResults.FillResults[]",
              "name": "left",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "protocolFeePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LibFillResults.FillResults[]",
              "name": "right",
              "type": "tuple[]"
            },
            {
              "internalType": "uint256",
              "name": "profitInLeftMakerAsset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "profitInRightMakerAsset",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.BatchMatchedFillResults",
          "name": "batchMatchedFillResults",
          "type": "tuple"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "leftOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "rightOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "leftSignatures",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes[]",
          "name": "rightSignatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchMatchOrdersWithMaximalFill",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "protocolFeePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LibFillResults.FillResults[]",
              "name": "left",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "protocolFeePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LibFillResults.FillResults[]",
              "name": "right",
              "type": "tuple[]"
            },
            {
              "internalType": "uint256",
              "name": "profitInLeftMakerAsset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "profitInRightMakerAsset",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.BatchMatchedFillResults",
          "name": "batchMatchedFillResults",
          "type": "tuple"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "leftOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "rightOrder",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "leftSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rightSignature",
          "type": "bytes"
        }
      ],
      "name": "matchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "protocolFeePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LibFillResults.FillResults",
              "name": "left",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "protocolFeePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LibFillResults.FillResults",
              "name": "right",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "profitInLeftMakerAsset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "profitInRightMakerAsset",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.MatchedFillResults",
          "name": "matchedFillResults",
          "type": "tuple"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "leftOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "rightOrder",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "leftSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rightSignature",
          "type": "bytes"
        }
      ],
      "name": "matchOrdersWithMaximalFill",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "protocolFeePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LibFillResults.FillResults",
              "name": "left",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "protocolFeePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LibFillResults.FillResults",
              "name": "right",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "profitInLeftMakerAsset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "profitInRightMakerAsset",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.MatchedFillResults",
          "name": "matchedFillResults",
          "type": "tuple"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"leftOrders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"rightOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"leftSignatures\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"rightSignatures\",\"type\":\"bytes[]\"}],\"name\":\"batchMatchOrders\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults[]\",\"name\":\"left\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults[]\",\"name\":\"right\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"profitInLeftMakerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitInRightMakerAsset\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.BatchMatchedFillResults\",\"name\":\"batchMatchedFillResults\",\"type\":\"tuple\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"leftOrders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"rightOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"leftSignatures\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"rightSignatures\",\"type\":\"bytes[]\"}],\"name\":\"batchMatchOrdersWithMaximalFill\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults[]\",\"name\":\"left\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults[]\",\"name\":\"right\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"profitInLeftMakerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitInRightMakerAsset\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.BatchMatchedFillResults\",\"name\":\"batchMatchedFillResults\",\"type\":\"tuple\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"leftOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"rightOrder\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"leftSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rightSignature\",\"type\":\"bytes\"}],\"name\":\"matchOrders\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"left\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"right\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"profitInLeftMakerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitInRightMakerAsset\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.MatchedFillResults\",\"name\":\"matchedFillResults\",\"type\":\"tuple\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"leftOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"rightOrder\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"leftSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rightSignature\",\"type\":\"bytes\"}],\"name\":\"matchOrdersWithMaximalFill\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"left\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"right\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"profitInLeftMakerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profitInRightMakerAsset\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.MatchedFillResults\",\"name\":\"matchedFillResults\",\"type\":\"tuple\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"batchMatchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],bytes[])\":{\"details\":\"Match complementary orders that have a profitable spread.      Each order is filled at their respective price point, and      the matcher receives a profit denominated in the left maker asset.\",\"params\":{\"leftOrders\":\"Set of orders with the same maker / taker asset.\",\"leftSignatures\":\"Proof that left orders were created by the left makers.\",\"rightOrders\":\"Set of orders to match against `leftOrders`\",\"rightSignatures\":\"Proof that right orders were created by the right makers.\"},\"return\":\"batchMatchedFillResults Amounts filled and profit generated.\"},\"batchMatchOrdersWithMaximalFill((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],bytes[])\":{\"details\":\"Match complementary orders that have a profitable spread.      Each order is maximally filled at their respective price point, and      the matcher receives a profit denominated in either the left maker asset,      right maker asset, or a combination of both.\",\"params\":{\"leftOrders\":\"Set of orders with the same maker / taker asset.\",\"leftSignatures\":\"Proof that left orders were created by the left makers.\",\"rightOrders\":\"Set of orders to match against `leftOrders`\",\"rightSignatures\":\"Proof that right orders were created by the right makers.\"},\"return\":\"batchMatchedFillResults Amounts filled and profit generated.\"},\"matchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),bytes,bytes)\":{\"details\":\"Match two complementary orders that have a profitable spread.      Each order is filled at their respective price point. However, the calculations are      carried out as though the orders are both being filled at the right order's price point.      The profit made by the left order goes to the taker (who matched the two orders).\",\"params\":{\"leftOrder\":\"First order to match.\",\"leftSignature\":\"Proof that order was created by the left maker.\",\"rightOrder\":\"Second order to match.\",\"rightSignature\":\"Proof that order was created by the right maker.\"},\"return\":\"matchedFillResults Amounts filled and fees paid by maker and taker of matched orders.\"},\"matchOrdersWithMaximalFill((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),bytes,bytes)\":{\"details\":\"Match two complementary orders that have a profitable spread.      Each order is maximally filled at their respective price point, and      the matcher receives a profit denominated in either the left maker asset,      right maker asset, or a combination of both.\",\"params\":{\"leftOrder\":\"First order to match.\",\"leftSignature\":\"Proof that order was created by the left maker.\",\"rightOrder\":\"Second order to match.\",\"rightSignature\":\"Proof that order was created by the right maker.\"},\"return\":\"matchedFillResults Amounts filled by maker and taker of matched orders.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@0x/contracts-exchange/contracts/src/interfaces/IMatchOrders.sol\":\"IMatchOrders\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\":{\"keccak256\":\"0xedb2f1e66e7ece2302b4dd19d0ef29a0ffeefddae7e9a81f7104155ac3cbb75b\",\"urls\":[\"bzz-raw://9a490801ffde73bb98aa3de52ef2d615894d188820ebe4c8cd340f5cd33462ad\",\"dweb:/ipfs/QmUTSaJ6GTvNoYCmpd9dv2mz25vakoLS9tQpiF1ohAUMFV\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMath.sol\":{\"keccak256\":\"0xc331418f75cd832accf9dc439be811e10d99f1d2de3a9c0321fd3f127cdf1e54\",\"urls\":[\"bzz-raw://8a090ac0a55200b6f5624c41fff2ad21e5c673b7fcd0faf1bc88017087bbb1b2\",\"dweb:/ipfs/QmWhxuazHstpSCYDQJscHnAh6ngW7SHKT79t6yQHaJHgmi\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMathRichErrors.sol\":{\"keccak256\":\"0xd2d047534facd6051467dd7a22d7ee9fd4e54e63bb5a5fae2511eac7332fad3d\",\"urls\":[\"bzz-raw://5e0aeedd55c996fd72004a14f5c528ed60b46631ca9599bbb7925c8342ca3be4\",\"dweb:/ipfs/QmNi1ozt4sYmn4pCobjU7FQ4KGUvK77pCyWUtbD18uQgVm\"]},\"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\":{\"keccak256\":\"0x1b7b1e1a2dff4249c6f6c500000342a805f372131797b6d7314435204a651ad4\",\"urls\":[\"bzz-raw://19c11b77022ccfa530af75f236ea00ecb92aa5476f96abbde268163660b3906b\",\"dweb:/ipfs/Qmf1MtwPLpocsBArn8Npyzu4AtMqSagYTuee8JdbMXXwHM\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IMatchOrders.sol\":{\"keccak256\":\"0x57e052667a28152057a1ab25b958b55d9c79afe95ea5ab645692bad18e5504b3\",\"urls\":[\"bzz-raw://de35bf6f6ab53af3dcb6b09999840adbc161c1f59623940670f552b59a28b147\",\"dweb:/ipfs/QmebunP1nLEWkMPqbFY8iQewkaUUZH5xVAs3erGerqf264\"]},\"@0x/contracts-utils/contracts/src/LibEIP712.sol\":{\"keccak256\":\"0xe19c3cbc71fbea0fdb45c1763306550015d940bea9dbec5f3fd2edfe2165d673\",\"urls\":[\"bzz-raw://267d263f0453352a1ac8d8085a13c4976fb8c964eff8d3aab0a84173d1438efb\",\"dweb:/ipfs/QmbaRw85MYYP3KTmQ68gYdEnFyMqD7frwjxxwsj4j4JCr1\"]},\"@0x/contracts-utils/contracts/src/LibRichErrors.sol\":{\"keccak256\":\"0xe3ce6ded2fea3cc80998ca4d364bda530e273af0ba1c78d22a6cdadb6f64186e\",\"urls\":[\"bzz-raw://8239629dbcee9797a8f8157f03c2b78827b446787b4d53b3033a3e1ab538ad0b\",\"dweb:/ipfs/QmbttkX94CxMkS6t1K4He5bNwGKCRUhKqTt9pNsAL5ynst\"]},\"@0x/contracts-utils/contracts/src/LibSafeMath.sol\":{\"keccak256\":\"0xd0da9ac1905381832f6612774cb7eced3b4b60459d6bafa59f5424955b44c935\",\"urls\":[\"bzz-raw://ede4bbe2dac43c6cc4e3b7a22285e00d55b31fb8cc00b375c6ac4714298b7e6d\",\"dweb:/ipfs/QmWbN5qbJSNYrMMZMugaH5itTVSexe9yPsCPuArQVCLUgi\"]},\"@0x/contracts-utils/contracts/src/LibSafeMathRichErrors.sol\":{\"keccak256\":\"0xcf6adae04bd7af8e41fcd40ad148cc3d1cd5596bd42b01961b735c9b416a6572\",\"urls\":[\"bzz-raw://103791140e631e9d670bbc99e5f8e546f56061c5d49de97754006ce2c252d61e\",\"dweb:/ipfs/QmeRMyYFSk7n1sLzRSGqxcoX1sKQSdAQya6bRy6nseu6xX\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n\n  Copyright 2019 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\";\nimport \"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\";\n\n\ncontract IMatchOrders {\n\n    /// @dev Match complementary orders that have a profitable spread.\n    ///      Each order is filled at their respective price point, and\n    ///      the matcher receives a profit denominated in the left maker asset.\n    /// @param leftOrders Set of orders with the same maker / taker asset.\n    /// @param rightOrders Set of orders to match against `leftOrders`\n    /// @param leftSignatures Proof that left orders were created by the left makers.\n    /// @param rightSignatures Proof that right orders were created by the right makers.\n    /// @return batchMatchedFillResults Amounts filled and profit generated.\n    function batchMatchOrders(\n        LibOrder.Order[] memory leftOrders,\n        LibOrder.Order[] memory rightOrders,\n        bytes[] memory leftSignatures,\n        bytes[] memory rightSignatures\n    )\n        public\n        payable\n        returns (LibFillResults.BatchMatchedFillResults memory batchMatchedFillResults);\n\n    /// @dev Match complementary orders that have a profitable spread.\n    ///      Each order is maximally filled at their respective price point, and\n    ///      the matcher receives a profit denominated in either the left maker asset,\n    ///      right maker asset, or a combination of both.\n    /// @param leftOrders Set of orders with the same maker / taker asset.\n    /// @param rightOrders Set of orders to match against `leftOrders`\n    /// @param leftSignatures Proof that left orders were created by the left makers.\n    /// @param rightSignatures Proof that right orders were created by the right makers.\n    /// @return batchMatchedFillResults Amounts filled and profit generated.\n    function batchMatchOrdersWithMaximalFill(\n        LibOrder.Order[] memory leftOrders,\n        LibOrder.Order[] memory rightOrders,\n        bytes[] memory leftSignatures,\n        bytes[] memory rightSignatures\n    )\n        public\n        payable\n        returns (LibFillResults.BatchMatchedFillResults memory batchMatchedFillResults);\n\n    /// @dev Match two complementary orders that have a profitable spread.\n    ///      Each order is filled at their respective price point. However, the calculations are\n    ///      carried out as though the orders are both being filled at the right order's price point.\n    ///      The profit made by the left order goes to the taker (who matched the two orders).\n    /// @param leftOrder First order to match.\n    /// @param rightOrder Second order to match.\n    /// @param leftSignature Proof that order was created by the left maker.\n    /// @param rightSignature Proof that order was created by the right maker.\n    /// @return matchedFillResults Amounts filled and fees paid by maker and taker of matched orders.\n    function matchOrders(\n        LibOrder.Order memory leftOrder,\n        LibOrder.Order memory rightOrder,\n        bytes memory leftSignature,\n        bytes memory rightSignature\n    )\n        public\n        payable\n        returns (LibFillResults.MatchedFillResults memory matchedFillResults);\n\n    /// @dev Match two complementary orders that have a profitable spread.\n    ///      Each order is maximally filled at their respective price point, and\n    ///      the matcher receives a profit denominated in either the left maker asset,\n    ///      right maker asset, or a combination of both.\n    /// @param leftOrder First order to match.\n    /// @param rightOrder Second order to match.\n    /// @param leftSignature Proof that order was created by the left maker.\n    /// @param rightSignature Proof that order was created by the right maker.\n    /// @return matchedFillResults Amounts filled by maker and taker of matched orders.\n    function matchOrdersWithMaximalFill(\n        LibOrder.Order memory leftOrder,\n        LibOrder.Order memory rightOrder,\n        bytes memory leftSignature,\n        bytes memory rightSignature\n    )\n        public\n        payable\n        returns (LibFillResults.MatchedFillResults memory matchedFillResults);\n}\n",
  "sourcePath": "@0x/contracts-exchange/contracts/src/interfaces/IMatchOrders.sol",
  "ast": {
    "absolutePath": "@0x/contracts-exchange/contracts/src/interfaces/IMatchOrders.sol",
    "exportedSymbols": {
      "IMatchOrders": [
        6431
      ]
    },
    "id": 6432,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6367,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:34"
      },
      {
        "id": 6368,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:34"
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 6369,
        "nodeType": "ImportDirective",
        "scope": 6432,
        "sourceUnit": 6147,
        "src": "639:64:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "id": 6370,
        "nodeType": "ImportDirective",
        "scope": 6432,
        "sourceUnit": 5721,
        "src": "704:70:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 6431,
        "linearizedBaseContracts": [
          6431
        ],
        "name": "IMatchOrders",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Match complementary orders that have a profitable spread.\n      Each order is filled at their respective price point, and\n      the matcher receives a profit denominated in the left maker asset.\n @param leftOrders Set of orders with the same maker / taker asset.\n @param rightOrders Set of orders to match against `leftOrders`\n @param leftSignatures Proof that left orders were created by the left makers.\n @param rightSignatures Proof that right orders were created by the right makers.\n @return batchMatchedFillResults Amounts filled and profit generated.",
            "id": 6387,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchMatchOrders",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6373,
                  "name": "leftOrders",
                  "nodeType": "VariableDeclaration",
                  "scope": 6387,
                  "src": "1461:34:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6081_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 6371,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6081,
                      "src": "1461:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 6372,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1461:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6081_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6376,
                  "name": "rightOrders",
                  "nodeType": "VariableDeclaration",
                  "scope": 6387,
                  "src": "1505:35:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6081_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 6374,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6081,
                      "src": "1505:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 6375,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1505:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6081_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6379,
                  "name": "leftSignatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 6387,
                  "src": "1550:29:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6377,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1550:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 6378,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1550:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6382,
                  "name": "rightSignatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 6387,
                  "src": "1589:30:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6380,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1589:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 6381,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1589:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1451:174:34"
            },
            "returnParameters": {
              "id": 6386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6385,
                  "name": "batchMatchedFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 6387,
                  "src": "1674:69:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BatchMatchedFillResults_$5053_memory_ptr",
                    "typeString": "struct LibFillResults.BatchMatchedFillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6384,
                    "name": "LibFillResults.BatchMatchedFillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5053,
                    "src": "1674:38:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchMatchedFillResults_$5053_storage_ptr",
                      "typeString": "struct LibFillResults.BatchMatchedFillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1673:71:34"
            },
            "scope": 6431,
            "src": "1426:319:34",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Match complementary orders that have a profitable spread.\n      Each order is maximally filled at their respective price point, and\n      the matcher receives a profit denominated in either the left maker asset,\n      right maker asset, or a combination of both.\n @param leftOrders Set of orders with the same maker / taker asset.\n @param rightOrders Set of orders to match against `leftOrders`\n @param leftSignatures Proof that left orders were created by the left makers.\n @param rightSignatures Proof that right orders were created by the right makers.\n @return batchMatchedFillResults Amounts filled and profit generated.",
            "id": 6404,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchMatchOrdersWithMaximalFill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6390,
                  "name": "leftOrders",
                  "nodeType": "VariableDeclaration",
                  "scope": 6404,
                  "src": "2496:34:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6081_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 6388,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6081,
                      "src": "2496:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 6389,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2496:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6081_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6393,
                  "name": "rightOrders",
                  "nodeType": "VariableDeclaration",
                  "scope": 6404,
                  "src": "2540:35:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6081_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 6391,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6081,
                      "src": "2540:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 6392,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2540:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6081_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6396,
                  "name": "leftSignatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 6404,
                  "src": "2585:29:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6394,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2585:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 6395,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2585:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6399,
                  "name": "rightSignatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 6404,
                  "src": "2624:30:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6397,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2624:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 6398,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2624:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2486:174:34"
            },
            "returnParameters": {
              "id": 6403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6402,
                  "name": "batchMatchedFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 6404,
                  "src": "2709:69:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BatchMatchedFillResults_$5053_memory_ptr",
                    "typeString": "struct LibFillResults.BatchMatchedFillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6401,
                    "name": "LibFillResults.BatchMatchedFillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5053,
                    "src": "2709:38:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchMatchedFillResults_$5053_storage_ptr",
                      "typeString": "struct LibFillResults.BatchMatchedFillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2708:71:34"
            },
            "scope": 6431,
            "src": "2446:334:34",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Match two complementary orders that have a profitable spread.\n      Each order is filled at their respective price point. However, the calculations are\n      carried out as though the orders are both being filled at the right order's price point.\n      The profit made by the left order goes to the taker (who matched the two orders).\n @param leftOrder First order to match.\n @param rightOrder Second order to match.\n @param leftSignature Proof that order was created by the left maker.\n @param rightSignature Proof that order was created by the right maker.\n @return matchedFillResults Amounts filled and fees paid by maker and taker of matched orders.",
            "id": 6417,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "matchOrders",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6406,
                  "name": "leftOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 6417,
                  "src": "3539:31:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$6081_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6405,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6081,
                    "src": "3539:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6408,
                  "name": "rightOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 6417,
                  "src": "3580:32:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$6081_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6407,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6081,
                    "src": "3580:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6410,
                  "name": "leftSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 6417,
                  "src": "3622:26:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6409,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6412,
                  "name": "rightSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 6417,
                  "src": "3658:27:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6411,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3658:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3529:162:34"
            },
            "returnParameters": {
              "id": 6416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6415,
                  "name": "matchedFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 6417,
                  "src": "3740:59:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchedFillResults_$5073_memory_ptr",
                    "typeString": "struct LibFillResults.MatchedFillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6414,
                    "name": "LibFillResults.MatchedFillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5073,
                    "src": "3740:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchedFillResults_$5073_storage_ptr",
                      "typeString": "struct LibFillResults.MatchedFillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3739:61:34"
            },
            "scope": 6431,
            "src": "3509:292:34",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Match two complementary orders that have a profitable spread.\n      Each order is maximally filled at their respective price point, and\n      the matcher receives a profit denominated in either the left maker asset,\n      right maker asset, or a combination of both.\n @param leftOrder First order to match.\n @param rightOrder Second order to match.\n @param leftSignature Proof that order was created by the left maker.\n @param rightSignature Proof that order was created by the right maker.\n @return matchedFillResults Amounts filled by maker and taker of matched orders.",
            "id": 6430,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "matchOrdersWithMaximalFill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6419,
                  "name": "leftOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 6430,
                  "src": "4493:31:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$6081_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6418,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6081,
                    "src": "4493:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6421,
                  "name": "rightOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 6430,
                  "src": "4534:32:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$6081_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6420,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6081,
                    "src": "4534:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6423,
                  "name": "leftSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 6430,
                  "src": "4576:26:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6422,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4576:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6425,
                  "name": "rightSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 6430,
                  "src": "4612:27:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6424,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4483:162:34"
            },
            "returnParameters": {
              "id": 6429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6428,
                  "name": "matchedFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 6430,
                  "src": "4694:59:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchedFillResults_$5073_memory_ptr",
                    "typeString": "struct LibFillResults.MatchedFillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6427,
                    "name": "LibFillResults.MatchedFillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5073,
                    "src": "4694:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchedFillResults_$5073_storage_ptr",
                      "typeString": "struct LibFillResults.MatchedFillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4693:61:34"
            },
            "scope": 6431,
            "src": "4448:307:34",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6432,
        "src": "777:3980:34"
      }
    ],
    "src": "580:4178:34"
  },
  "legacyAST": {
    "absolutePath": "@0x/contracts-exchange/contracts/src/interfaces/IMatchOrders.sol",
    "exportedSymbols": {
      "IMatchOrders": [
        6431
      ]
    },
    "id": 6432,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6367,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:34"
      },
      {
        "id": 6368,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:34"
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 6369,
        "nodeType": "ImportDirective",
        "scope": 6432,
        "sourceUnit": 6147,
        "src": "639:64:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "id": 6370,
        "nodeType": "ImportDirective",
        "scope": 6432,
        "sourceUnit": 5721,
        "src": "704:70:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 6431,
        "linearizedBaseContracts": [
          6431
        ],
        "name": "IMatchOrders",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Match complementary orders that have a profitable spread.\n      Each order is filled at their respective price point, and\n      the matcher receives a profit denominated in the left maker asset.\n @param leftOrders Set of orders with the same maker / taker asset.\n @param rightOrders Set of orders to match against `leftOrders`\n @param leftSignatures Proof that left orders were created by the left makers.\n @param rightSignatures Proof that right orders were created by the right makers.\n @return batchMatchedFillResults Amounts filled and profit generated.",
            "id": 6387,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchMatchOrders",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6373,
                  "name": "leftOrders",
                  "nodeType": "VariableDeclaration",
                  "scope": 6387,
                  "src": "1461:34:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6081_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 6371,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6081,
                      "src": "1461:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 6372,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1461:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6081_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6376,
                  "name": "rightOrders",
                  "nodeType": "VariableDeclaration",
                  "scope": 6387,
                  "src": "1505:35:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6081_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 6374,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6081,
                      "src": "1505:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 6375,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1505:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6081_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6379,
                  "name": "leftSignatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 6387,
                  "src": "1550:29:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6377,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1550:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 6378,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1550:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6382,
                  "name": "rightSignatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 6387,
                  "src": "1589:30:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6380,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1589:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 6381,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1589:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1451:174:34"
            },
            "returnParameters": {
              "id": 6386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6385,
                  "name": "batchMatchedFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 6387,
                  "src": "1674:69:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BatchMatchedFillResults_$5053_memory_ptr",
                    "typeString": "struct LibFillResults.BatchMatchedFillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6384,
                    "name": "LibFillResults.BatchMatchedFillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5053,
                    "src": "1674:38:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchMatchedFillResults_$5053_storage_ptr",
                      "typeString": "struct LibFillResults.BatchMatchedFillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1673:71:34"
            },
            "scope": 6431,
            "src": "1426:319:34",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Match complementary orders that have a profitable spread.\n      Each order is maximally filled at their respective price point, and\n      the matcher receives a profit denominated in either the left maker asset,\n      right maker asset, or a combination of both.\n @param leftOrders Set of orders with the same maker / taker asset.\n @param rightOrders Set of orders to match against `leftOrders`\n @param leftSignatures Proof that left orders were created by the left makers.\n @param rightSignatures Proof that right orders were created by the right makers.\n @return batchMatchedFillResults Amounts filled and profit generated.",
            "id": 6404,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchMatchOrdersWithMaximalFill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6390,
                  "name": "leftOrders",
                  "nodeType": "VariableDeclaration",
                  "scope": 6404,
                  "src": "2496:34:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6081_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 6388,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6081,
                      "src": "2496:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 6389,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2496:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6081_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6393,
                  "name": "rightOrders",
                  "nodeType": "VariableDeclaration",
                  "scope": 6404,
                  "src": "2540:35:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6081_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 6391,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6081,
                      "src": "2540:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 6392,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2540:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6081_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6396,
                  "name": "leftSignatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 6404,
                  "src": "2585:29:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6394,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2585:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 6395,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2585:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6399,
                  "name": "rightSignatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 6404,
                  "src": "2624:30:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6397,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2624:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 6398,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2624:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2486:174:34"
            },
            "returnParameters": {
              "id": 6403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6402,
                  "name": "batchMatchedFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 6404,
                  "src": "2709:69:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BatchMatchedFillResults_$5053_memory_ptr",
                    "typeString": "struct LibFillResults.BatchMatchedFillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6401,
                    "name": "LibFillResults.BatchMatchedFillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5053,
                    "src": "2709:38:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchMatchedFillResults_$5053_storage_ptr",
                      "typeString": "struct LibFillResults.BatchMatchedFillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2708:71:34"
            },
            "scope": 6431,
            "src": "2446:334:34",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Match two complementary orders that have a profitable spread.\n      Each order is filled at their respective price point. However, the calculations are\n      carried out as though the orders are both being filled at the right order's price point.\n      The profit made by the left order goes to the taker (who matched the two orders).\n @param leftOrder First order to match.\n @param rightOrder Second order to match.\n @param leftSignature Proof that order was created by the left maker.\n @param rightSignature Proof that order was created by the right maker.\n @return matchedFillResults Amounts filled and fees paid by maker and taker of matched orders.",
            "id": 6417,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "matchOrders",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6406,
                  "name": "leftOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 6417,
                  "src": "3539:31:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$6081_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6405,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6081,
                    "src": "3539:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6408,
                  "name": "rightOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 6417,
                  "src": "3580:32:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$6081_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6407,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6081,
                    "src": "3580:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6410,
                  "name": "leftSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 6417,
                  "src": "3622:26:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6409,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6412,
                  "name": "rightSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 6417,
                  "src": "3658:27:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6411,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3658:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3529:162:34"
            },
            "returnParameters": {
              "id": 6416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6415,
                  "name": "matchedFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 6417,
                  "src": "3740:59:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchedFillResults_$5073_memory_ptr",
                    "typeString": "struct LibFillResults.MatchedFillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6414,
                    "name": "LibFillResults.MatchedFillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5073,
                    "src": "3740:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchedFillResults_$5073_storage_ptr",
                      "typeString": "struct LibFillResults.MatchedFillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3739:61:34"
            },
            "scope": 6431,
            "src": "3509:292:34",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Match two complementary orders that have a profitable spread.\n      Each order is maximally filled at their respective price point, and\n      the matcher receives a profit denominated in either the left maker asset,\n      right maker asset, or a combination of both.\n @param leftOrder First order to match.\n @param rightOrder Second order to match.\n @param leftSignature Proof that order was created by the left maker.\n @param rightSignature Proof that order was created by the right maker.\n @return matchedFillResults Amounts filled by maker and taker of matched orders.",
            "id": 6430,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "matchOrdersWithMaximalFill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6419,
                  "name": "leftOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 6430,
                  "src": "4493:31:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$6081_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6418,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6081,
                    "src": "4493:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6421,
                  "name": "rightOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 6430,
                  "src": "4534:32:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$6081_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6420,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6081,
                    "src": "4534:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$6081_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6423,
                  "name": "leftSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 6430,
                  "src": "4576:26:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6422,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4576:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6425,
                  "name": "rightSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 6430,
                  "src": "4612:27:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6424,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4483:162:34"
            },
            "returnParameters": {
              "id": 6429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6428,
                  "name": "matchedFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 6430,
                  "src": "4694:59:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchedFillResults_$5073_memory_ptr",
                    "typeString": "struct LibFillResults.MatchedFillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6427,
                    "name": "LibFillResults.MatchedFillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5073,
                    "src": "4694:33:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchedFillResults_$5073_storage_ptr",
                      "typeString": "struct LibFillResults.MatchedFillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4693:61:34"
            },
            "scope": 6431,
            "src": "4448:307:34",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6432,
        "src": "777:3980:34"
      }
    ],
    "src": "580:4178:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-08T18:48:19.990Z",
  "devdoc": {
    "methods": {
      "batchMatchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],bytes[])": {
        "details": "Match complementary orders that have a profitable spread.      Each order is filled at their respective price point, and      the matcher receives a profit denominated in the left maker asset.",
        "params": {
          "leftOrders": "Set of orders with the same maker / taker asset.",
          "leftSignatures": "Proof that left orders were created by the left makers.",
          "rightOrders": "Set of orders to match against `leftOrders`",
          "rightSignatures": "Proof that right orders were created by the right makers."
        },
        "return": "batchMatchedFillResults Amounts filled and profit generated."
      },
      "batchMatchOrdersWithMaximalFill((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],bytes[])": {
        "details": "Match complementary orders that have a profitable spread.      Each order is maximally filled at their respective price point, and      the matcher receives a profit denominated in either the left maker asset,      right maker asset, or a combination of both.",
        "params": {
          "leftOrders": "Set of orders with the same maker / taker asset.",
          "leftSignatures": "Proof that left orders were created by the left makers.",
          "rightOrders": "Set of orders to match against `leftOrders`",
          "rightSignatures": "Proof that right orders were created by the right makers."
        },
        "return": "batchMatchedFillResults Amounts filled and profit generated."
      },
      "matchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),bytes,bytes)": {
        "details": "Match two complementary orders that have a profitable spread.      Each order is filled at their respective price point. However, the calculations are      carried out as though the orders are both being filled at the right order's price point.      The profit made by the left order goes to the taker (who matched the two orders).",
        "params": {
          "leftOrder": "First order to match.",
          "leftSignature": "Proof that order was created by the left maker.",
          "rightOrder": "Second order to match.",
          "rightSignature": "Proof that order was created by the right maker."
        },
        "return": "matchedFillResults Amounts filled and fees paid by maker and taker of matched orders."
      },
      "matchOrdersWithMaximalFill((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),bytes,bytes)": {
        "details": "Match two complementary orders that have a profitable spread.      Each order is maximally filled at their respective price point, and      the matcher receives a profit denominated in either the left maker asset,      right maker asset, or a combination of both.",
        "params": {
          "leftOrder": "First order to match.",
          "leftSignature": "Proof that order was created by the left maker.",
          "rightOrder": "Second order to match.",
          "rightSignature": "Proof that order was created by the right maker."
        },
        "return": "matchedFillResults Amounts filled by maker and taker of matched orders."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}