{
  "contractName": "Getters",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            }
          ],
          "internalType": "struct Account.Info",
          "name": "account",
          "type": "tuple"
        }
      ],
      "name": "getAccountBalances",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "sign",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "value",
              "type": "uint128"
            }
          ],
          "internalType": "struct Types.Par[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "sign",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct Types.Wei[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"internalType\":\"struct Account.Info\",\"name\":\"account\",\"type\":\"tuple\"}],\"name\":\"getAccountBalances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"sign\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"}],\"internalType\":\"struct Types.Par[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"sign\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.Wei[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"dYdX * Public read-only functions that allow transparency into the state of Solo\",\"methods\":{\"getAccountBalances((address,uint256))\":{\"params\":{\"account\":\"The account to query\"},\"return\":\"The following values:                  - The ERC20 token address for each market                  - The account's principal value for each market                  - The account's (supplied or borrowed) number of tokens for each market\"}},\"title\":\"Getters\"},\"userdoc\":{\"methods\":{\"getAccountBalances((address,uint256))\":{\"notice\":\"Get an account's summary for each market.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/Getters.sol\":\"Getters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/Getters.sol\":{\"keccak256\":\"0xd7bf0e70fa2f1d26fdc392447dbbfc8461ba88562150541b0893ee44c604c4a2\",\"urls\":[\"bzz-raw://39a17dd1e7bad1048234d7c6dc2ec3bb21f4a812b4c647b3308f63f50813366e\",\"dweb:/ipfs/QmZ5LgsXeHBaiGSZNncjAz7VgAnxS1ZoMheWKv9WPgDHJt\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Account.sol\":{\"keccak256\":\"0xcb02db4f56e9881e6e66c0c7c95d8535fb478c50b6f5968795d9faa82539ac94\",\"urls\":[\"bzz-raw://c4c269cfe846001565260ea1efb0a3ae4f4a1ebc11ffbd6f37238e8984334ac5\",\"dweb:/ipfs/QmSe2bwJamsWkAJm7DukMK6qDhhTRCZV1vAPpchmtQj2Fd\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Types.sol\":{\"keccak256\":\"0x58e671ee904e1ef5f950729db065df05b474a58813487d9eebcc7439af886f49\",\"urls\":[\"bzz-raw://00c791df9ad17b4c2533774a465201f2287aea6b5e86bda32b7d2b5aa5d13569\",\"dweb:/ipfs/QmT7iCbSNnbA6Qh28CCLPzGnUFsXsymj64jbqDKXSJYf3U\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n\n    Copyright 2019 dYdX Trading Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n*/\n\npragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\nimport { Account } from \"./lib/Account.sol\";\nimport { Types } from \"./lib/Types.sol\";\n\n\n/**\n * @title Getters\n * @author dYdX\n *\n * Public read-only functions that allow transparency into the state of Solo\n */\ncontract Getters {\n    using Types for Types.Par;\n\n    /**\n     * Get an account's summary for each market.\n     *\n     * @param  account  The account to query\n     * @return          The following values:\n     *                   - The ERC20 token address for each market\n     *                   - The account's principal value for each market\n     *                   - The account's (supplied or borrowed) number of tokens for each market\n     */\n    function getAccountBalances(\n        Account.Info memory account\n    )\n        public\n        view\n        returns (\n            address[] memory,\n            Types.Par[] memory,\n            Types.Wei[] memory\n        );\n}\n",
  "sourcePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/Getters.sol",
  "ast": {
    "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/Getters.sol",
    "exportedSymbols": {
      "Getters": [
        3433
      ]
    },
    "id": 3434,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3410,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:23:8"
      },
      {
        "id": 3411,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "627:33:8"
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Account.sol",
        "file": "./lib/Account.sol",
        "id": 3413,
        "nodeType": "ImportDirective",
        "scope": 3434,
        "sourceUnit": 3472,
        "src": "662:44:8",
        "symbolAliases": [
          {
            "foreign": 3412,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Types.sol",
        "file": "./lib/Types.sol",
        "id": 3415,
        "nodeType": "ImportDirective",
        "scope": 3434,
        "sourceUnit": 3534,
        "src": "707:40:8",
        "symbolAliases": [
          {
            "foreign": 3414,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Getters\n@author dYdX\n * Public read-only functions that allow transparency into the state of Solo",
        "fullyImplemented": false,
        "id": 3433,
        "linearizedBaseContracts": [
          3433
        ],
        "name": "Getters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3418,
            "libraryName": {
              "contractScope": null,
              "id": 3416,
              "name": "Types",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3533,
              "src": "901:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Types_$3533",
                "typeString": "library Types"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "895:26:8",
            "typeName": {
              "contractScope": null,
              "id": 3417,
              "name": "Types.Par",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3527,
              "src": "911:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Par_$3527_storage_ptr",
                "typeString": "struct Types.Par"
              }
            }
          },
          {
            "body": null,
            "documentation": "Get an account's summary for each market.\n     * @param  account  The account to query\n@return          The following values:\n                  - The ERC20 token address for each market\n                  - The account's principal value for each market\n                  - The account's (supplied or borrowed) number of tokens for each market",
            "id": 3432,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountBalances",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3420,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3432,
                  "src": "1364:27:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$3470_memory_ptr",
                    "typeString": "struct Account.Info"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3419,
                    "name": "Account.Info",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3470,
                    "src": "1364:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$3470_storage_ptr",
                      "typeString": "struct Account.Info"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1354:43:8"
            },
            "returnParameters": {
              "id": 3431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3424,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3432,
                  "src": "1456:16:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3422,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1456:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3423,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1456:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3427,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3432,
                  "src": "1486:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Par_$3527_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Par[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3425,
                      "name": "Types.Par",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 3527,
                      "src": "1486:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Par_$3527_storage_ptr",
                        "typeString": "struct Types.Par"
                      }
                    },
                    "id": 3426,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1486:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Par_$3527_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Par[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3430,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3432,
                  "src": "1518:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Wei_$3532_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Wei[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3428,
                      "name": "Types.Wei",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 3532,
                      "src": "1518:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Wei_$3532_storage_ptr",
                        "typeString": "struct Types.Wei"
                      }
                    },
                    "id": 3429,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1518:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Wei_$3532_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Wei[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1442:104:8"
            },
            "scope": 3433,
            "src": "1327:220:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3434,
        "src": "872:677:8"
      }
    ],
    "src": "603:947:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/Getters.sol",
    "exportedSymbols": {
      "Getters": [
        3433
      ]
    },
    "id": 3434,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3410,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:23:8"
      },
      {
        "id": 3411,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "627:33:8"
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Account.sol",
        "file": "./lib/Account.sol",
        "id": 3413,
        "nodeType": "ImportDirective",
        "scope": 3434,
        "sourceUnit": 3472,
        "src": "662:44:8",
        "symbolAliases": [
          {
            "foreign": 3412,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Types.sol",
        "file": "./lib/Types.sol",
        "id": 3415,
        "nodeType": "ImportDirective",
        "scope": 3434,
        "sourceUnit": 3534,
        "src": "707:40:8",
        "symbolAliases": [
          {
            "foreign": 3414,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Getters\n@author dYdX\n * Public read-only functions that allow transparency into the state of Solo",
        "fullyImplemented": false,
        "id": 3433,
        "linearizedBaseContracts": [
          3433
        ],
        "name": "Getters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3418,
            "libraryName": {
              "contractScope": null,
              "id": 3416,
              "name": "Types",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3533,
              "src": "901:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Types_$3533",
                "typeString": "library Types"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "895:26:8",
            "typeName": {
              "contractScope": null,
              "id": 3417,
              "name": "Types.Par",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3527,
              "src": "911:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Par_$3527_storage_ptr",
                "typeString": "struct Types.Par"
              }
            }
          },
          {
            "body": null,
            "documentation": "Get an account's summary for each market.\n     * @param  account  The account to query\n@return          The following values:\n                  - The ERC20 token address for each market\n                  - The account's principal value for each market\n                  - The account's (supplied or borrowed) number of tokens for each market",
            "id": 3432,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountBalances",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3420,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3432,
                  "src": "1364:27:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$3470_memory_ptr",
                    "typeString": "struct Account.Info"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3419,
                    "name": "Account.Info",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3470,
                    "src": "1364:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$3470_storage_ptr",
                      "typeString": "struct Account.Info"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1354:43:8"
            },
            "returnParameters": {
              "id": 3431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3424,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3432,
                  "src": "1456:16:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3422,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1456:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3423,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1456:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3427,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3432,
                  "src": "1486:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Par_$3527_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Par[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3425,
                      "name": "Types.Par",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 3527,
                      "src": "1486:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Par_$3527_storage_ptr",
                        "typeString": "struct Types.Par"
                      }
                    },
                    "id": 3426,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1486:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Par_$3527_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Par[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3430,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3432,
                  "src": "1518:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Wei_$3532_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Wei[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3428,
                      "name": "Types.Wei",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 3532,
                      "src": "1518:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Wei_$3532_storage_ptr",
                        "typeString": "struct Types.Wei"
                      }
                    },
                    "id": 3429,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1518:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Wei_$3532_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Wei[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1442:104:8"
            },
            "scope": 3433,
            "src": "1327:220:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3434,
        "src": "872:677:8"
      }
    ],
    "src": "603:947:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-13T03:22:42.221Z",
  "devdoc": {
    "author": "dYdX * Public read-only functions that allow transparency into the state of Solo",
    "methods": {
      "getAccountBalances((address,uint256))": {
        "params": {
          "account": "The account to query"
        },
        "return": "The following values:                  - The ERC20 token address for each market                  - The account's principal value for each market                  - The account's (supplied or borrowed) number of tokens for each market"
      }
    },
    "title": "Getters"
  },
  "userdoc": {
    "methods": {
      "getAccountBalances((address,uint256))": {
        "notice": "Get an account's summary for each market."
      }
    }
  }
}