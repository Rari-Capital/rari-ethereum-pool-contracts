{
  "contractName": "LendingPool",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_referralCode",
          "type": "uint16"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"methods\":{\"deposit(address,uint256,uint16)\":{\"details\":\"deposits The underlying asset into the reserve. A corresponding amount of the overlying asset (aTokens) is minted.\",\"params\":{\"_amount\":\"the amount to be deposited\",\"_referralCode\":\"integrators are assigned a referral code and can potentially receive rewards.\",\"_reserve\":\"the address of the reserve\"}}},\"title\":\"LendingPool contract\"},\"userdoc\":{\"methods\":{},\"notice\":\"Implements the actions of the LendingPool, and exposes accessory methods to fetch the users and reserve data\"}},\"settings\":{\"compilationTarget\":{\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/aave/LendingPool.sol\":\"LendingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/aave/LendingPool.sol\":{\"keccak256\":\"0x80b3a92bd70711f9b2e030700c41ebb9c82b164bf6579a60d5ecde45dc4d74d0\",\"urls\":[\"bzz-raw://813a377cde8183b894b295f8aae134b2ec5d1ac4f7469bc1ed2dae0f4f5d76e9\",\"dweb:/ipfs/QmRRdg2hKqFD9YKTMugq5Ax8Ti5u3G36JxaA2YtArKaLfc\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/**\n * Aave Protocol\n * Copyright (C) 2019 Aave\n * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details\n */\n\npragma solidity 0.5.17;\n\n/**\n * @title LendingPool contract\n * @notice Implements the actions of the LendingPool, and exposes accessory methods to fetch the users and reserve data\n * @author Aave\n */\ncontract LendingPool {\n    /**\n     * @dev deposits The underlying asset into the reserve. A corresponding amount of the overlying asset (aTokens)\n     * is minted.\n     * @param _reserve the address of the reserve\n     * @param _amount the amount to be deposited\n     * @param _referralCode integrators are assigned a referral code and can potentially receive rewards.\n     */\n    function deposit(address _reserve, uint256 _amount, uint16 _referralCode) external payable;\n}",
  "sourcePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/aave/LendingPool.sol",
  "ast": {
    "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/aave/LendingPool.sol",
    "exportedSymbols": {
      "LendingPool": [
        3352
      ]
    },
    "id": 3353,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3342,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "528:23:6"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title LendingPool contract\n@notice Implements the actions of the LendingPool, and exposes accessory methods to fetch the users and reserve data\n@author Aave",
        "fullyImplemented": false,
        "id": 3352,
        "linearizedBaseContracts": [
          3352
        ],
        "name": "LendingPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev deposits The underlying asset into the reserve. A corresponding amount of the overlying asset (aTokens)\nis minted.\n@param _reserve the address of the reserve\n@param _amount the amount to be deposited\n@param _referralCode integrators are assigned a referral code and can potentially receive rewards.",
            "id": 3351,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3344,
                  "name": "_reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 3351,
                  "src": "1127:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3346,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3351,
                  "src": "1145:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3348,
                  "name": "_referralCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 3351,
                  "src": "1162:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 3347,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:57:6"
            },
            "returnParameters": {
              "id": 3350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:0:6"
            },
            "scope": 3352,
            "src": "1110:91:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3353,
        "src": "728:475:6"
      }
    ],
    "src": "528:675:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/aave/LendingPool.sol",
    "exportedSymbols": {
      "LendingPool": [
        3352
      ]
    },
    "id": 3353,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3342,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "528:23:6"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title LendingPool contract\n@notice Implements the actions of the LendingPool, and exposes accessory methods to fetch the users and reserve data\n@author Aave",
        "fullyImplemented": false,
        "id": 3352,
        "linearizedBaseContracts": [
          3352
        ],
        "name": "LendingPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev deposits The underlying asset into the reserve. A corresponding amount of the overlying asset (aTokens)\nis minted.\n@param _reserve the address of the reserve\n@param _amount the amount to be deposited\n@param _referralCode integrators are assigned a referral code and can potentially receive rewards.",
            "id": 3351,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3344,
                  "name": "_reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 3351,
                  "src": "1127:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3346,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3351,
                  "src": "1145:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3348,
                  "name": "_referralCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 3351,
                  "src": "1162:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 3347,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:57:6"
            },
            "returnParameters": {
              "id": 3350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:0:6"
            },
            "scope": 3352,
            "src": "1110:91:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3353,
        "src": "728:475:6"
      }
    ],
    "src": "528:675:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-09T05:26:08.029Z",
  "devdoc": {
    "author": "Aave",
    "methods": {
      "deposit(address,uint256,uint16)": {
        "details": "deposits The underlying asset into the reserve. A corresponding amount of the overlying asset (aTokens) is minted.",
        "params": {
          "_amount": "the amount to be deposited",
          "_referralCode": "integrators are assigned a referral code and can potentially receive rewards.",
          "_reserve": "the address of the reserve"
        }
      }
    },
    "title": "LendingPool contract"
  },
  "userdoc": {
    "methods": {},
    "notice": "Implements the actions of the LendingPool, and exposes accessory methods to fetch the users and reserve data"
  }
}