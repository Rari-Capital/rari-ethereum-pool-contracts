{
  "contractName": "RariFundProxy",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "FundManagerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "GsnTrustedSignerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "inputCurrencyCode",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "outputErc20Contract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerAssetFilledAmount",
          "type": "uint256"
        }
      ],
      "name": "PostWithdrawalExchange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "inputErc20Contract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "outputCurrencyCode",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "makerAssetFilledAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "PreDepositExchange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldRelayHub",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRelayHub",
          "type": "address"
        }
      ],
      "name": "RelayHubChanged",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getHubAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "actualCharge",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "preRetVal",
          "type": "bytes32"
        }
      ],
      "name": "postRelayedCall",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        }
      ],
      "name": "preRelayedCall",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "relayHubVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "setFundManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "setGsnTrustedSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "relay",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "encodedFunction",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "transactionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "approvalData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "acceptRelayedCall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"FundManagerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"GsnTrustedSignerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"inputCurrencyCode\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"outputErc20Contract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"}],\"name\":\"PostWithdrawalExchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"inputErc20Contract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"outputCurrencyCode\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"PreDepositExchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRelayHub\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRelayHub\",\"type\":\"address\"}],\"name\":\"RelayHubChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"relay\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedFunction\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"transactionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"acceptRelayedCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"actualCharge\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"preRetVal\",\"type\":\"bytes32\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"relayHubVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"setFundManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setGsnTrustedSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract faciliates deposits to RariFundManager from exchanges and withdrawals from RariFundManager for exchanges.\",\"methods\":{\"acceptRelayedCall(address,address,bytes,uint256,uint256,uint256,uint256,bytes,uint256)\":{\"details\":\"Ensures that only transactions with a trusted signature can be relayed through the GSN.\"},\"constructor\":{\"details\":\"Constructor that sets supported ERC20 token contract addresses.\"},\"deposit()\":{\"return\":\"Boolean indicating success.\"},\"getHubAddr()\":{\"details\":\"Returns the address of the {IRelayHub} contract for this recipient.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,bytes32)\":{\"details\":\"See `IRelayRecipient.postRelayedCall`.     * This function should not be overriden directly, use `_postRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract.\"},\"preRelayedCall(bytes)\":{\"details\":\"See `IRelayRecipient.preRelayedCall`.     * This function should not be overriden directly, use `_preRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract.\"},\"relayHubVersion()\":{\"details\":\"Returns the version string of the {IRelayHub} for which this recipient implementation was built. If {_upgradeRelayHub} is used, the new {IRelayHub} instance should be compatible with this version.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFundManager(address)\":{\"details\":\"Sets or upgrades the RariFundManager of the RariFundProxy.\",\"params\":{\"newContract\":\"The address of the new RariFundManager contract.\"}},\"setGsnTrustedSigner(address)\":{\"details\":\"Sets or upgrades the trusted GSN signer of the RariFundProxy.\",\"params\":{\"newAddress\":\"The Ethereum address of the new trusted GSN signer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"RariFundProxy\"},\"userdoc\":{\"methods\":{\"deposit()\":{\"notice\":\"Deposits funds to RariFund in exchange for REFT (with GSN support). You may only deposit ETH. Please note that you must approve RariFundProxy to transfer at least `amount`.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundProxy.sol\":\"RariFundProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundController.sol\":{\"keccak256\":\"0x6a427c353192c252414dfe63efaff7dd535490bcaeea0e7523ac4dd14c4fe106\",\"urls\":[\"bzz-raw://7ff5bbbd9a6834424da51083d056b087348b696f00828f92b0707606b4a13e33\",\"dweb:/ipfs/QmbGrvK9UzxEEarFt4uwQa3MQ6MxwxgB2g3dwRTt8kGaHS\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundManager.sol\":{\"keccak256\":\"0x4eca085633ba6895c3e4de0dc1153948089ed8191f0190e5cf86caa230caa2dd\",\"urls\":[\"bzz-raw://0dc15cc05b4ad28c30cfec62c4b897c06ae905883abe342e287a648c1cc40614\",\"dweb:/ipfs/QmNrjwHn8A2jA265YV41ZJyeLHENkJvDd7PiD5vfobACAf\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundProxy.sol\":{\"keccak256\":\"0x3c515e2549901ba4a85372e8fbaec9aa9a2dd4d59c031b0ecc95c8dd2162137a\",\"urls\":[\"bzz-raw://c7f7592045404e115be558a24e28e509564f6da22097931867944fa950696bd1\",\"dweb:/ipfs/QmUxEeLPn5VeKpja7EJvhN4z8vZkArNDureTDZtGTjHUiX\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundToken.sol\":{\"keccak256\":\"0x0f20794fd598d707c98a5a491cda3993bec9123dc660b56e4e0e479e5668deaa\",\"urls\":[\"bzz-raw://4129c6ab03d79152564ec9b12217e39dcd957ab243ab25d4f832d80697c07b28\",\"dweb:/ipfs/Qmb65DKDcWxGjRDv6pdt9sg4tj6XJc7FN7JLDoT8LC8gv8\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/compound/CEther.sol\":{\"keccak256\":\"0x71ac76daac18a2d7a69a5f373a6db61c03dc21a2d3b958c5f2599976aee20168\",\"urls\":[\"bzz-raw://4107f3188d54de166735a3e5df58b00a4f8dc2050724db9f8697e223fedfb871\",\"dweb:/ipfs/QmS1oR8etb1SuKZ2Cm4Vf57Y9iPHURJSkanmdCvQtoshfb\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/Getters.sol\":{\"keccak256\":\"0x4a9b28daee59e2b87c5beed1076e95fbc96f769e42423bda01ec723b44549d91\",\"urls\":[\"bzz-raw://2cf107cdee5647d069439ba6c5f17d9370d4ae718ebc4f6ae297d123f98af95d\",\"dweb:/ipfs/QmbthqBfbawLZZ9EJmpcdwtFPMMvr7vhcHcxoaBrAXUiiT\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/Operation.sol\":{\"keccak256\":\"0x202d5c176ebe31605576a91f2bb6c631137331c225a7b067558eee86c4a84974\",\"urls\":[\"bzz-raw://bf9cefea1126cf6eec6ec9bc0cc0c5271fda0d690b7cfe627412371c27f185f1\",\"dweb:/ipfs/QmQN7JgRdvsLGFTZyAsRqbc6BrWFKzLHJRQ7jntVgx6bt6\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/SoloMargin.sol\":{\"keccak256\":\"0x2b4ffe2834f34174e74388f29e41a6d7613da3c2e31ff3431aa5cab340a786ec\",\"urls\":[\"bzz-raw://9595a5d0ec6882a083c3c051ec56d6254954fbb3649b2c0c77160b30f308b755\",\"dweb:/ipfs/QmeHHCPiwPjtCdRfpFwGrjqjKpuVzuQKbeAbbCRVFFNjjx\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Account.sol\":{\"keccak256\":\"0xa6ddfaeadda74522bfc34d1effa41ec16f61c2ca8507357199f28069f8a5a422\",\"urls\":[\"bzz-raw://abe54954f5e3fb6cd6af6d0d94ebba97d257b02875e45788e4c5ae5ef074853f\",\"dweb:/ipfs/QmQ4rBopBUNUYQABMj3g2YQqbSAmKtuQoXgMFp4aMa338v\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Actions.sol\":{\"keccak256\":\"0xc26bbe9bf4bac61cb7da76e976d99bfee033dcc7a86f581f1df27ad843efb44b\",\"urls\":[\"bzz-raw://30d88c181b7ea0f1e3c47d7acc5c38efda93fc40e54a1d1e303415be2cf013f9\",\"dweb:/ipfs/QmduNLGfprnVgG3JBr4HcpT67ie547oEZDuVQL7QGub9Lk\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Types.sol\":{\"keccak256\":\"0xb8e6b2a30658b94417df2e5922efa6e834963952cb25f6737aaa2375ea26e7a1\",\"urls\":[\"bzz-raw://291775fbd7fc2021e8eb3c5ed0986d58e6192c081a94fd1c11e1af6e6aee9053\",\"dweb:/ipfs/Qmev7mWwXFUYnf68cG3WsuF3SS5mfbiTv2FLZ3zCAoYSby\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/exchanges/ZeroExExchangeController.sol\":{\"keccak256\":\"0x076383c87fff3f06360275bb463c0239b0124b6b1f6c9a1445d7234327c4c736\",\"urls\":[\"bzz-raw://ee4a32817d7317823fef413d947eb38fb2d1055f781588094e3c680995a5bc8f\",\"dweb:/ipfs/QmRLByXV7kEzUJaHsQ18dtCAbhnVKwSTY2goU6rvYiijcH\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/pools/CompoundPoolController.sol\":{\"keccak256\":\"0x94197254d96ac8cce22b7197c3a1bfdfcacd7509b89cf5401e7f516f4bad1662\",\"urls\":[\"bzz-raw://2a86f77caa70c1cca030fdf5138ecf4721946bc4cf90a12b409a4bcff42e745a\",\"dweb:/ipfs/Qma3ZGx2hVRYsKmebvyBqXsZwGCeKCGa1b1wdDYqeS98qx\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/pools/DydxPoolController.sol\":{\"keccak256\":\"0xfd4caf80caac1ec2c325ee7a4fa8164b5d8915e4602dc10f178e1ca870cffdde\",\"urls\":[\"bzz-raw://4e20346dc880531974ec25c4943c881e5544658639b70e6df6703a9a0c34d300\",\"dweb:/ipfs/QmRmbEh5pvCDiqtLY67yEP2i1QVuvvESJCum6WoxegPLx6\"]},\"@0x/contracts-erc20/contracts/src/interfaces/IERC20Token.sol\":{\"keccak256\":\"0xa2ce97ac96d473e134efa0f62f63c20f7855fe0c9490f277392d2535f7e1cd64\",\"urls\":[\"bzz-raw://cee5a2ea25613b8adeb0f5ff5bacb164d6f5adf76dfb5d3bd9832ba3a4d02e8c\",\"dweb:/ipfs/Qmd5B5xuAqRQXxpGpUEXDsvch95weH4929kWxoApLy3kVC\"]},\"@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol\":{\"keccak256\":\"0xaf2c60dd9ed2cb3e4e07eb118e89619973c624cad9938215be2fec63780e254e\",\"urls\":[\"bzz-raw://7cb2290791d26ac48cbb2ce4918bd541f16634bdc29b80c29e814c51bc930e77\",\"dweb:/ipfs/QmaxAsWHv3TXNVibzihLtWUPVuxGXnihit9K9Dq6HmepXw\"]},\"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\":{\"keccak256\":\"0xedb2f1e66e7ece2302b4dd19d0ef29a0ffeefddae7e9a81f7104155ac3cbb75b\",\"urls\":[\"bzz-raw://9a490801ffde73bb98aa3de52ef2d615894d188820ebe4c8cd340f5cd33462ad\",\"dweb:/ipfs/QmUTSaJ6GTvNoYCmpd9dv2mz25vakoLS9tQpiF1ohAUMFV\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMath.sol\":{\"keccak256\":\"0xc331418f75cd832accf9dc439be811e10d99f1d2de3a9c0321fd3f127cdf1e54\",\"urls\":[\"bzz-raw://8a090ac0a55200b6f5624c41fff2ad21e5c673b7fcd0faf1bc88017087bbb1b2\",\"dweb:/ipfs/QmWhxuazHstpSCYDQJscHnAh6ngW7SHKT79t6yQHaJHgmi\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMathRichErrors.sol\":{\"keccak256\":\"0xd2d047534facd6051467dd7a22d7ee9fd4e54e63bb5a5fae2511eac7332fad3d\",\"urls\":[\"bzz-raw://5e0aeedd55c996fd72004a14f5c528ed60b46631ca9599bbb7925c8342ca3be4\",\"dweb:/ipfs/QmNi1ozt4sYmn4pCobjU7FQ4KGUvK77pCyWUtbD18uQgVm\"]},\"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\":{\"keccak256\":\"0x1b7b1e1a2dff4249c6f6c500000342a805f372131797b6d7314435204a651ad4\",\"urls\":[\"bzz-raw://19c11b77022ccfa530af75f236ea00ecb92aa5476f96abbde268163660b3906b\",\"dweb:/ipfs/Qmf1MtwPLpocsBArn8Npyzu4AtMqSagYTuee8JdbMXXwHM\"]},\"@0x/contracts-exchange-libs/contracts/src/LibZeroExTransaction.sol\":{\"keccak256\":\"0x15e9dddfeb5b17b6d44a6be19b3f5f2cf2a2af24174cd623fcd731fb5204635a\",\"urls\":[\"bzz-raw://9014066b0fcf65ba9ecec88fc41e3413ef27c039159abd1203f0a48bb61e498d\",\"dweb:/ipfs/QmRAF6q5XrQV7pPZM1aaahRHAMba9hh6iUeRgW2fzFgn87\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IAssetProxyDispatcher.sol\":{\"keccak256\":\"0x5aa3bcc134f9ff77da4f5ba42a17a62391f5adafd605658dcdcdd7c352d52e25\",\"urls\":[\"bzz-raw://92d355e026a2635f561621e7c835eac53ea15c40375bacc78f57c9c67b9793c4\",\"dweb:/ipfs/QmeiYbPmb3yBQ66V1HRKfDUoPGof6AxWsPQfJLfau4j7d4\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IExchange.sol\":{\"keccak256\":\"0x208c082d30b28d322d5828ba2a6b880b4366c3f9d45853456424bbc036ede0cb\",\"urls\":[\"bzz-raw://d0e8dd59721cdacc192c5d44123cb84bcc78cdb067873e616f6a4f2533868418\",\"dweb:/ipfs/Qmb6QJTLz8QTyFVYPFjRRL7TwovSdALe3kk43fUoYZs1cg\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IExchangeCore.sol\":{\"keccak256\":\"0xbccc362e85d592e0cc73108c3f7d8f66d58e449e42dbcc099442984446264b36\",\"urls\":[\"bzz-raw://383ae2d931d565fce7f046904601e1c54446c859a046af90c3d2591efe45a3f9\",\"dweb:/ipfs/QmTrfsEGAr38zgNYTHLjCuHfa7nw2hA64qvP8tLSMDgAjT\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IMatchOrders.sol\":{\"keccak256\":\"0x57e052667a28152057a1ab25b958b55d9c79afe95ea5ab645692bad18e5504b3\",\"urls\":[\"bzz-raw://de35bf6f6ab53af3dcb6b09999840adbc161c1f59623940670f552b59a28b147\",\"dweb:/ipfs/QmebunP1nLEWkMPqbFY8iQewkaUUZH5xVAs3erGerqf264\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x46928eb127258c64e030b298c935371eacc8beb8abc7ff09869d6f6ae99fa5a8\",\"urls\":[\"bzz-raw://b49ac75bdaec7a4767c15ad09640282ce1656b8e4112882a65b669d89474b5fe\",\"dweb:/ipfs/QmeRbdDvipy5x5MmSMiVXDT1pH3FeiT5v5ek7zNZom3378\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0xfaff6f59dc8d9ab1003f8408e104d10d261208187e349153c075da0b71f400cd\",\"urls\":[\"bzz-raw://10290e91a633564fc0b1e732aec3321a3bf60122b79069f90e8ce037dd8799b5\",\"dweb:/ipfs/QmaTZxNZkimMxsjTCS47sJgnfaZkG4gcTgawLAadxjkjFv\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ITransactions.sol\":{\"keccak256\":\"0x323b06d8e93e8fd96e563070bdccac7c760437326a845d75a0b1cc9224cbcda8\",\"urls\":[\"bzz-raw://3b2a2c7585783a8555d43817d7813e6465718d31fd6084e4f4c2c5d2560b8909\",\"dweb:/ipfs/QmQoiknyN4HvVvGQKbBqniD1Y2nc4R7KmXFNip7tGs5GvT\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ITransferSimulator.sol\":{\"keccak256\":\"0x15a3952999620388de42961b069f2ebde0c5900d31a10a4b8d7dc6c315d1ef7e\",\"urls\":[\"bzz-raw://6324f0cfee0ea4a0cf68858fd634b7e9c085faa75d298fc582f3c76ce4400400\",\"dweb:/ipfs/QmVeyHXXGuUHKAu9c8MU8SwEcD3omsdogK86xcE7435gE6\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IWrapperFunctions.sol\":{\"keccak256\":\"0xe463eb4df5a24faff9aa0eb5b957fb6249f86dd52d42c53fd21212926efc6fb0\",\"urls\":[\"bzz-raw://96d0862b48d996587122077eecb6b136a5dfa0d3de1e531dd665e9d5a4686732\",\"dweb:/ipfs/QmSBMvMxEhHJZDj5aWeSjSoV5QWCTyCNnzBTX9yuuU6nLL\"]},\"@0x/contracts-utils/contracts/src/LibEIP712.sol\":{\"keccak256\":\"0xe19c3cbc71fbea0fdb45c1763306550015d940bea9dbec5f3fd2edfe2165d673\",\"urls\":[\"bzz-raw://267d263f0453352a1ac8d8085a13c4976fb8c964eff8d3aab0a84173d1438efb\",\"dweb:/ipfs/QmbaRw85MYYP3KTmQ68gYdEnFyMqD7frwjxxwsj4j4JCr1\"]},\"@0x/contracts-utils/contracts/src/LibRichErrors.sol\":{\"keccak256\":\"0xe3ce6ded2fea3cc80998ca4d364bda530e273af0ba1c78d22a6cdadb6f64186e\",\"urls\":[\"bzz-raw://8239629dbcee9797a8f8157f03c2b78827b446787b4d53b3033a3e1ab538ad0b\",\"dweb:/ipfs/QmbttkX94CxMkS6t1K4He5bNwGKCRUhKqTt9pNsAL5ynst\"]},\"@0x/contracts-utils/contracts/src/LibSafeMath.sol\":{\"keccak256\":\"0xd0da9ac1905381832f6612774cb7eced3b4b60459d6bafa59f5424955b44c935\",\"urls\":[\"bzz-raw://ede4bbe2dac43c6cc4e3b7a22285e00d55b31fb8cc00b375c6ac4714298b7e6d\",\"dweb:/ipfs/QmWbN5qbJSNYrMMZMugaH5itTVSexe9yPsCPuArQVCLUgi\"]},\"@0x/contracts-utils/contracts/src/LibSafeMathRichErrors.sol\":{\"keccak256\":\"0xcf6adae04bd7af8e41fcd40ad148cc3d1cd5596bd42b01961b735c9b416a6572\",\"urls\":[\"bzz-raw://103791140e631e9d670bbc99e5f8e546f56061c5d49de97754006ce2c252d61e\",\"dweb:/ipfs/QmeRMyYFSk7n1sLzRSGqxcoX1sKQSdAQya6bRy6nseu6xX\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/GSN/GSNRecipient.sol\":{\"keccak256\":\"0x9d9267b9b249d5040e706ae936fbbe8d80418a7eeb6286103ff85b57db0bea84\",\"urls\":[\"bzz-raw://624c1d98abb6ff21b773d8e327dbe4aaea1494e9f956ecbda1dc3286bcf26846\",\"dweb:/ipfs/QmdYcda4xspypcyKwJCSbT8Dq9cTcmpeNFLoyXmZgmW6WA\"]},\"@openzeppelin/contracts/GSN/IRelayHub.sol\":{\"keccak256\":\"0xe40a4875c43518eb0507b19bc4a3a72c01774c73f15188e549ada1ecc8898baf\",\"urls\":[\"bzz-raw://ce505b8a52dc44924ca700ce3909a7f764608f9c6317f5033966ec94fca3023b\",\"dweb:/ipfs/QmTysxtzyvNF3wazXAzYMUeSgQZEpPaVV2L1tbhAtmsVod\"]},\"@openzeppelin/contracts/GSN/IRelayRecipient.sol\":{\"keccak256\":\"0x88c5716536287306f923379dae33b5e5bdc21d70ec0c440109f866d7edab7ca3\",\"urls\":[\"bzz-raw://4c5c6649a7603fb414d84fefef259e44a512df3d738c56250da1c8fa0271dc4c\",\"dweb:/ipfs/QmQGquucxTmw2isWEUf2JY25hFd5DR4U88zW7xhw5UgV3q\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"@openzeppelin/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzz-raw://b736ddad8143f8f1cd13c20809d4ebce5f5a8c7725081b0b703294078bd506d1\",\"dweb:/ipfs/QmdhTWCXFCuwG9JaPMjwnhkQoDj9su8R7KMPNvD5z9KeWD\"]},\"@openzeppelin/contracts/drafts/SignedSafeMath.sol\":{\"keccak256\":\"0xf1587a6daea33c93e85fff4e205967183de459159aafcb01b7397fb7ec1f9f77\",\"urls\":[\"bzz-raw://1ac4f5402c6f72193c2ac0d5d878b60defb6b7cd9e13a75fe1e20654618b6375\",\"dweb:/ipfs/QmTaR64X6RsWzXvVGxPCaAoW7ZZ8Fhiii4ddRo7QpQGBrx\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9b94356691f3cbf90a5d83ae3fdf6a5a662bb004d2bd8b034160d60221807e64\",\"urls\":[\"bzz-raw://14a9d33db455302b8bb9fdb28998efefbe5a1cb41b29e31391609f646b2ab351\",\"dweb:/ipfs/Qmd4wFr6GEMZnnxgXeq3gmp7cs8tqDuHp3TVNhCbjnux2V\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xa2b957cf89692c504962afb7506999155f83385373f808243246cd5879de5940\",\"urls\":[\"bzz-raw://c44ae0ad1bce141c33b962f8b4e9228bdf8df36c8ac363b4f0bf9498b8bfc32a\",\"dweb:/ipfs/QmcSBRdFwVvy2wFZrBwo5cvqNP4UHh9Eyzf8jnxBgnPqfe\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80638da5cb5b1161007f578063d0e30db011610059578063d0e30db0146101f8578063e06e0e2214610200578063f2fde38b14610220578063ffa1ad7414610240576100c2565b80638da5cb5b1461019f5780638f32d59b146101b4578063ad61ccd5146101d6576100c2565b8063232a3060146100c45780634434ac3d146100e4578063715018a61461010457806374e861d61461011957806380274db71461014457806383947ea014610171575b005b3480156100d057600080fd5b506100c26100df366004610b34565b610255565b3480156100f057600080fd5b506100c26100ff366004610b34565b610434565b34801561011057600080fd5b506100c26104a3565b34801561012557600080fd5b5061012e610511565b60405161013b9190610fde565b60405180910390f35b34801561015057600080fd5b5061016461015f366004610c76565b610521565b60405161013b9190611045565b34801561017d57600080fd5b5061019161018c366004610b5a565b6105a3565b60405161013b9291906110e2565b3480156101ab57600080fd5b5061012e610699565b3480156101c057600080fd5b506101c96106a8565b60405161013b9190611037565b3480156101e257600080fd5b506101eb6106cc565b60405161013b9190611091565b6101c96106eb565b34801561020c57600080fd5b506100c261021b366004610cb8565b610799565b34801561022c57600080fd5b506100c261023b366004610b34565b61081c565b34801561024c57600080fd5b506101eb61084c565b61025d6106a8565b6102825760405162461bcd60e51b8152600401610279906110b2565b60405180910390fd5b6003546001600160a01b03161561032c5760035460405163095ea7b360e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29163095ea7b3916102d8916001600160a01b031690600090600401610ffa565b602060405180830381600087803b1580156102f257600080fd5b505af1158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061032a9190810190610c58565b505b6001600160a01b038116156103ca5760405163095ea7b360e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29063095ea7b3906103769084906000199060040161101c565b602060405180830381600087803b15801561039057600080fd5b505af11580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103c89190810190610c58565b505b600380546001600160a01b038084166001600160a01b031992831617928390556004805490921692169190911790556040517ff980c1430e55b1867cd9337a1f20246ab3b7255032486d0b71c24e820eebf3ab90610429908390610fec565b60405180910390a150565b61043c6106a8565b6104585760405162461bcd60e51b8152600401610279906110b2565b600580546001600160a01b0319166001600160a01b0383161790556040517feb58b3605dc4b57dbf9dbd3db2d10cea4dd28005a4d8310f298e16d63b20476190610429908390610fde565b6104ab6106a8565b6104c75760405162461bcd60e51b8152600401610279906110b2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b03165b90565b600061052b610511565b6001600160a01b0316336001600160a01b03161461055b5760405162461bcd60e51b8152600401610279906110d2565b61059a83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061086d92505050565b90505b92915050565b60006060808d8d8d8d8d8d8d8d6105b8610511565b306040516020016105d29a99989796959493929190610f23565b60408051601f198184030181526005546020601f8a018190048102850181019093528884529093506001600160a01b03169161063f918990899081908401838280828437600092019190915250508551602087012061063392509050610873565b9063ffffffff6108a316565b6001600160a01b03161461066157610657600061097f565b9250925050610689565b6005546001600160a01b031661067b57610657600161097f565b610683610997565b92509250505b9b509b9950505050505050505050565b6000546001600160a01b031690565b600080546001600160a01b03166106bd6109bb565b6001600160a01b031614905090565b6040805180820190915260058152640312e302e360dc1b602082015290565b600080341161070c5760405162461bcd60e51b8152600401610279906110c2565b6004546001600160a01b031663b760faf9346107266109bb565b6040518363ffffffff1660e01b81526004016107429190610fec565b6020604051808303818588803b15801561075b57600080fd5b505af115801561076f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506107949190810190610c58565b905090565b6107a1610511565b6001600160a01b0316336001600160a01b0316146107d15760405162461bcd60e51b8152600401610279906110d2565b61081585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508792508691508590506109e6565b5050505050565b6108246106a8565b6108405760405162461bcd60e51b8152600401610279906110b2565b610849816109ec565b50565b604051806040016040528060058152602001640312e302e360dc1b81525081565b50600090565b6000816040516020016108869190610fbe565b604051602081830303815290604052805190602001209050919050565b600081516041146108b65750600061059d565b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156108fc576000935050505061059d565b8060ff16601b1415801561091457508060ff16601c14155b15610925576000935050505061059d565b600186828585604051600081526020016040526040516109489493929190611053565b6020604051602081039080840390855afa15801561096a573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b604080516020810190915260008152600b9190910191565b600060606109b360405180602001604052806000815250610a6d565b915091509091565b6001546000906001600160a01b031633146109d757503361051e565b6109df610a72565b905061051e565b50505050565b6001600160a01b038116610a125760405162461bcd60e51b8152600401610279906110a2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600091565b600060606000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031692915050565b803561059d816111b0565b803561059d816111c4565b805161059d816111c4565b803561059d816111cd565b60008083601f840112610afd57600080fd5b50813567ffffffffffffffff811115610b1557600080fd5b602083019150836001820283011115610b2d57600080fd5b9250929050565b600060208284031215610b4657600080fd5b6000610b528484610abf565b949350505050565b60008060008060008060008060008060006101208c8e031215610b7c57600080fd5b6000610b888e8e610abf565b9b50506020610b998e828f01610abf565b9a505060408c013567ffffffffffffffff811115610bb657600080fd5b610bc28e828f01610aeb565b99509950506060610bd58e828f01610ae0565b9750506080610be68e828f01610ae0565b96505060a0610bf78e828f01610ae0565b95505060c0610c088e828f01610ae0565b94505060e08c013567ffffffffffffffff811115610c2557600080fd5b610c318e828f01610aeb565b9350935050610100610c458e828f01610ae0565b9150509295989b509295989b9093969950565b600060208284031215610c6a57600080fd5b6000610b528484610ad5565b60008060208385031215610c8957600080fd5b823567ffffffffffffffff811115610ca057600080fd5b610cac85828601610aeb565b92509250509250929050565b600080600080600060808688031215610cd057600080fd5b853567ffffffffffffffff811115610ce757600080fd5b610cf388828901610aeb565b95509550506020610d0688828901610aca565b9350506040610d1788828901610ae0565b9250506060610d2888828901610ae0565b9150509295509295909350565b610d3e81611136565b82525050565b610d3e610d5082611114565b61118f565b610d3e81611114565b610d3e8161111f565b610d3e8161051e565b610d3e610d7c8261051e565b61051e565b6000610d8d838561110f565b9350610d9a838584611157565b50500190565b6000610dab82611102565b610db58185611106565b9350610dc5818560208601611163565b610dce816111a0565b9093019392505050565b610d3e81611141565b6000610dee601c8361110f565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c0192915050565b6000610e27602683611106565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000610e6f602083611106565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000610ea8601c83611106565b7f4d757374206465706f736974206d6f7265207468616e20302065746800000000815260200192915050565b6000610ee1602483611106565b7f47534e526563697069656e743a2063616c6c6572206973206e6f742052656c618152633ca43ab160e11b602082015260400192915050565b610d3e81611130565b6000610f2f828d610d44565b601482019150610f3f828c610d44565b601482019150610f50828a8c610d81565b9150610f5c8289610d70565b602082019150610f6c8288610d70565b602082019150610f7c8287610d70565b602082019150610f8c8286610d70565b602082019150610f9c8285610d44565b601482019150610fac8284610d44565b506014019a9950505050505050505050565b6000610fc982610de1565b9150610fd58284610d70565b50602001919050565b6020810161059d8284610d55565b6020810161059d8284610d35565b604081016110088285610d35565b6110156020830184610dd8565b9392505050565b6040810161102a8285610d35565b6110156020830184610d67565b6020810161059d8284610d5e565b6020810161059d8284610d67565b608081016110618287610d67565b61106e6020830186610f1a565b61107b6040830185610d67565b6110886060830184610d67565b95945050505050565b6020808252810161059a8184610da0565b6020808252810161059d81610e1a565b6020808252810161059d81610e62565b6020808252810161059d81610e9b565b6020808252810161059d81610ed4565b604081016110f08285610d67565b8181036020830152610b528184610da0565b5190565b90815260200190565b919050565b600061059d82611124565b151590565b6001600160a01b031690565b60ff1690565b600061059d8261114c565b600061059d8261051e565b600061059d82611114565b82818337506000910152565b60005b8381101561117e578181015183820152602001611166565b838111156109e65750506000910152565b600061059d82600061059d826111aa565b601f01601f191690565b60601b90565b6111b981611114565b811461084957600080fd5b6111b98161111f565b6111b98161051e56fea365627a7a723158206efbd472225d3bc5ebf2afc9bf1c9438147edb2882f81b7e6251685549d72a156c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1447:12982:3:-;;;815:70:39;;;-1:-1:-1;;;;;;815:70:39;843:42;815:70;;;2026:30:3;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;698:17:47;718:12;-1:-1:-1;;;;;718:10:47;:12;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:47;-1:-1:-1;;;;;740:18:47;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:47;773:43;;740:6;;773:43;664:159;1447:12982:3;;3814:210:39;3904:9;;3859:15;;-1:-1:-1;;;;;3904:9:39;3890:10;:23;3886:132;;-1:-1:-1;3936:10:39;3929:17;;3886:132;3984:23;-1:-1:-1;;;;;3984:21:39;:23;:::i;:::-;3977:30;;3886:132;3814:210;:::o;7918:1250::-;7973:22;8780:18;8801:8;;8780:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;;;8835:8:39;9066:17;9060:24;-1:-1:-1;;;;;9056:73:39;;7918:1250;-1:-1:-1;;7918:1250:39:o;1447:12982:3:-;;;;;;;",
  "deployedSourceMap": "1447:12982:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:525;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2849:525:3;;;;;;;;:::i;3698:161::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3698:161:3;;;;;;;;:::i;1684:137:47:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1684:137:47;;;:::i;1406:85:39:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:85:39;;;:::i;:::-;;;;;;;;;;;;;;;;4983:208;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4983:208:39;;;;;;;;:::i;:::-;;;;;;;;13010:955:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13010:955:3;;;;;;;;:::i;:::-;;;;;;;;;899:77:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:77:47;;;:::i;1250:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:92:47;;;:::i;:::-;;;;;;;;2637:227:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2637:227:39;;;:::i;:::-;;;;;;;;12692:196:3;;;:::i;5820:274:39:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5820:274:39;;;;;;;;:::i;1970:107:47:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1970:107:47;;;;;;;;:::i;1736:40:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1736:40:3;;;:::i;2849:525::-;1103:9:47;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:47;;;;;;;;;;;;;;;;;3044:24:3;;-1:-1:-1;;;;;3044:24:3;:38;3040:86;;3098:24;;3084:42;;-1:-1:-1;;;3084:42:3;;2568;;3084:13;;:42;;-1:-1:-1;;;;;3098:24:3;;;;3084:42;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3084:42:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3084:42:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3084:42:3;;;;;;;;;;3040:86;-1:-1:-1;;;;;3140:25:3;;;3136:70;;3167:39;;-1:-1:-1;;;3167:39:3;;2568:42;;3167:13;;:39;;3181:11;;-1:-1:-1;;3202:2:3;3167:39;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3167:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3167:39:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3167:39:3;;;;;;;;;;3136:70;3217:24;:38;;-1:-1:-1;;;;;3217:38:3;;;-1:-1:-1;;;;;;3217:38:3;;;;;;;;3265:16;:60;;;;;3300:24;;3265:60;;;;;;3340:27;;;;;;3244:11;;3340:27;;;;;;;;;;2849:525;:::o;3698:161::-;1103:9:47;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:47;;;;;;;;;3776:17:3;:30;;-1:-1:-1;;;;;;3776:30:3;-1:-1:-1;;;;;3776:30:3;;;;;3821:31;;;;;;3776:30;;3821:31;;1684:137:47;1103:9;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:47;;;;;;;;;1782:1;1766:6;;1745:40;;-1:-1:-1;;;;;1766:6:47;;;;1745:40;;1782:1;;1745:40;1812:1;1795:19;;-1:-1:-1;;;;;;1795:19:47;;;1684:137::o;1406:85:39:-;1475:9;;-1:-1:-1;;;;;1475:9:39;1406:85;;:::o;4983:208::-;5049:7;5090:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:26:39;:10;-1:-1:-1;;;;;5076:26:39;;5068:75;;;;-1:-1:-1;;;5068:75:39;;;;;;;;;5160:24;5176:7;;5160:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5160:15:39;;-1:-1:-1;;;5160:24:39:i;:::-;5153:31;;4983:208;;;;;:::o;13010:955:3:-;13312:7;13321:12;13345:17;13395:5;13414:4;13432:15;;13461:14;13489:8;13511;13533:5;13584:12;:10;:12::i;:::-;13660:4;13365:353;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;13798:17:3;;49:4:-1;13732:62:3;;;;;;;;;;;;;;;;;;13365:353;;-1:-1:-1;;;;;;13798:17:3;;13732:62;;13781:12;;;;;;13732:62;;13781:12;;;;13732:62;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;13732:15:3;;;;;;:40;;-1:-1:-1;13732:15:3;-1:-1:-1;13732:38:3;:40::i;:::-;:48;:62;:48;:62;:::i;:::-;-1:-1:-1;;;;;13732:83:3;;13728:117;;13824:21;13843:1;13824:18;:21::i;:::-;13817:28;;;;;;;13728:117;13859:17;;-1:-1:-1;;;;;13859:17:3;13855:65;;13899:21;13918:1;13899:18;:21::i;13855:65::-;13937:21;:19;:21::i;:::-;13930:28;;;;;13010:955;;;;;;;;;;;;;;;:::o;899:77:47:-;937:7;963:6;-1:-1:-1;;;;;963:6:47;899:77;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:47;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:47;;1306:29;;1250:92;:::o;2637:227:39:-;2843:14;;;;;;;;;;;;-1:-1:-1;;;2843:14:39;;;;2637:227;:::o;12692:196:3:-;12737:4;12773:1;12761:9;:13;12753:54;;;;-1:-1:-1;;;12753:54:3;;;;;;;;;12824:16;;-1:-1:-1;;;;;12824:16:3;:26;12857:9;12868:12;:10;:12::i;:::-;12824:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12824:57:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12824:57:3;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12824:57:3;;;;;;;;;12817:64;;12692:196;:::o;5820:274:39:-;5965:12;:10;:12::i;:::-;-1:-1:-1;;;;;5951:26:39;:10;-1:-1:-1;;;;;5951:26:39;;5943:75;;;;-1:-1:-1;;;5943:75:39;;;;;;;;;6028:59;6045:7;;6028:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6054:7:39;;-1:-1:-1;6063:12:39;;-1:-1:-1;6077:9:39;;-1:-1:-1;6028:16:39;:59::i;:::-;5820:274;;;;;:::o;1970:107:47:-;1103:9;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:47;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;1736:40:3:-;;;;;;;;;;;;;;-1:-1:-1;;;1736:40:3;;;;:::o;14063:130::-;-1:-1:-1;14120:7:3;;14063:130::o;3381:265:44:-;3450:7;3633:4;3580:58;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3580:58:44;;;3570:69;;;;;;3563:76;;3381:265;;;:::o;1226:1891::-;1304:7;1365:9;:16;1385:2;1365:22;1361:72;;-1:-1:-1;1419:1:44;1403:19;;1361:72;1783:4;1768:20;;1762:27;1828:4;1813:20;;1807:27;1881:4;1866:20;;1860:27;1499:9;1852:36;2799:66;2786:79;;2782:127;;;2896:1;2881:17;;;;;;;2782:127;2923:1;:7;;2928:2;2923:7;;:18;;;;;2934:1;:7;;2939:2;2934:7;;2923:18;2919:66;;;2972:1;2957:17;;;;;;;2919:66;3086:24;3096:4;3102:1;3105;3108;3086:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3086:24:44;;-1:-1:-1;;3086:24:44;;;1226:1891;-1:-1:-1;;;;;;;1226:1891:44:o;7258:156:39:-;7361:46;;;;;;;;;-1:-1:-1;7361:46:39;;997:2;7369:33;;;;;7258:156::o;6688:124::-;6742:7;6751:12;6782:23;;;;;;;;;;;;;:19;:23::i;:::-;6775:30;;;;6688:124;;:::o;3814:210::-;3904:9;;3859:15;;-1:-1:-1;;;;;3904:9:39;3890:10;:23;3886:132;;-1:-1:-1;3936:10:39;3929:17;;3886:132;3984:23;:21;:23::i;:::-;3977:30;;;;14290:137:3;;;;;:::o;2178:225:47:-;-1:-1:-1;;;;;2251:22:47;;2243:73;;;;-1:-1:-1;;;2243:73:47;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:47;;;;2352:6;;;2331:38;;;2379:6;:17;;-1:-1:-1;;;;;;2379:17:47;-1:-1:-1;;;;;2379:17:47;;;;;;;;;;2178:225::o;6974:153:39:-;7048:7;;6974:153::o;7918:1250::-;7973:22;8780:18;8801:8;;8780:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;;;8835:8:39;9066:17;9060:24;-1:-1:-1;;;;;9056:73:39;;7918:1250;-1:-1:-1;;7918:1250:39:o;5:130:-1:-;72:20;;97:33;72:20;97:33;;295:124;359:20;;384:30;359:20;384:30;;426:128;501:13;;519:30;501:13;519:30;;561:130;628:20;;653:33;628:20;653:33;;712:336;;;826:3;819:4;811:6;807:17;803:27;793:2;;844:1;841;834:12;793:2;-1:-1;864:20;;904:18;893:30;;890:2;;;936:1;933;926:12;890:2;970:4;962:6;958:17;946:29;;1021:3;1013:4;1005:6;1001:17;991:8;987:32;984:41;981:2;;;1038:1;1035;1028:12;981:2;786:262;;;;;;1193:241;;1297:2;1285:9;1276:7;1272:23;1268:32;1265:2;;;1313:1;1310;1303:12;1265:2;1348:1;1365:53;1410:7;1390:9;1365:53;;;1355:63;1259:175;-1:-1;;;;1259:175;1705:1497;;;;;;;;;;;;1984:3;1972:9;1963:7;1959:23;1955:33;1952:2;;;2001:1;1998;1991:12;1952:2;2036:1;2053:53;2098:7;2078:9;2053:53;;;2043:63;;2015:97;2143:2;2161:53;2206:7;2197:6;2186:9;2182:22;2161:53;;;2151:63;;2122:98;2279:2;2268:9;2264:18;2251:32;2303:18;2295:6;2292:30;2289:2;;;2335:1;2332;2325:12;2289:2;2363:64;2419:7;2410:6;2399:9;2395:22;2363:64;;;2353:74;;;;2230:203;2464:2;2482:53;2527:7;2518:6;2507:9;2503:22;2482:53;;;2472:63;;2443:98;2572:3;2591:53;2636:7;2627:6;2616:9;2612:22;2591:53;;;2581:63;;2551:99;2681:3;2700:53;2745:7;2736:6;2725:9;2721:22;2700:53;;;2690:63;;2660:99;2790:3;2809:53;2854:7;2845:6;2834:9;2830:22;2809:53;;;2799:63;;2769:99;2927:3;2916:9;2912:19;2899:33;2952:18;2944:6;2941:30;2938:2;;;2984:1;2981;2974:12;2938:2;3012:64;3068:7;3059:6;3048:9;3044:22;3012:64;;;3002:74;;;;2878:204;3113:3;3133:53;3178:7;3169:6;3158:9;3154:22;3133:53;;;3122:64;;3092:100;1946:1256;;;;;;;;;;;;;;;3209:257;;3321:2;3309:9;3300:7;3296:23;3292:32;3289:2;;;3337:1;3334;3327:12;3289:2;3372:1;3389:61;3442:7;3422:9;3389:61;;3473:365;;;3596:2;3584:9;3575:7;3571:23;3567:32;3564:2;;;3612:1;3609;3602:12;3564:2;3647:31;;3698:18;3687:30;;3684:2;;;3730:1;3727;3720:12;3684:2;3758:64;3814:7;3805:6;3794:9;3790:22;3758:64;;;3748:74;;;;3626:202;3558:280;;;;;;3845:735;;;;;;4016:3;4004:9;3995:7;3991:23;3987:33;3984:2;;;4033:1;4030;4023:12;3984:2;4068:31;;4119:18;4108:30;;4105:2;;;4151:1;4148;4141:12;4105:2;4179:64;4235:7;4226:6;4215:9;4211:22;4179:64;;;4169:74;;;;4047:202;4280:2;4298:50;4340:7;4331:6;4320:9;4316:22;4298:50;;;4288:60;;4259:95;4385:2;4403:53;4448:7;4439:6;4428:9;4424:22;4403:53;;;4393:63;;4364:98;4493:2;4511:53;4556:7;4547:6;4536:9;4532:22;4511:53;;;4501:63;;4472:98;3978:602;;;;;;;;;4587:142;4678:45;4717:5;4678:45;;;4673:3;4666:58;4660:69;;;4736:184;4853:61;4881:32;4907:5;4881:32;;;4853:61;;4927:113;5010:24;5028:5;5010:24;;5206:104;5283:21;5298:5;5283:21;;5317:113;5400:24;5418:5;5400:24;;5437:152;5538:45;5558:24;5576:5;5558:24;;;5538:45;;5619:310;;5751:88;5832:6;5827:3;5751:88;;;5744:95;;5851:43;5887:6;5882:3;5875:5;5851:43;;;-1:-1;;5907:16;;5737:192;5937:343;;6047:38;6079:5;6047:38;;;6097:70;6160:6;6155:3;6097:70;;;6090:77;;6172:52;6217:6;6212:3;6205:4;6198:5;6194:16;6172:52;;;6245:29;6267:6;6245:29;;;6236:39;;;;6027:253;-1:-1;;;6027:253;6287:142;6378:45;6417:5;6378:45;;7137:400;;7315:85;7397:2;7392:3;7315:85;;;7433:66;7413:87;;7528:2;7519:12;;7301:236;-1:-1;;7301:236;7546:375;;7706:67;7770:2;7765:3;7706:67;;;7806:34;7786:55;;-1:-1;;;7870:2;7861:12;;7854:30;7912:2;7903:12;;7692:229;-1:-1;;7692:229;7930:332;;8090:67;8154:2;8149:3;8090:67;;;8190:34;8170:55;;8253:2;8244:12;;8076:186;-1:-1;;8076:186;8271:328;;8431:67;8495:2;8490:3;8431:67;;;8531:30;8511:51;;8590:2;8581:12;;8417:182;-1:-1;;8417:182;8608:373;;8768:67;8832:2;8827:3;8768:67;;;8868:34;8848:55;;-1:-1;;;8932:2;8923:12;;8916:28;8972:2;8963:12;;8754:227;-1:-1;;8754:227;9268:107;9347:22;9363:5;9347:22;;9382:1426;;9769:75;9840:3;9831:6;9769:75;;;9866:2;9861:3;9857:12;9850:19;;9880:75;9951:3;9942:6;9880:75;;;9977:2;9972:3;9968:12;9961:19;;9998:103;10097:3;10088:6;10080;9998:103;;;9991:110;;10112:75;10183:3;10174:6;10112:75;;;10209:2;10204:3;10200:12;10193:19;;10223:75;10294:3;10285:6;10223:75;;;10320:2;10315:3;10311:12;10304:19;;10334:75;10405:3;10396:6;10334:75;;;10431:2;10426:3;10422:12;10415:19;;10445:75;10516:3;10507:6;10445:75;;;10542:2;10537:3;10533:12;10526:19;;10556:75;10627:3;10618:6;10556:75;;;10653:2;10648:3;10644:12;10637:19;;10667:91;10754:3;10745:6;10667:91;;;-1:-1;10780:2;10771:12;;9757:1051;-1:-1;;;;;;;;;;9757:1051;10815:511;;11042:148;11186:3;11042:148;;;11035:155;;11201:75;11272:3;11263:6;11201:75;;;-1:-1;11298:2;11289:12;;11023:303;-1:-1;11023:303;11333:213;11451:2;11436:18;;11465:71;11440:9;11509:6;11465:71;;11553:229;11679:2;11664:18;;11693:79;11668:9;11745:6;11693:79;;11789:356;11951:2;11936:18;;11965:79;11940:9;12017:6;11965:79;;;12055:80;12131:2;12120:9;12116:18;12107:6;12055:80;;;11922:223;;;;;;12152:340;12306:2;12291:18;;12320:79;12295:9;12372:6;12320:79;;;12410:72;12478:2;12467:9;12463:18;12454:6;12410:72;;12499:201;12611:2;12596:18;;12625:65;12600:9;12663:6;12625:65;;12707:213;12825:2;12810:18;;12839:71;12814:9;12883:6;12839:71;;12927:539;13125:3;13110:19;;13140:71;13114:9;13184:6;13140:71;;;13222:68;13286:2;13275:9;13271:18;13262:6;13222:68;;;13301:72;13369:2;13358:9;13354:18;13345:6;13301:72;;;13384;13452:2;13441:9;13437:18;13428:6;13384:72;;;13096:370;;;;;;;;13473:293;13607:2;13621:47;;;13592:18;;13682:74;13592:18;13742:6;13682:74;;14081:407;14272:2;14286:47;;;14257:18;;14347:131;14257:18;14347:131;;14495:407;14686:2;14700:47;;;14671:18;;14761:131;14671:18;14761:131;;14909:407;15100:2;15114:47;;;15085:18;;15175:131;15085:18;15175:131;;15323:407;15514:2;15528:47;;;15499:18;;15589:131;15499:18;15589:131;;15737:408;15901:2;15886:18;;15915:71;15890:9;15959:6;15915:71;;;16034:9;16028:4;16024:20;16019:2;16008:9;16004:18;15997:48;16059:76;16130:4;16121:6;16059:76;;16152:121;16239:12;;16210:63;16535:162;16637:19;;;16686:4;16677:14;;16630:67;16706:144;16841:3;16819:31;-1:-1;16819:31;17184:91;;17246:24;17264:5;17246:24;;17388:85;17454:13;17447:21;;17430:43;17559:121;-1:-1;;;;;17621:54;;17604:76;17766:81;17837:4;17826:16;;17809:38;17854:129;;17941:37;17972:5;17941:37;;17990:116;;18077:24;18095:5;18077:24;;18113:121;;18192:37;18223:5;18192:37;;18357:145;18438:6;18433:3;18428;18415:30;-1:-1;18494:1;18476:16;;18469:27;18408:94;18511:268;18576:1;18583:101;18597:6;18594:1;18591:13;18583:101;;;18664:11;;;18658:18;18645:11;;;18638:39;18619:2;18612:10;18583:101;;;18699:6;18696:1;18693:13;18690:2;;;-1:-1;;18764:1;18746:16;;18739:27;18560:219;18787:95;;18851:26;18871:5;19080:89;19144:20;19158:5;19144:20;;19257:97;19345:2;19325:14;-1:-1;;19321:28;;19305:49;19362:94;19436:2;19432:14;;19404:52;19464:117;19533:24;19551:5;19533:24;;;19526:5;19523:35;19513:2;;19572:1;19569;19562:12;19728:111;19794:21;19809:5;19794:21;;19846:117;19915:24;19933:5;19915:24;",
  "source": "/**\n * @file\n * @author David Lucid <david@rari.capital>\n *\n * @section LICENSE\n *\n * All rights reserved to David Lucid of David Lucid LLC.\n * Any disclosure, reproduction, distribution or other use of this code by any individual or entity other than David Lucid of David Lucid LLC, unless given explicit permission by David Lucid of David Lucid LLC, is prohibited.\n *\n * @section DESCRIPTION\n *\n * This file includes the Ethereum contract code for RariFundProxy, which faciliates pre-deposit exchanges and post-withdrawal exchanges.\n */\n\npragma solidity ^0.5.7;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/drafts/SignedSafeMath.sol\";\nimport \"@openzeppelin/contracts/ownership/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"@openzeppelin/contracts/GSN/GSNRecipient.sol\";\nimport \"@openzeppelin/contracts/cryptography/ECDSA.sol\";\n\nimport \"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\";\nimport \"@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol\";\n\nimport \"./lib/exchanges/ZeroExExchangeController.sol\";\nimport \"./RariFundManager.sol\";\n\n/**\n * @title RariFundProxy\n * @dev This contract faciliates deposits to RariFundManager from exchanges and withdrawals from RariFundManager for exchanges.\n */\n\ncontract RariFundProxy is Ownable, GSNRecipient {\n    using SafeMath for uint256;\n    using SignedSafeMath for int256;\n    using ECDSA for bytes32;\n    using SafeERC20 for IERC20;\n\n    /**\n     * @notice Package version of `rari-eth-contracts` when this contract was deployed.\n     */\n    string public constant VERSION = \"1.0.0\";\n\n\n    /**\n     * @dev Maps ERC20 token contract addresses to supported currency codes.\n     */\n    mapping(string => address) private _erc20Contracts;\n\n    /**\n     * @dev Constructor that sets supported ERC20 token contract addresses.\n     */\n    constructor () public {\n\n    }\n\n    /**\n     * @dev Address of the RariFundManager.\n     */\n    address payable private _rariFundManagerContract;\n\n    /**\n     * @dev Contract of the RariFundManager.\n     */\n    RariFundManager private _rariFundManager;\n\n    /**\n     * @dev Address of the trusted GSN signer.\n     */\n    address private _gsnTrustedSigner;\n\n    /**\n     * @dev Emitted when the RariFundManager of the RariFundProxy is set.\n     */\n    event FundManagerSet(address newContract);\n\n\n    address constant private WETH_CONTRACT = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n    IEtherToken constant private _weth = IEtherToken(WETH_CONTRACT);\n\n\n    /**\n     * @dev Sets or upgrades the RariFundManager of the RariFundProxy.\n     * @param newContract The address of the new RariFundManager contract.\n     */\n    function setFundManager(address payable newContract) external onlyOwner {\n        // Approve maximum output tokens to RariFundManager for deposit\n        // see safeApprove in IERC20\n        if (_rariFundManagerContract != address(0)) _weth.approve(_rariFundManagerContract, 0);\n        if (newContract != address(0)) _weth.approve(newContract, uint256(-1));\n\n        _rariFundManagerContract = newContract;\n        _rariFundManager = RariFundManager(_rariFundManagerContract);\n        emit FundManagerSet(newContract);\n    }\n\n    \n\n    /**\n     * @dev Emitted when the trusted GSN signer of the RariFundProxy is set.\n     */\n    event GsnTrustedSignerSet(address newAddress);\n\n    /**\n     * @dev Sets or upgrades the trusted GSN signer of the RariFundProxy.\n     * @param newAddress The Ethereum address of the new trusted GSN signer.\n     */\n    function setGsnTrustedSigner(address newAddress) external onlyOwner {\n        _gsnTrustedSigner = newAddress;\n        emit GsnTrustedSignerSet(newAddress);\n    }\n\n    /**\n     * @dev Payable fallback function called by 0x exchange to refund unspent protocol fee.\n     */\n    function () external payable { }\n\n    /**\n     * @dev Emitted when funds have been exchanged before being deposited via RariFundManager.\n     * If exchanging from ETH, `inputErc20Contract` = address(0).\n     */\n    event PreDepositExchange(address indexed inputErc20Contract, string indexed outputCurrencyCode, address indexed payee, uint256 makerAssetFilledAmount, uint256 depositAmount);\n\n    /**\n     * @dev Emitted when funds have been exchanged after being withdrawn via RariFundManager.\n     * If exchanging from ETH, `outputErc20Contract` = address(0).\n     */\n    event PostWithdrawalExchange(string indexed inputCurrencyCode, address indexed outputErc20Contract, address indexed payee, uint256 withdrawalAmount, uint256 takerAssetFilledAmount);\n\n    /**\n     * @notice Exchanges and deposits funds to RariFund in exchange for REFT.\n     * You can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation.\n     * Please note that you must approve RariFundProxy to transfer at least `inputAmount`.\n     * You also must input at least enough ETH to cover the protocol fee (and enough to cover `orders` ).\n     * @dev We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n     * @param inputErc20Contract The ERC20 contract address of the token to be exchanged. Set to address(0) to input ETH.\n     * @param inputAmount The amount of tokens to be exchanged (including taker fees).\n     * @param orders The limit orders to be filled in ascending order of the price you pay.\n     * @param signatures The signatures for the orders.\n     * @param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\n     * @return Boolean indicating success.\n     (0, 1000, \"DAI\", ...)\n     \n    function exchangeAndDeposit(address inputErc20Contract, uint256 inputAmount, LibOrder.Order[] memory orders, bytes[] memory signatures, uint256 takerAssetFillAmount) public returns (bool) {\n        // Input validation\n        require(_rariFundManagerContract != address(0), \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\");\n        require(inputAmount > 0, \"Input amount must be greater than 0.\");\n        address outputErc20Contract = WETH_CONTRACT;\n        require(outputErc20Contract != address(0), \"Invalid output currency code.\");\n        require(orders.length > 0, \"Orders array is empty.\");\n        require(orders.length == signatures.length, \"Length of orders and signatures arrays must be equal.\");\n        require(takerAssetFillAmount > 0, \"Taker asset fill amount must be greater than 0.\");\n\n\n        // Transfer input tokens from msg.sender if not inputting ETH\n        IERC20(inputErc20Contract).safeTransferFrom(msg.sender, address(this), inputAmount); // The user must approve the transfer of tokens beforehand\n\n        if (inputErc20Contract == address(0)) {\n\n        }\n\n        if (inputErc20Contract == WETH_CONTRACT) {\n            // convert WETH to ETH\n            _weth.withdraw(inputAmount);\n            // Deposit ETH\n            require(_rariFundManager.depositTo.value(inputAmount)(msg.sender));\n\n            return true;\n        }\n\n\n        // Approve and exchange tokens\n        if (inputAmount > ZeroExExchangeController.allowance(inputErc20Contract)) ZeroExExchangeController.approve(inputErc20Contract, uint256(-1));\n\n        uint256[2] memory filledAmounts = ZeroExExchangeController.marketSellOrdersFillOrKill(orders, signatures, takerAssetFillAmount, inputErc20Contract == address(0) ? msg.value.sub(inputAmount) : msg.value);\n\n        if (inputErc20Contract == address(0)) {\n            // Unwrap unused ETH\n            uint256 wethBalance = _weth.balanceOf(address(this));\n            if (wethBalance > 0) _weth.withdraw(wethBalance);\n        } else {\n            // Refund unused input tokens\n            IERC20 inputToken = IERC20(inputErc20Contract);\n            uint256 inputTokenBalance = inputToken.balanceOf(address(this));\n            if (inputTokenBalance > 0) inputToken.safeTransfer(msg.sender, inputTokenBalance);\n        }\n\n        // Emit event\n        emit PreDepositExchange(inputErc20Contract, outputCurrencyCode, msg.sender, filledAmounts[0], filledAmounts[1]);\n\n        // Deposit output tokens\n        require(_rariFundManager.depositTo(msg.sender, filledAmounts[1]));\n\n        // Refund unused ETH\n        uint256 ethBalance = address(this).balance;\n        if (ethBalance > 0) msg.sender.transfer(ethBalance);\n\n        // Return true\n        return true;\n    }\n    */\n    /**\n     * @notice Exchanges and deposits funds to RariFund in exchange for RFT.\n     * You can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation.\n     * Please note that you must approve RariFundManager to burn of the necessary amount of RFT.\n     * You also must input at least enough ETH to cover the protocol fees.\n     * @dev We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n     * @param inputCurrencyCodes The currency codes of the tokens to be withdrawn and exchanged.\n     * @param inputAmounts The amounts of tokens to be withdrawn and exchanged (including taker fees).\n     * @param outputErc20Contract The ERC20 contract address of the token to be outputted by the exchange. Set to address(0) to output ETH.\n     * @param orders The limit orders to be filled in ascending order of the price you pay.\n     * @param signatures The signatures for the orders.\n     * @param makerAssetFillAmounts The amounts of the maker assets to buy.\n     * @param protocolFees The protocol fees to pay to 0x in ETH for each order.\n     * @return Boolean indicating success.\n     \n    function withdrawAndExchange(string[] memory inputCurrencyCodes, uint256[] memory inputAmounts, address outputErc20Contract, LibOrder.Order[][] memory orders, bytes[][] memory signatures, uint256[] memory makerAssetFillAmounts, uint256[] memory protocolFees) public payable returns (bool) {\n        // Input validation\n        require(_rariFundManagerContract != address(0), \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\");\n        require(inputCurrencyCodes.length == inputAmounts.length && inputCurrencyCodes.length == orders.length && inputCurrencyCodes.length == signatures.length && inputCurrencyCodes.length == makerAssetFillAmounts.length && inputCurrencyCodes.length == protocolFees.length, \"Array parameters are not all the same length.\");\n\n        // For each input currency\n        for (uint256 i = 0; i < inputCurrencyCodes.length; i++) {\n            require(inputAmounts[i] > 0, \"All input amounts must be greater than 0.\");\n\n            // Withdraw input tokens\n            require(_rariFundManager.withdrawFrom(msg.sender, inputCurrencyCodes[i], inputAmounts[i]));\n\n            if (orders[i].length > 0 && signatures[i].length > 0 && makerAssetFillAmounts[i] > 0) {\n                // Input validation\n                require(orders.length == signatures.length, \"Length of all orders and signatures arrays must be equal.\");\n\n                // Exchange tokens and emit event\n                uint256[2] memory filledAmounts = ZeroExExchangeController.marketBuyOrdersFillOrKill(orders[i], signatures[i], makerAssetFillAmounts[i], protocolFees[i]);\n                emit PostWithdrawalExchange(inputCurrencyCodes[i], outputErc20Contract, msg.sender, inputAmounts[i], filledAmounts[1]);\n            }\n        }\n\n        if (outputErc20Contract == address(0)) {\n            // Unwrap WETH if output currency is ETH\n            uint256 wethBalance = _weth.balanceOf(address(this));\n            _weth.withdraw(wethBalance);\n        } else {\n            // Forward tokens if output currency is a token\n            IERC20 outputToken = IERC20(outputErc20Contract);\n            uint256 outputTokenBalance = outputToken.balanceOf(address(this));\n            if (outputTokenBalance > 0) outputToken.safeTransfer(msg.sender, outputTokenBalance);\n        }\n\n        // Forward all ETH\n        uint256 ethBalance = address(this).balance;\n        if (ethBalance > 0) msg.sender.transfer(ethBalance);\n\n        // Return true\n        return true;\n    }\n    */\n    \n    /**\n     * @notice Deposits funds to RariFund in exchange for REFT (with GSN support).\n     * You may only deposit ETH.\n     * Please note that you must approve RariFundProxy to transfer at least `amount`.\n     * @return Boolean indicating success.\n     */\n    function deposit() payable external returns (bool) {\n        require(msg.value > 0, \"Must deposit more than 0 eth\");\n        return _rariFundManager.depositTo.value(msg.value)(_msgSender());\n    }\n\n    /**\n     * @dev Ensures that only transactions with a trusted signature can be relayed through the GSN.\n     */\n    function acceptRelayedCall(\n        address relay,\n        address from,\n        bytes calldata encodedFunction,\n        uint256 transactionFee,\n        uint256 gasPrice,\n        uint256 gasLimit,\n        uint256 nonce,\n        bytes calldata approvalData,\n        uint256\n    ) external view returns (uint256, bytes memory) {\n        bytes memory blob = abi.encodePacked(\n            relay,\n            from,\n            encodedFunction,\n            transactionFee,\n            gasPrice,\n            gasLimit,\n            nonce, // Prevents replays on RelayHub\n            getHubAddr(), // Prevents replays in multiple RelayHubs\n            address(this) // Prevents replays in multiple recipients\n        );\n        if (keccak256(blob).toEthSignedMessageHash().recover(approvalData) != _gsnTrustedSigner) return _rejectRelayedCall(0);\n        if (_gsnTrustedSigner == address(0)) return _rejectRelayedCall(1);\n        return _approveRelayedCall();\n    }\n\n    /**\n     * @dev Code executed before processing a call relayed through the GSN.\n     */\n    function _preRelayedCall(bytes memory) internal returns (bytes32) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Code executed after processing a call relayed through the GSN.\n     */\n    function _postRelayedCall(bytes memory, bool, uint256, bytes32) internal {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n",
  "sourcePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundProxy.sol",
  "ast": {
    "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundProxy.sol",
    "exportedSymbols": {
      "RariFundProxy": [
        2754
      ]
    },
    "id": 2755,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2480,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "540:23:3"
      },
      {
        "id": 2481,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "564:33:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2482,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 7689,
        "src": "599:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/drafts/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts/drafts/SignedSafeMath.sol",
        "id": 2483,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 7502,
        "src": "651:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 2484,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 7807,
        "src": "711:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2485,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 8401,
        "src": "767:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2486,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 8621,
        "src": "824:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2487,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 8304,
        "src": "884:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/GSN/GSNRecipient.sol",
        "file": "@openzeppelin/contracts/GSN/GSNRecipient.sol",
        "id": 2488,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 6755,
        "src": "948:54:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/cryptography/ECDSA.sol",
        "id": 2489,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 7328,
        "src": "1003:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 2490,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 5503,
        "src": "1061:64:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol",
        "file": "@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol",
        "id": 2491,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 4391,
        "src": "1126:70:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/exchanges/ZeroExExchangeController.sol",
        "file": "./lib/exchanges/ZeroExExchangeController.sol",
        "id": 2492,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 3656,
        "src": "1198:54:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundManager.sol",
        "file": "./RariFundManager.sol",
        "id": 2493,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 2479,
        "src": "1253:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2494,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7806,
              "src": "1473:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7806",
                "typeString": "contract Ownable"
              }
            },
            "id": 2495,
            "nodeType": "InheritanceSpecifier",
            "src": "1473:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2496,
              "name": "GSNRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6754,
              "src": "1482:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GSNRecipient_$6754",
                "typeString": "contract GSNRecipient"
              }
            },
            "id": 2497,
            "nodeType": "InheritanceSpecifier",
            "src": "1482:12:3"
          }
        ],
        "contractDependencies": [
          6422,
          6754,
          7058,
          7806
        ],
        "contractKind": "contract",
        "documentation": "@title RariFundProxy\n@dev This contract faciliates deposits to RariFundManager from exchanges and withdrawals from RariFundManager for exchanges.",
        "fullyImplemented": true,
        "id": 2754,
        "linearizedBaseContracts": [
          2754,
          6754,
          7806,
          6422,
          7058
        ],
        "name": "RariFundProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2500,
            "libraryName": {
              "contractScope": null,
              "id": 2498,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7688,
              "src": "1507:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7688",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1501:27:3",
            "typeName": {
              "id": 2499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1520:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2503,
            "libraryName": {
              "contractScope": null,
              "id": 2501,
              "name": "SignedSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7501,
              "src": "1539:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignedSafeMath_$7501",
                "typeString": "library SignedSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1533:32:3",
            "typeName": {
              "id": 2502,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "1558:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 2506,
            "libraryName": {
              "contractScope": null,
              "id": 2504,
              "name": "ECDSA",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7327,
              "src": "1576:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECDSA_$7327",
                "typeString": "library ECDSA"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1570:24:3",
            "typeName": {
              "id": 2505,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1586:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 2509,
            "libraryName": {
              "contractScope": null,
              "id": 2507,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8620,
              "src": "1605:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$8620",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1599:27:3",
            "typeName": {
              "contractScope": null,
              "id": 2508,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8400,
              "src": "1619:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8400",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 2512,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "1736:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2510,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1736:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "312e302e30",
              "id": 2511,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1769:7:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                "typeString": "literal_string \"1.0.0\""
              },
              "value": "1.0.0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2516,
            "name": "_erc20Contracts",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "1877:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2515,
              "keyType": {
                "id": 2513,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1885:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1877:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 2514,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1895:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2519,
              "nodeType": "Block",
              "src": "2048:8:3",
              "statements": []
            },
            "documentation": "@dev Constructor that sets supported ERC20 token contract addresses.",
            "id": 2520,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2038:2:3"
            },
            "returnParameters": {
              "id": 2518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2048:0:3"
            },
            "scope": 2754,
            "src": "2026:30:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2522,
            "name": "_rariFundManagerContract",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "2122:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2521,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2122:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2524,
            "name": "_rariFundManager",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "2238:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RariFundManager_$2478",
              "typeString": "contract RariFundManager"
            },
            "typeName": {
              "contractScope": null,
              "id": 2523,
              "name": "RariFundManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2478,
              "src": "2238:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RariFundManager_$2478",
                "typeString": "contract RariFundManager"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2526,
            "name": "_gsnTrustedSigner",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "2348:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2525,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2348:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the RariFundManager of the RariFundProxy is set.",
            "id": 2530,
            "name": "FundManagerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2528,
                  "indexed": false,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2530,
                  "src": "2499:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2498:21:3"
            },
            "src": "2478:42:3"
          },
          {
            "constant": true,
            "id": 2533,
            "name": "WETH_CONTRACT",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "2527:83:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2531,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2527:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 2532,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2568:42:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2538,
            "name": "_weth",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "2616:63:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEtherToken_$4390",
              "typeString": "contract IEtherToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 2534,
              "name": "IEtherToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4390,
              "src": "2616:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEtherToken_$4390",
                "typeString": "contract IEtherToken"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 2536,
                  "name": "WETH_CONTRACT",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2533,
                  "src": "2665:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 2535,
                "name": "IEtherToken",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4390,
                "src": "2653:11:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IEtherToken_$4390_$",
                  "typeString": "type(contract IEtherToken)"
                }
              },
              "id": 2537,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2653:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEtherToken_$4390",
                "typeString": "contract IEtherToken"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2588,
              "nodeType": "Block",
              "src": "2921:453:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2545,
                      "name": "_rariFundManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2522,
                      "src": "3044:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3080:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3072:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3072:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3044:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2557,
                  "nodeType": "IfStatement",
                  "src": "3040:86:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2553,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2522,
                          "src": "3098:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3124:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2550,
                          "name": "_weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "3084:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEtherToken_$4390",
                            "typeString": "contract IEtherToken"
                          }
                        },
                        "id": 2552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4354,
                        "src": "3084:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 2555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3084:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2556,
                    "nodeType": "ExpressionStatement",
                    "src": "3084:42:3"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2558,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2540,
                      "src": "3140:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3163:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3155:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3155:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3140:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2573,
                  "nodeType": "IfStatement",
                  "src": "3136:70:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2566,
                          "name": "newContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2540,
                          "src": "3181:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "3202:2:3",
                              "subExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3203:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            ],
                            "id": 2567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3194:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 2570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3194:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2563,
                          "name": "_weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "3167:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEtherToken_$4390",
                            "typeString": "contract IEtherToken"
                          }
                        },
                        "id": 2565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4354,
                        "src": "3167:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 2571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3167:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2572,
                    "nodeType": "ExpressionStatement",
                    "src": "3167:39:3"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2574,
                      "name": "_rariFundManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2522,
                      "src": "3217:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2575,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2540,
                      "src": "3244:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3217:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2577,
                  "nodeType": "ExpressionStatement",
                  "src": "3217:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2578,
                      "name": "_rariFundManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2524,
                      "src": "3265:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RariFundManager_$2478",
                        "typeString": "contract RariFundManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2580,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2522,
                          "src": "3300:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 2579,
                        "name": "RariFundManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2478,
                        "src": "3284:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RariFundManager_$2478_$",
                          "typeString": "type(contract RariFundManager)"
                        }
                      },
                      "id": 2581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3284:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RariFundManager_$2478",
                        "typeString": "contract RariFundManager"
                      }
                    },
                    "src": "3265:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RariFundManager_$2478",
                      "typeString": "contract RariFundManager"
                    }
                  },
                  "id": 2583,
                  "nodeType": "ExpressionStatement",
                  "src": "3265:60:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2585,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "3355:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2584,
                      "name": "FundManagerSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2530,
                      "src": "3340:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3340:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2587,
                  "nodeType": "EmitStatement",
                  "src": "3335:32:3"
                }
              ]
            },
            "documentation": "@dev Sets or upgrades the RariFundManager of the RariFundProxy.\n@param newContract The address of the new RariFundManager contract.",
            "id": 2589,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2543,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2542,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7739,
                  "src": "2911:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2911:9:3"
              }
            ],
            "name": "setFundManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2540,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2589,
                  "src": "2873:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2872:29:3"
            },
            "returnParameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2921:0:3"
            },
            "scope": 2754,
            "src": "2849:525:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the trusted GSN signer of the RariFundProxy is set.",
            "id": 2593,
            "name": "GsnTrustedSignerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2591,
                  "indexed": false,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2593,
                  "src": "3505:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3505:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3504:20:3"
            },
            "src": "3479:46:3"
          },
          {
            "body": {
              "id": 2608,
              "nodeType": "Block",
              "src": "3766:93:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2600,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2526,
                      "src": "3776:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2601,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2595,
                      "src": "3796:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3776:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2603,
                  "nodeType": "ExpressionStatement",
                  "src": "3776:30:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2605,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2595,
                        "src": "3841:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2604,
                      "name": "GsnTrustedSignerSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2593,
                      "src": "3821:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3821:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2607,
                  "nodeType": "EmitStatement",
                  "src": "3816:36:3"
                }
              ]
            },
            "documentation": "@dev Sets or upgrades the trusted GSN signer of the RariFundProxy.\n@param newAddress The Ethereum address of the new trusted GSN signer.",
            "id": 2609,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2598,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2597,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7739,
                  "src": "3756:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3756:9:3"
              }
            ],
            "name": "setGsnTrustedSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2595,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2609,
                  "src": "3727:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3726:20:3"
            },
            "returnParameters": {
              "id": 2599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3766:0:3"
            },
            "scope": 2754,
            "src": "3698:161:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2612,
              "nodeType": "Block",
              "src": "4002:3:3",
              "statements": []
            },
            "documentation": "@dev Payable fallback function called by 0x exchange to refund unspent protocol fee.",
            "id": 2613,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3982:2:3"
            },
            "returnParameters": {
              "id": 2611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4002:0:3"
            },
            "scope": 2754,
            "src": "3973:32:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when funds have been exchanged before being deposited via RariFundManager.\nIf exchanging from ETH, `inputErc20Contract` = address(0).",
            "id": 2625,
            "name": "PreDepositExchange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2615,
                  "indexed": true,
                  "name": "inputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "4213:34:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4213:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2617,
                  "indexed": true,
                  "name": "outputCurrencyCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "4249:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2616,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4249:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2619,
                  "indexed": true,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "4284:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4284:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2621,
                  "indexed": false,
                  "name": "makerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "4307:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4307:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2623,
                  "indexed": false,
                  "name": "depositAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "4339:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4339:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4212:149:3"
            },
            "src": "4188:174:3"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when funds have been exchanged after being withdrawn via RariFundManager.\nIf exchanging from ETH, `outputErc20Contract` = address(0).",
            "id": 2637,
            "name": "PostWithdrawalExchange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2627,
                  "indexed": true,
                  "name": "inputCurrencyCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 2637,
                  "src": "4574:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2626,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4574:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2629,
                  "indexed": true,
                  "name": "outputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2637,
                  "src": "4608:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4608:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2631,
                  "indexed": true,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2637,
                  "src": "4645:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4645:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2633,
                  "indexed": false,
                  "name": "withdrawalAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2637,
                  "src": "4668:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4668:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2635,
                  "indexed": false,
                  "name": "takerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2637,
                  "src": "4694:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4694:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4573:152:3"
            },
            "src": "4545:181:3"
          },
          {
            "body": {
              "id": 2660,
              "nodeType": "Block",
              "src": "12743:145:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2643,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8710,
                            "src": "12761:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12761:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12773:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12761:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206465706f736974206d6f7265207468616e203020657468",
                        "id": 2647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12776:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b063b6e19f2d2bb594343a3e489df4f1a7c3f38284aa15e06edbe91b12cb9fe5",
                          "typeString": "literal_string \"Must deposit more than 0 eth\""
                        },
                        "value": "Must deposit more than 0 eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b063b6e19f2d2bb594343a3e489df4f1a7c3f38284aa15e06edbe91b12cb9fe5",
                          "typeString": "literal_string \"Must deposit more than 0 eth\""
                        }
                      ],
                      "id": 2642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8713,
                        8714
                      ],
                      "referencedDeclaration": 8714,
                      "src": "12753:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12753:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2649,
                  "nodeType": "ExpressionStatement",
                  "src": "12753:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2656,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            6537
                          ],
                          "referencedDeclaration": 6537,
                          "src": "12868:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12868:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2653,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8710,
                            "src": "12857:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12857:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2650,
                            "name": "_rariFundManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2524,
                            "src": "12824:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundManager_$2478",
                              "typeString": "contract RariFundManager"
                            }
                          },
                          "id": 2651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1842,
                          "src": "12824:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) payable external returns (bool)"
                          }
                        },
                        "id": 2652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12824:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_address_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) pure returns (function (address) payable external returns (bool))"
                        }
                      },
                      "id": 2655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12824:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$value",
                        "typeString": "function (address) payable external returns (bool)"
                      }
                    },
                    "id": 2658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12824:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2641,
                  "id": 2659,
                  "nodeType": "Return",
                  "src": "12817:64:3"
                }
              ]
            },
            "documentation": "@notice Deposits funds to RariFund in exchange for REFT (with GSN support).\nYou may only deposit ETH.\nPlease note that you must approve RariFundProxy to transfer at least `amount`.\n@return Boolean indicating success.",
            "id": 2661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12708:2:3"
            },
            "returnParameters": {
              "id": 2641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2640,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2661,
                  "src": "12737:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2639,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12737:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12736:6:3"
            },
            "scope": 2754,
            "src": "12692:196:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2732,
              "nodeType": "Block",
              "src": "13335:630:3",
              "statements": [
                {
                  "assignments": [
                    2687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2687,
                      "name": "blob",
                      "nodeType": "VariableDeclaration",
                      "scope": 2732,
                      "src": "13345:17:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2686,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13345:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2703,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2690,
                        "name": "relay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2663,
                        "src": "13395:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2691,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2665,
                        "src": "13414:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2692,
                        "name": "encodedFunction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2667,
                        "src": "13432:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2693,
                        "name": "transactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2669,
                        "src": "13461:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2694,
                        "name": "gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2671,
                        "src": "13489:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2695,
                        "name": "gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2673,
                        "src": "13511:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2696,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "13533:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2697,
                          "name": "getHubAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6457,
                          "src": "13584:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13584:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2700,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8824,
                            "src": "13660:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$2754",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$2754",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 2699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13652:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13652:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2688,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8697,
                        "src": "13365:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13365:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 2702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13365:353:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13345:373:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2710,
                          "name": "approvalData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2677,
                          "src": "13781:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2705,
                                  "name": "blob",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2687,
                                  "src": "13742:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2704,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8704,
                                "src": "13732:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13732:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 2707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "toEthSignedMessageHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7326,
                            "src": "13732:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                              "typeString": "function (bytes32) pure returns (bytes32)"
                            }
                          },
                          "id": 2708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13732:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recover",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7310,
                        "src": "13732:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes memory) pure returns (address)"
                        }
                      },
                      "id": 2711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13732:62:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2712,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2526,
                      "src": "13798:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13732:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2718,
                  "nodeType": "IfStatement",
                  "src": "13728:117:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13843:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2714,
                        "name": "_rejectRelayedCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6665,
                        "src": "13824:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256,bytes memory)"
                        }
                      },
                      "id": 2716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13824:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(uint256,bytes memory)"
                      }
                    },
                    "functionReturnParameters": 2685,
                    "id": 2717,
                    "nodeType": "Return",
                    "src": "13817:28:3"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2719,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2526,
                      "src": "13859:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13888:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13880:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13880:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "13859:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2728,
                  "nodeType": "IfStatement",
                  "src": "13855:65:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13918:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 2724,
                        "name": "_rejectRelayedCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6665,
                        "src": "13899:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256,bytes memory)"
                        }
                      },
                      "id": 2726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13899:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(uint256,bytes memory)"
                      }
                    },
                    "functionReturnParameters": 2685,
                    "id": 2727,
                    "nodeType": "Return",
                    "src": "13892:28:3"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2729,
                      "name": "_approveRelayedCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6635,
                        6649
                      ],
                      "referencedDeclaration": 6635,
                      "src": "13937:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (uint256,bytes memory)"
                      }
                    },
                    "id": 2730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13937:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(uint256,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 2685,
                  "id": 2731,
                  "nodeType": "Return",
                  "src": "13930:28:3"
                }
              ]
            },
            "documentation": "@dev Ensures that only transactions with a trusted signature can be relayed through the GSN.",
            "id": 2733,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2663,
                  "name": "relay",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13046:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13046:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2665,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13069:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13069:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2667,
                  "name": "encodedFunction",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13091:30:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13091:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2669,
                  "name": "transactionFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13131:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13131:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2671,
                  "name": "gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13163:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13163:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2673,
                  "name": "gasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13189:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13189:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2675,
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13215:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13215:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2677,
                  "name": "approvalData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13238:27:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13238:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2679,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13275:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13275:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13036:252:3"
            },
            "returnParameters": {
              "id": 2685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2682,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13312:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13312:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2684,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13321:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2683,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13321:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13311:23:3"
            },
            "scope": 2754,
            "src": "13010:955:3",
            "stateMutability": "view",
            "superFunction": 7039,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2740,
              "nodeType": "Block",
              "src": "14129:64:3",
              "statements": []
            },
            "documentation": "@dev Code executed before processing a call relayed through the GSN.",
            "id": 2741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2735,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "14088:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14088:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14087:14:3"
            },
            "returnParameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2738,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "14120:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2737,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14120:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14119:9:3"
            },
            "scope": 2754,
            "src": "14063:130:3",
            "stateMutability": "nonpayable",
            "superFunction": 6584,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2752,
              "nodeType": "Block",
              "src": "14363:64:3",
              "statements": []
            },
            "documentation": "@dev Code executed after processing a call relayed through the GSN.",
            "id": 2753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2743,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "14316:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2742,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14316:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2745,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "14330:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14330:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2747,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "14336:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14336:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2749,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "14345:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2748,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14345:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14315:38:3"
            },
            "returnParameters": {
              "id": 2751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14363:0:3"
            },
            "scope": 2754,
            "src": "14290:137:3",
            "stateMutability": "nonpayable",
            "superFunction": 6623,
            "visibility": "internal"
          }
        ],
        "scope": 2755,
        "src": "1447:12982:3"
      }
    ],
    "src": "540:13890:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundProxy.sol",
    "exportedSymbols": {
      "RariFundProxy": [
        2754
      ]
    },
    "id": 2755,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2480,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "540:23:3"
      },
      {
        "id": 2481,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "564:33:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2482,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 7689,
        "src": "599:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/drafts/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts/drafts/SignedSafeMath.sol",
        "id": 2483,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 7502,
        "src": "651:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 2484,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 7807,
        "src": "711:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2485,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 8401,
        "src": "767:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2486,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 8621,
        "src": "824:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2487,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 8304,
        "src": "884:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/GSN/GSNRecipient.sol",
        "file": "@openzeppelin/contracts/GSN/GSNRecipient.sol",
        "id": 2488,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 6755,
        "src": "948:54:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/cryptography/ECDSA.sol",
        "id": 2489,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 7328,
        "src": "1003:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 2490,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 5503,
        "src": "1061:64:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol",
        "file": "@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol",
        "id": 2491,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 4391,
        "src": "1126:70:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/exchanges/ZeroExExchangeController.sol",
        "file": "./lib/exchanges/ZeroExExchangeController.sol",
        "id": 2492,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 3656,
        "src": "1198:54:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundManager.sol",
        "file": "./RariFundManager.sol",
        "id": 2493,
        "nodeType": "ImportDirective",
        "scope": 2755,
        "sourceUnit": 2479,
        "src": "1253:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2494,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7806,
              "src": "1473:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7806",
                "typeString": "contract Ownable"
              }
            },
            "id": 2495,
            "nodeType": "InheritanceSpecifier",
            "src": "1473:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2496,
              "name": "GSNRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6754,
              "src": "1482:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GSNRecipient_$6754",
                "typeString": "contract GSNRecipient"
              }
            },
            "id": 2497,
            "nodeType": "InheritanceSpecifier",
            "src": "1482:12:3"
          }
        ],
        "contractDependencies": [
          6422,
          6754,
          7058,
          7806
        ],
        "contractKind": "contract",
        "documentation": "@title RariFundProxy\n@dev This contract faciliates deposits to RariFundManager from exchanges and withdrawals from RariFundManager for exchanges.",
        "fullyImplemented": true,
        "id": 2754,
        "linearizedBaseContracts": [
          2754,
          6754,
          7806,
          6422,
          7058
        ],
        "name": "RariFundProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2500,
            "libraryName": {
              "contractScope": null,
              "id": 2498,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7688,
              "src": "1507:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7688",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1501:27:3",
            "typeName": {
              "id": 2499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1520:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2503,
            "libraryName": {
              "contractScope": null,
              "id": 2501,
              "name": "SignedSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7501,
              "src": "1539:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignedSafeMath_$7501",
                "typeString": "library SignedSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1533:32:3",
            "typeName": {
              "id": 2502,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "1558:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 2506,
            "libraryName": {
              "contractScope": null,
              "id": 2504,
              "name": "ECDSA",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7327,
              "src": "1576:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECDSA_$7327",
                "typeString": "library ECDSA"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1570:24:3",
            "typeName": {
              "id": 2505,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1586:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 2509,
            "libraryName": {
              "contractScope": null,
              "id": 2507,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8620,
              "src": "1605:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$8620",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1599:27:3",
            "typeName": {
              "contractScope": null,
              "id": 2508,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8400,
              "src": "1619:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8400",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 2512,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "1736:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2510,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1736:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "312e302e30",
              "id": 2511,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1769:7:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                "typeString": "literal_string \"1.0.0\""
              },
              "value": "1.0.0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2516,
            "name": "_erc20Contracts",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "1877:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2515,
              "keyType": {
                "id": 2513,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1885:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1877:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 2514,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1895:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2519,
              "nodeType": "Block",
              "src": "2048:8:3",
              "statements": []
            },
            "documentation": "@dev Constructor that sets supported ERC20 token contract addresses.",
            "id": 2520,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2038:2:3"
            },
            "returnParameters": {
              "id": 2518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2048:0:3"
            },
            "scope": 2754,
            "src": "2026:30:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2522,
            "name": "_rariFundManagerContract",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "2122:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2521,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2122:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2524,
            "name": "_rariFundManager",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "2238:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RariFundManager_$2478",
              "typeString": "contract RariFundManager"
            },
            "typeName": {
              "contractScope": null,
              "id": 2523,
              "name": "RariFundManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2478,
              "src": "2238:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RariFundManager_$2478",
                "typeString": "contract RariFundManager"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2526,
            "name": "_gsnTrustedSigner",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "2348:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2525,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2348:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the RariFundManager of the RariFundProxy is set.",
            "id": 2530,
            "name": "FundManagerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2528,
                  "indexed": false,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2530,
                  "src": "2499:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2498:21:3"
            },
            "src": "2478:42:3"
          },
          {
            "constant": true,
            "id": 2533,
            "name": "WETH_CONTRACT",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "2527:83:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2531,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2527:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 2532,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2568:42:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2538,
            "name": "_weth",
            "nodeType": "VariableDeclaration",
            "scope": 2754,
            "src": "2616:63:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEtherToken_$4390",
              "typeString": "contract IEtherToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 2534,
              "name": "IEtherToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4390,
              "src": "2616:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEtherToken_$4390",
                "typeString": "contract IEtherToken"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 2536,
                  "name": "WETH_CONTRACT",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2533,
                  "src": "2665:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 2535,
                "name": "IEtherToken",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4390,
                "src": "2653:11:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IEtherToken_$4390_$",
                  "typeString": "type(contract IEtherToken)"
                }
              },
              "id": 2537,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2653:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEtherToken_$4390",
                "typeString": "contract IEtherToken"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2588,
              "nodeType": "Block",
              "src": "2921:453:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2545,
                      "name": "_rariFundManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2522,
                      "src": "3044:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3080:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3072:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3072:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3044:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2557,
                  "nodeType": "IfStatement",
                  "src": "3040:86:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2553,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2522,
                          "src": "3098:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3124:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2550,
                          "name": "_weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "3084:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEtherToken_$4390",
                            "typeString": "contract IEtherToken"
                          }
                        },
                        "id": 2552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4354,
                        "src": "3084:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 2555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3084:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2556,
                    "nodeType": "ExpressionStatement",
                    "src": "3084:42:3"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2558,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2540,
                      "src": "3140:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3163:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3155:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3155:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3140:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2573,
                  "nodeType": "IfStatement",
                  "src": "3136:70:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2566,
                          "name": "newContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2540,
                          "src": "3181:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "3202:2:3",
                              "subExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3203:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            ],
                            "id": 2567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3194:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 2570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3194:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2563,
                          "name": "_weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "3167:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEtherToken_$4390",
                            "typeString": "contract IEtherToken"
                          }
                        },
                        "id": 2565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4354,
                        "src": "3167:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 2571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3167:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2572,
                    "nodeType": "ExpressionStatement",
                    "src": "3167:39:3"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2574,
                      "name": "_rariFundManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2522,
                      "src": "3217:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2575,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2540,
                      "src": "3244:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3217:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2577,
                  "nodeType": "ExpressionStatement",
                  "src": "3217:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2578,
                      "name": "_rariFundManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2524,
                      "src": "3265:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RariFundManager_$2478",
                        "typeString": "contract RariFundManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2580,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2522,
                          "src": "3300:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 2579,
                        "name": "RariFundManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2478,
                        "src": "3284:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RariFundManager_$2478_$",
                          "typeString": "type(contract RariFundManager)"
                        }
                      },
                      "id": 2581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3284:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RariFundManager_$2478",
                        "typeString": "contract RariFundManager"
                      }
                    },
                    "src": "3265:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RariFundManager_$2478",
                      "typeString": "contract RariFundManager"
                    }
                  },
                  "id": 2583,
                  "nodeType": "ExpressionStatement",
                  "src": "3265:60:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2585,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "3355:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2584,
                      "name": "FundManagerSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2530,
                      "src": "3340:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3340:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2587,
                  "nodeType": "EmitStatement",
                  "src": "3335:32:3"
                }
              ]
            },
            "documentation": "@dev Sets or upgrades the RariFundManager of the RariFundProxy.\n@param newContract The address of the new RariFundManager contract.",
            "id": 2589,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2543,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2542,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7739,
                  "src": "2911:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2911:9:3"
              }
            ],
            "name": "setFundManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2540,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2589,
                  "src": "2873:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2872:29:3"
            },
            "returnParameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2921:0:3"
            },
            "scope": 2754,
            "src": "2849:525:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the trusted GSN signer of the RariFundProxy is set.",
            "id": 2593,
            "name": "GsnTrustedSignerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2591,
                  "indexed": false,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2593,
                  "src": "3505:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3505:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3504:20:3"
            },
            "src": "3479:46:3"
          },
          {
            "body": {
              "id": 2608,
              "nodeType": "Block",
              "src": "3766:93:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2600,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2526,
                      "src": "3776:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2601,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2595,
                      "src": "3796:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3776:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2603,
                  "nodeType": "ExpressionStatement",
                  "src": "3776:30:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2605,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2595,
                        "src": "3841:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2604,
                      "name": "GsnTrustedSignerSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2593,
                      "src": "3821:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3821:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2607,
                  "nodeType": "EmitStatement",
                  "src": "3816:36:3"
                }
              ]
            },
            "documentation": "@dev Sets or upgrades the trusted GSN signer of the RariFundProxy.\n@param newAddress The Ethereum address of the new trusted GSN signer.",
            "id": 2609,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2598,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2597,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7739,
                  "src": "3756:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3756:9:3"
              }
            ],
            "name": "setGsnTrustedSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2595,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2609,
                  "src": "3727:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3726:20:3"
            },
            "returnParameters": {
              "id": 2599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3766:0:3"
            },
            "scope": 2754,
            "src": "3698:161:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2612,
              "nodeType": "Block",
              "src": "4002:3:3",
              "statements": []
            },
            "documentation": "@dev Payable fallback function called by 0x exchange to refund unspent protocol fee.",
            "id": 2613,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3982:2:3"
            },
            "returnParameters": {
              "id": 2611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4002:0:3"
            },
            "scope": 2754,
            "src": "3973:32:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when funds have been exchanged before being deposited via RariFundManager.\nIf exchanging from ETH, `inputErc20Contract` = address(0).",
            "id": 2625,
            "name": "PreDepositExchange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2615,
                  "indexed": true,
                  "name": "inputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "4213:34:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4213:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2617,
                  "indexed": true,
                  "name": "outputCurrencyCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "4249:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2616,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4249:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2619,
                  "indexed": true,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "4284:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4284:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2621,
                  "indexed": false,
                  "name": "makerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "4307:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4307:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2623,
                  "indexed": false,
                  "name": "depositAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "4339:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4339:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4212:149:3"
            },
            "src": "4188:174:3"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when funds have been exchanged after being withdrawn via RariFundManager.\nIf exchanging from ETH, `outputErc20Contract` = address(0).",
            "id": 2637,
            "name": "PostWithdrawalExchange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2627,
                  "indexed": true,
                  "name": "inputCurrencyCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 2637,
                  "src": "4574:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2626,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4574:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2629,
                  "indexed": true,
                  "name": "outputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2637,
                  "src": "4608:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4608:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2631,
                  "indexed": true,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2637,
                  "src": "4645:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4645:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2633,
                  "indexed": false,
                  "name": "withdrawalAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2637,
                  "src": "4668:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4668:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2635,
                  "indexed": false,
                  "name": "takerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2637,
                  "src": "4694:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4694:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4573:152:3"
            },
            "src": "4545:181:3"
          },
          {
            "body": {
              "id": 2660,
              "nodeType": "Block",
              "src": "12743:145:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2643,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8710,
                            "src": "12761:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12761:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12773:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12761:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206465706f736974206d6f7265207468616e203020657468",
                        "id": 2647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12776:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b063b6e19f2d2bb594343a3e489df4f1a7c3f38284aa15e06edbe91b12cb9fe5",
                          "typeString": "literal_string \"Must deposit more than 0 eth\""
                        },
                        "value": "Must deposit more than 0 eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b063b6e19f2d2bb594343a3e489df4f1a7c3f38284aa15e06edbe91b12cb9fe5",
                          "typeString": "literal_string \"Must deposit more than 0 eth\""
                        }
                      ],
                      "id": 2642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8713,
                        8714
                      ],
                      "referencedDeclaration": 8714,
                      "src": "12753:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12753:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2649,
                  "nodeType": "ExpressionStatement",
                  "src": "12753:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2656,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            6537
                          ],
                          "referencedDeclaration": 6537,
                          "src": "12868:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12868:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2653,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8710,
                            "src": "12857:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12857:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2650,
                            "name": "_rariFundManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2524,
                            "src": "12824:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundManager_$2478",
                              "typeString": "contract RariFundManager"
                            }
                          },
                          "id": 2651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1842,
                          "src": "12824:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) payable external returns (bool)"
                          }
                        },
                        "id": 2652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12824:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_address_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) pure returns (function (address) payable external returns (bool))"
                        }
                      },
                      "id": 2655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12824:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$value",
                        "typeString": "function (address) payable external returns (bool)"
                      }
                    },
                    "id": 2658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12824:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2641,
                  "id": 2659,
                  "nodeType": "Return",
                  "src": "12817:64:3"
                }
              ]
            },
            "documentation": "@notice Deposits funds to RariFund in exchange for REFT (with GSN support).\nYou may only deposit ETH.\nPlease note that you must approve RariFundProxy to transfer at least `amount`.\n@return Boolean indicating success.",
            "id": 2661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12708:2:3"
            },
            "returnParameters": {
              "id": 2641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2640,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2661,
                  "src": "12737:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2639,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12737:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12736:6:3"
            },
            "scope": 2754,
            "src": "12692:196:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2732,
              "nodeType": "Block",
              "src": "13335:630:3",
              "statements": [
                {
                  "assignments": [
                    2687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2687,
                      "name": "blob",
                      "nodeType": "VariableDeclaration",
                      "scope": 2732,
                      "src": "13345:17:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2686,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13345:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2703,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2690,
                        "name": "relay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2663,
                        "src": "13395:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2691,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2665,
                        "src": "13414:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2692,
                        "name": "encodedFunction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2667,
                        "src": "13432:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2693,
                        "name": "transactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2669,
                        "src": "13461:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2694,
                        "name": "gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2671,
                        "src": "13489:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2695,
                        "name": "gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2673,
                        "src": "13511:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2696,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "13533:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2697,
                          "name": "getHubAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6457,
                          "src": "13584:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13584:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2700,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8824,
                            "src": "13660:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$2754",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$2754",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 2699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13652:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13652:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2688,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8697,
                        "src": "13365:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13365:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 2702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13365:353:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13345:373:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2710,
                          "name": "approvalData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2677,
                          "src": "13781:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2705,
                                  "name": "blob",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2687,
                                  "src": "13742:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2704,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8704,
                                "src": "13732:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13732:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 2707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "toEthSignedMessageHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7326,
                            "src": "13732:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                              "typeString": "function (bytes32) pure returns (bytes32)"
                            }
                          },
                          "id": 2708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13732:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recover",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7310,
                        "src": "13732:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes memory) pure returns (address)"
                        }
                      },
                      "id": 2711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13732:62:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2712,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2526,
                      "src": "13798:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13732:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2718,
                  "nodeType": "IfStatement",
                  "src": "13728:117:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13843:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2714,
                        "name": "_rejectRelayedCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6665,
                        "src": "13824:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256,bytes memory)"
                        }
                      },
                      "id": 2716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13824:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(uint256,bytes memory)"
                      }
                    },
                    "functionReturnParameters": 2685,
                    "id": 2717,
                    "nodeType": "Return",
                    "src": "13817:28:3"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2719,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2526,
                      "src": "13859:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13888:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13880:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13880:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "13859:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2728,
                  "nodeType": "IfStatement",
                  "src": "13855:65:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13918:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 2724,
                        "name": "_rejectRelayedCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6665,
                        "src": "13899:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256,bytes memory)"
                        }
                      },
                      "id": 2726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13899:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(uint256,bytes memory)"
                      }
                    },
                    "functionReturnParameters": 2685,
                    "id": 2727,
                    "nodeType": "Return",
                    "src": "13892:28:3"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2729,
                      "name": "_approveRelayedCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6635,
                        6649
                      ],
                      "referencedDeclaration": 6635,
                      "src": "13937:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (uint256,bytes memory)"
                      }
                    },
                    "id": 2730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13937:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(uint256,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 2685,
                  "id": 2731,
                  "nodeType": "Return",
                  "src": "13930:28:3"
                }
              ]
            },
            "documentation": "@dev Ensures that only transactions with a trusted signature can be relayed through the GSN.",
            "id": 2733,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2663,
                  "name": "relay",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13046:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13046:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2665,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13069:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13069:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2667,
                  "name": "encodedFunction",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13091:30:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13091:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2669,
                  "name": "transactionFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13131:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13131:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2671,
                  "name": "gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13163:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13163:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2673,
                  "name": "gasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13189:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13189:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2675,
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13215:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13215:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2677,
                  "name": "approvalData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13238:27:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13238:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2679,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13275:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13275:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13036:252:3"
            },
            "returnParameters": {
              "id": 2685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2682,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13312:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13312:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2684,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "13321:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2683,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13321:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13311:23:3"
            },
            "scope": 2754,
            "src": "13010:955:3",
            "stateMutability": "view",
            "superFunction": 7039,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2740,
              "nodeType": "Block",
              "src": "14129:64:3",
              "statements": []
            },
            "documentation": "@dev Code executed before processing a call relayed through the GSN.",
            "id": 2741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2735,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "14088:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14088:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14087:14:3"
            },
            "returnParameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2738,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "14120:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2737,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14120:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14119:9:3"
            },
            "scope": 2754,
            "src": "14063:130:3",
            "stateMutability": "nonpayable",
            "superFunction": 6584,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2752,
              "nodeType": "Block",
              "src": "14363:64:3",
              "statements": []
            },
            "documentation": "@dev Code executed after processing a call relayed through the GSN.",
            "id": 2753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2743,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "14316:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2742,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14316:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2745,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "14330:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14330:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2747,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "14336:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14336:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2749,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "14345:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2748,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14345:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14315:38:3"
            },
            "returnParameters": {
              "id": 2751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14363:0:3"
            },
            "scope": 2754,
            "src": "14290:137:3",
            "stateMutability": "nonpayable",
            "superFunction": 6623,
            "visibility": "internal"
          }
        ],
        "scope": 2755,
        "src": "1447:12982:3"
      }
    ],
    "src": "540:13890:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0xf980c1430e55b1867cd9337a1f20246ab3b7255032486d0b71c24e820eebf3ab": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "name": "FundManagerSet",
          "type": "event"
        },
        "0xeb58b3605dc4b57dbf9dbd3db2d10cea4dd28005a4d8310f298e16d63b204761": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "name": "GsnTrustedSignerSet",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e482b58c21799e527c0bf559d385ef3cefdcbfe572b563b37b2b64d3e0d917": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "inputCurrencyCode",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "outputErc20Contract",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "payee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "withdrawalAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            }
          ],
          "name": "PostWithdrawalExchange",
          "type": "event"
        },
        "0x28784a5e1360937cd93c35bfd5f7425fd500dd7721d4db798b878c787aa5d247": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "inputErc20Contract",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "string",
              "name": "outputCurrencyCode",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "payee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            }
          ],
          "name": "PreDepositExchange",
          "type": "event"
        },
        "0xb9f84b8e65164b14439ae3620df0a4d8786d896996c0282b683f9d8c08f046e8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldRelayHub",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newRelayHub",
              "type": "address"
            }
          ],
          "name": "RelayHubChanged",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xfF9CC6315426bB3ad22D1D0fa72DD99CE9d33a82",
      "transactionHash": "0x0b16c46385e20269700fc2976c690f5ab2c76a49d68544ff8527f4f5fbe48f6c"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-09-19T16:30:04.585Z",
  "devdoc": {
    "details": "This contract faciliates deposits to RariFundManager from exchanges and withdrawals from RariFundManager for exchanges.",
    "methods": {
      "acceptRelayedCall(address,address,bytes,uint256,uint256,uint256,uint256,bytes,uint256)": {
        "details": "Ensures that only transactions with a trusted signature can be relayed through the GSN."
      },
      "constructor": {
        "details": "Constructor that sets supported ERC20 token contract addresses."
      },
      "deposit()": {
        "return": "Boolean indicating success."
      },
      "getHubAddr()": {
        "details": "Returns the address of the {IRelayHub} contract for this recipient."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "postRelayedCall(bytes,bool,uint256,bytes32)": {
        "details": "See `IRelayRecipient.postRelayedCall`.     * This function should not be overriden directly, use `_postRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract."
      },
      "preRelayedCall(bytes)": {
        "details": "See `IRelayRecipient.preRelayedCall`.     * This function should not be overriden directly, use `_preRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract."
      },
      "relayHubVersion()": {
        "details": "Returns the version string of the {IRelayHub} for which this recipient implementation was built. If {_upgradeRelayHub} is used, the new {IRelayHub} instance should be compatible with this version."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFundManager(address)": {
        "details": "Sets or upgrades the RariFundManager of the RariFundProxy.",
        "params": {
          "newContract": "The address of the new RariFundManager contract."
        }
      },
      "setGsnTrustedSigner(address)": {
        "details": "Sets or upgrades the trusted GSN signer of the RariFundProxy.",
        "params": {
          "newAddress": "The Ethereum address of the new trusted GSN signer."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "RariFundProxy"
  },
  "userdoc": {
    "methods": {
      "deposit()": {
        "notice": "Deposits funds to RariFund in exchange for REFT (with GSN support). You may only deposit ETH. Please note that you must approve RariFundProxy to transfer at least `amount`."
      }
    }
  }
}