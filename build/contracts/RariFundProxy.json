{
  "contractName": "RariFundProxy",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "FundManagerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "GsnTrustedSignerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outputErc20Contract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerAssetFilledAmount",
          "type": "uint256"
        }
      ],
      "name": "PostWithdrawalExchange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "inputErc20Contract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "makerAssetFilledAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "PreDepositExchange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldRelayHub",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRelayHub",
          "type": "address"
        }
      ],
      "name": "RelayHubChanged",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getHubAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "actualCharge",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "preRetVal",
          "type": "bytes32"
        }
      ],
      "name": "postRelayedCall",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        }
      ],
      "name": "preRelayedCall",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "relayHubVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setDefaultRelayHub",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "setFundManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "setGsnTrustedSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "inputErc20Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        },
        {
          "internalType": "uint256",
          "name": "takerAssetFillAmount",
          "type": "uint256"
        }
      ],
      "name": "exchangeAndDeposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "outputErc20Contract",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        },
        {
          "internalType": "uint256",
          "name": "makerAssetFillAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAndExchange",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "relay",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "encodedFunction",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "transactionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "approvalData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "acceptRelayedCall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"FundManagerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"GsnTrustedSignerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"outputErc20Contract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"}],\"name\":\"PostWithdrawalExchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"inputErc20Contract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"PreDepositExchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRelayHub\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRelayHub\",\"type\":\"address\"}],\"name\":\"RelayHubChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"relay\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedFunction\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"transactionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"acceptRelayedCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputErc20Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFillAmount\",\"type\":\"uint256\"}],\"name\":\"exchangeAndDeposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"actualCharge\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"preRetVal\",\"type\":\"bytes32\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"relayHubVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setDefaultRelayHub\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"setFundManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setGsnTrustedSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"outputErc20Contract\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetFillAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawAndExchange\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract faciliates deposits to RariFundManager from exchanges and withdrawals from RariFundManager for exchanges.\",\"methods\":{\"acceptRelayedCall(address,address,bytes,uint256,uint256,uint256,uint256,bytes,uint256)\":{\"details\":\"Ensures that only transactions with a trusted signature can be relayed through the GSN.\"},\"constructor\":{\"details\":\"Constructor that sets supported ERC20 token contract addresses.\"},\"deposit()\":{\"return\":\"Boolean indicating success.\"},\"exchangeAndDeposit(address,uint256,(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256)\":{\"details\":\"We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\",\"params\":{\"inputAmount\":\"The amount of tokens to be exchanged (including taker fees).\",\"inputErc20Contract\":\"The ERC20 contract address of the token to be exchanged. Set to address(0) to input ETH.\",\"orders\":\"The limit orders to be filled in ascending order of the price you pay.\",\"signatures\":\"The signatures for the orders.\",\"takerAssetFillAmount\":\"The amount of the taker asset to sell (excluding taker fees).\"}},\"getHubAddr()\":{\"details\":\"Returns the address of the {IRelayHub} contract for this recipient.\"},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,bytes32)\":{\"details\":\"See `IRelayRecipient.postRelayedCall`.     * This function should not be overriden directly, use `_postRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract.\"},\"preRelayedCall(bytes)\":{\"details\":\"See `IRelayRecipient.preRelayedCall`.     * This function should not be overriden directly, use `_preRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract.\"},\"relayHubVersion()\":{\"details\":\"Returns the version string of the {IRelayHub} for which this recipient implementation was built. If {_upgradeRelayHub} is used, the new {IRelayHub} instance should be compatible with this version.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFundManager(address)\":{\"details\":\"Sets or upgrades the RariFundManager of the RariFundProxy.\",\"params\":{\"newContract\":\"The address of the new RariFundManager contract.\"}},\"setGsnTrustedSigner(address)\":{\"details\":\"Sets or upgrades the trusted GSN signer of the RariFundProxy.\",\"params\":{\"newAddress\":\"The Ethereum address of the new trusted GSN signer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawAndExchange(uint256,address,(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256)\":{\"details\":\"We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\",\"params\":{\"inputAmount\":\"The amounts of tokens to be withdrawn and exchanged (including taker fees).\",\"makerAssetFillAmount\":\"The amount of the maker assets to buy.\",\"orders\":\"The limit orders to be filled in ascending order of the price you pay.\",\"outputErc20Contract\":\"The ERC20 contract address of the token to be outputted by the exchange. Set to address(0) to output ETH.\",\"signatures\":\"The signatures for the orders.\"}}},\"title\":\"RariFundProxy\"},\"userdoc\":{\"methods\":{\"deposit()\":{\"notice\":\"Deposits funds to RariFund in exchange for REFT (with GSN support). You may only deposit ETH. Please note that you must approve RariFundProxy to transfer at least `amount`.\"},\"exchangeAndDeposit(address,uint256,(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256)\":{\"notice\":\"Exchanges and deposits funds to RariFund in exchange for RFT (via 0x). You can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation. Please note that you must approve RariFundProxy to transfer at least `inputAmount` unless you are inputting ETH. You also must input at least enough ETH to cover the protocol fee (and enough to cover `orders` if you are inputting ETH).\"},\"withdrawAndExchange(uint256,address,(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256)\":{\"notice\":\"Withdraws funds from RariFund in exchange for RFT and exchanges to them to the desired currency (if no 0x orders are supplied, exchanges DAI, USDC, USDT, TUSD, and mUSD via mStable). You can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation. Please note that you must approve RariFundManager to burn of the necessary amount of RFT. You also must input at least enough ETH to cover the protocol fees.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundProxy.sol\":\"RariFundProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundController.sol\":{\"keccak256\":\"0x9ee0662ec5bcf56da5d54a78155bf2e2d991c08538af45c65193b3b724e0134f\",\"urls\":[\"bzz-raw://df1e7e596482b491a5789890c616c398927b36e80a0990434063d87c549ba340\",\"dweb:/ipfs/QmRCsS4vcdNB21ZaPXYm1NYDrVdcdEahvinRznuuSu4ozx\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundManager.sol\":{\"keccak256\":\"0x0ac0c9736a747fb715877f2cc72df2c8c363f8670d67c9f9aa57c81d65bd4739\",\"urls\":[\"bzz-raw://05da949e1664e6a2647e97823e904239925d344fb3d30655f12aa1ba1de48485\",\"dweb:/ipfs/QmNiDWSwAXrNT2ySQ9bMVqo59RgoPdqwbxMfjFgwS8cJdW\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundProxy.sol\":{\"keccak256\":\"0xc60fde759db30fb82df868f4f08344c1b757b0a8f6b687c97884e84b47a866a4\",\"urls\":[\"bzz-raw://a848c575e1c67e9bd4236777682cbf69d912849c7ed422ad5b3c09bc33fd7ce8\",\"dweb:/ipfs/QmacUkTKTE7P4z3pEcutLZz9GwBCknZn48FpnREbM9eEcN\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundToken.sol\":{\"keccak256\":\"0x9e72ccb1d34f52292e0ec3e8fd880fa35e94b0fffc5698b0b60d987d28e99ee6\",\"urls\":[\"bzz-raw://943a68e2a74f736fba21641502e51e1ac7fa6f59e8b8d4a39446e9080d7363fb\",\"dweb:/ipfs/QmaHwfwJCZpfyienvFZgBkDy3N3TpJZuCMV8PaYCZ4JqmX\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/aave/AToken.sol\":{\"keccak256\":\"0x8ce10b2853d5b0b642678728eb71672fa640b217a9c6fabafdb461a6d767c63c\",\"urls\":[\"bzz-raw://42e7c340cbf182ba56a19cfb91bddc0f991a779de68f2af7dceb73aaf2316040\",\"dweb:/ipfs/QmW2WBbufUqakceTvQMaEfihFSJwncYrZ3D74BdsXJ6qmn\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/aave/LendingPool.sol\":{\"keccak256\":\"0x80b3a92bd70711f9b2e030700c41ebb9c82b164bf6579a60d5ecde45dc4d74d0\",\"urls\":[\"bzz-raw://813a377cde8183b894b295f8aae134b2ec5d1ac4f7469bc1ed2dae0f4f5d76e9\",\"dweb:/ipfs/QmRRdg2hKqFD9YKTMugq5Ax8Ti5u3G36JxaA2YtArKaLfc\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/compound/CEther.sol\":{\"keccak256\":\"0x39538721d76f83471d6d29a611baa2b8f8cbb60a6917182521ea25f86678997c\",\"urls\":[\"bzz-raw://4c3dfca7aedad91fcc1d8cfce527a7f2f9dd22689701f34b50b896958920f70a\",\"dweb:/ipfs/QmcesubZdWu3YdzMLMFGiNsC2FUKpyRf6XkJiAJxQRvsYn\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/Getters.sol\":{\"keccak256\":\"0xd7bf0e70fa2f1d26fdc392447dbbfc8461ba88562150541b0893ee44c604c4a2\",\"urls\":[\"bzz-raw://39a17dd1e7bad1048234d7c6dc2ec3bb21f4a812b4c647b3308f63f50813366e\",\"dweb:/ipfs/QmZ5LgsXeHBaiGSZNncjAz7VgAnxS1ZoMheWKv9WPgDHJt\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/Operation.sol\":{\"keccak256\":\"0x818a79256491f6b062f085b7cdbd18fbc96cac596f50889cd91aa84a2c3e9b9e\",\"urls\":[\"bzz-raw://c01766cd81557d25e29d65e70c4ef5ebd7c11f44ab909ff97d447c54cc26d46d\",\"dweb:/ipfs/QmbW1vHzLmV38e6BDWUK7Dz692x6fbdFxV9eGQibjR5Pjj\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/SoloMargin.sol\":{\"keccak256\":\"0x4d71515de6a44864a5a0bb9d191989cab1762759ba337e494a77d17ebf806fe3\",\"urls\":[\"bzz-raw://e2a2e3bf24e6663c9c0d9fd188881e60f05fc64fc75c884bac6f0ac41f6fbacf\",\"dweb:/ipfs/QmSSXiQu63j7XpmZdeG6chriesLevh1ZE4ssGN7818bbzt\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Account.sol\":{\"keccak256\":\"0xcb02db4f56e9881e6e66c0c7c95d8535fb478c50b6f5968795d9faa82539ac94\",\"urls\":[\"bzz-raw://c4c269cfe846001565260ea1efb0a3ae4f4a1ebc11ffbd6f37238e8984334ac5\",\"dweb:/ipfs/QmSe2bwJamsWkAJm7DukMK6qDhhTRCZV1vAPpchmtQj2Fd\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Actions.sol\":{\"keccak256\":\"0xc9faa15e3f4d5b1d7cffaffa89c3141e8261d02f856aa64cac330f90079c8b54\",\"urls\":[\"bzz-raw://92c21354720d1470c3c298132d820240f392372dffc5b6bc267bf7233e5d7c09\",\"dweb:/ipfs/Qmex9PRMFX6THSNWcJSNtEiAR6ciyj1U4aao8YT7r1rMmw\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/dydx/lib/Types.sol\":{\"keccak256\":\"0x58e671ee904e1ef5f950729db065df05b474a58813487d9eebcc7439af886f49\",\"urls\":[\"bzz-raw://00c791df9ad17b4c2533774a465201f2287aea6b5e86bda32b7d2b5aa5d13569\",\"dweb:/ipfs/QmT7iCbSNnbA6Qh28CCLPzGnUFsXsymj64jbqDKXSJYf3U\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/keeperdao/IKToken.sol\":{\"keccak256\":\"0xa7e24e71d9d4a62f2726fcac77e8c7701395348fdb05b68ff2638205c4416dfe\",\"urls\":[\"bzz-raw://c6e1038f031db00c3745b8f1847c8bc72db7f7f4d99aa453645bb6cec66dfe71\",\"dweb:/ipfs/QmY62B4skkXTdEw7CqaG3pGPW6vsvKJPPgGTSEjuA9Ujnn\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/external/keeperdao/ILiquidityPool.sol\":{\"keccak256\":\"0xd64b063b305bbfa658b31a189651ef36936bd5ef1225e7f2da8491764d289ecf\",\"urls\":[\"bzz-raw://9f01487283440572d2b91ae4d497d22457f56817330b02110ab81973660fe4a9\",\"dweb:/ipfs/QmeE5g4sFs12ivXYMc31xms3Ce1zMh3p3B6YtQvPxRfhNT\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/exchanges/ZeroExExchangeController.sol\":{\"keccak256\":\"0xa524d5a5eb3cb2beba5bc57e5600a3864adbdd63835065122c3419ab8045a6e1\",\"urls\":[\"bzz-raw://611d4f49e8e9e3161763d5bf2e1246183f75f6a9896389a16ec54951ede08fef\",\"dweb:/ipfs/QmNRNBK2owcXaX7jecHwpXVxDucVRZEfsnY7eSPjJBr14m\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/pools/AavePoolController.sol\":{\"keccak256\":\"0x01decc7c241b6dc557b6576604224af1b7c81c64ae23b4724e13d47af36d9a0f\",\"urls\":[\"bzz-raw://c9273970f2738eea520b1898a6a3bdd89a877dbf53e8da564de7fc84a20a0149\",\"dweb:/ipfs/QmTGGenRVgNLYRcue1DUP9EhG5PMdejBLk6Z5C2mfVpAz8\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/pools/CompoundPoolController.sol\":{\"keccak256\":\"0x1af9c72d4ecb0a0e175ef4253bd908acb3e683d4657fd97921932ed0dd23f71b\",\"urls\":[\"bzz-raw://9089cb1d382c84e1f5f373c4974f6dc4c83df6d4fe4700dcd559e3dbcae01eaf\",\"dweb:/ipfs/QmSmq87VNSP7yb1sY64iSbAKhziEX5Au1fDagsjzWKDTkm\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/pools/DydxPoolController.sol\":{\"keccak256\":\"0x597dc3e1f2c33598215b0a192465647ae4eb40a64c0d42e1896d84272cb644c3\",\"urls\":[\"bzz-raw://0a5c3fd75bfa303ee6d00d9b791f2599b155e51e44eb80cc669b04560bf71b11\",\"dweb:/ipfs/QmSHZ9mUHDs7XLjR7GjHUhZer3uAYtbzyfWEnqaDf24n1U\"]},\"/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/pools/KeeperDaoPoolController.sol\":{\"keccak256\":\"0xb9dc2fdff81d03ded79a43291d03fdb7012fb61287a1a545ce68c9b1ce9f1587\",\"urls\":[\"bzz-raw://275ae70af69d0e8510cf8292a8ac323724418d5d03f358537b19f79cc3753e6e\",\"dweb:/ipfs/QmNwjbaTuqig6uBgmvGege7KP5txMXNo1rBCDAdzPKe21M\"]},\"@0x/contracts-erc20/contracts/src/interfaces/IERC20Token.sol\":{\"keccak256\":\"0xa2ce97ac96d473e134efa0f62f63c20f7855fe0c9490f277392d2535f7e1cd64\",\"urls\":[\"bzz-raw://cee5a2ea25613b8adeb0f5ff5bacb164d6f5adf76dfb5d3bd9832ba3a4d02e8c\",\"dweb:/ipfs/Qmd5B5xuAqRQXxpGpUEXDsvch95weH4929kWxoApLy3kVC\"]},\"@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol\":{\"keccak256\":\"0xaf2c60dd9ed2cb3e4e07eb118e89619973c624cad9938215be2fec63780e254e\",\"urls\":[\"bzz-raw://7cb2290791d26ac48cbb2ce4918bd541f16634bdc29b80c29e814c51bc930e77\",\"dweb:/ipfs/QmaxAsWHv3TXNVibzihLtWUPVuxGXnihit9K9Dq6HmepXw\"]},\"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\":{\"keccak256\":\"0xedb2f1e66e7ece2302b4dd19d0ef29a0ffeefddae7e9a81f7104155ac3cbb75b\",\"urls\":[\"bzz-raw://9a490801ffde73bb98aa3de52ef2d615894d188820ebe4c8cd340f5cd33462ad\",\"dweb:/ipfs/QmUTSaJ6GTvNoYCmpd9dv2mz25vakoLS9tQpiF1ohAUMFV\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMath.sol\":{\"keccak256\":\"0xc331418f75cd832accf9dc439be811e10d99f1d2de3a9c0321fd3f127cdf1e54\",\"urls\":[\"bzz-raw://8a090ac0a55200b6f5624c41fff2ad21e5c673b7fcd0faf1bc88017087bbb1b2\",\"dweb:/ipfs/QmWhxuazHstpSCYDQJscHnAh6ngW7SHKT79t6yQHaJHgmi\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMathRichErrors.sol\":{\"keccak256\":\"0xd2d047534facd6051467dd7a22d7ee9fd4e54e63bb5a5fae2511eac7332fad3d\",\"urls\":[\"bzz-raw://5e0aeedd55c996fd72004a14f5c528ed60b46631ca9599bbb7925c8342ca3be4\",\"dweb:/ipfs/QmNi1ozt4sYmn4pCobjU7FQ4KGUvK77pCyWUtbD18uQgVm\"]},\"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\":{\"keccak256\":\"0x1b7b1e1a2dff4249c6f6c500000342a805f372131797b6d7314435204a651ad4\",\"urls\":[\"bzz-raw://19c11b77022ccfa530af75f236ea00ecb92aa5476f96abbde268163660b3906b\",\"dweb:/ipfs/Qmf1MtwPLpocsBArn8Npyzu4AtMqSagYTuee8JdbMXXwHM\"]},\"@0x/contracts-exchange-libs/contracts/src/LibZeroExTransaction.sol\":{\"keccak256\":\"0x15e9dddfeb5b17b6d44a6be19b3f5f2cf2a2af24174cd623fcd731fb5204635a\",\"urls\":[\"bzz-raw://9014066b0fcf65ba9ecec88fc41e3413ef27c039159abd1203f0a48bb61e498d\",\"dweb:/ipfs/QmRAF6q5XrQV7pPZM1aaahRHAMba9hh6iUeRgW2fzFgn87\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IAssetProxyDispatcher.sol\":{\"keccak256\":\"0x5aa3bcc134f9ff77da4f5ba42a17a62391f5adafd605658dcdcdd7c352d52e25\",\"urls\":[\"bzz-raw://92d355e026a2635f561621e7c835eac53ea15c40375bacc78f57c9c67b9793c4\",\"dweb:/ipfs/QmeiYbPmb3yBQ66V1HRKfDUoPGof6AxWsPQfJLfau4j7d4\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IExchange.sol\":{\"keccak256\":\"0x208c082d30b28d322d5828ba2a6b880b4366c3f9d45853456424bbc036ede0cb\",\"urls\":[\"bzz-raw://d0e8dd59721cdacc192c5d44123cb84bcc78cdb067873e616f6a4f2533868418\",\"dweb:/ipfs/Qmb6QJTLz8QTyFVYPFjRRL7TwovSdALe3kk43fUoYZs1cg\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IExchangeCore.sol\":{\"keccak256\":\"0xbccc362e85d592e0cc73108c3f7d8f66d58e449e42dbcc099442984446264b36\",\"urls\":[\"bzz-raw://383ae2d931d565fce7f046904601e1c54446c859a046af90c3d2591efe45a3f9\",\"dweb:/ipfs/QmTrfsEGAr38zgNYTHLjCuHfa7nw2hA64qvP8tLSMDgAjT\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IMatchOrders.sol\":{\"keccak256\":\"0x57e052667a28152057a1ab25b958b55d9c79afe95ea5ab645692bad18e5504b3\",\"urls\":[\"bzz-raw://de35bf6f6ab53af3dcb6b09999840adbc161c1f59623940670f552b59a28b147\",\"dweb:/ipfs/QmebunP1nLEWkMPqbFY8iQewkaUUZH5xVAs3erGerqf264\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x46928eb127258c64e030b298c935371eacc8beb8abc7ff09869d6f6ae99fa5a8\",\"urls\":[\"bzz-raw://b49ac75bdaec7a4767c15ad09640282ce1656b8e4112882a65b669d89474b5fe\",\"dweb:/ipfs/QmeRbdDvipy5x5MmSMiVXDT1pH3FeiT5v5ek7zNZom3378\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0xfaff6f59dc8d9ab1003f8408e104d10d261208187e349153c075da0b71f400cd\",\"urls\":[\"bzz-raw://10290e91a633564fc0b1e732aec3321a3bf60122b79069f90e8ce037dd8799b5\",\"dweb:/ipfs/QmaTZxNZkimMxsjTCS47sJgnfaZkG4gcTgawLAadxjkjFv\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ITransactions.sol\":{\"keccak256\":\"0x323b06d8e93e8fd96e563070bdccac7c760437326a845d75a0b1cc9224cbcda8\",\"urls\":[\"bzz-raw://3b2a2c7585783a8555d43817d7813e6465718d31fd6084e4f4c2c5d2560b8909\",\"dweb:/ipfs/QmQoiknyN4HvVvGQKbBqniD1Y2nc4R7KmXFNip7tGs5GvT\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ITransferSimulator.sol\":{\"keccak256\":\"0x15a3952999620388de42961b069f2ebde0c5900d31a10a4b8d7dc6c315d1ef7e\",\"urls\":[\"bzz-raw://6324f0cfee0ea4a0cf68858fd634b7e9c085faa75d298fc582f3c76ce4400400\",\"dweb:/ipfs/QmVeyHXXGuUHKAu9c8MU8SwEcD3omsdogK86xcE7435gE6\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IWrapperFunctions.sol\":{\"keccak256\":\"0xe463eb4df5a24faff9aa0eb5b957fb6249f86dd52d42c53fd21212926efc6fb0\",\"urls\":[\"bzz-raw://96d0862b48d996587122077eecb6b136a5dfa0d3de1e531dd665e9d5a4686732\",\"dweb:/ipfs/QmSBMvMxEhHJZDj5aWeSjSoV5QWCTyCNnzBTX9yuuU6nLL\"]},\"@0x/contracts-utils/contracts/src/LibEIP712.sol\":{\"keccak256\":\"0xe19c3cbc71fbea0fdb45c1763306550015d940bea9dbec5f3fd2edfe2165d673\",\"urls\":[\"bzz-raw://267d263f0453352a1ac8d8085a13c4976fb8c964eff8d3aab0a84173d1438efb\",\"dweb:/ipfs/QmbaRw85MYYP3KTmQ68gYdEnFyMqD7frwjxxwsj4j4JCr1\"]},\"@0x/contracts-utils/contracts/src/LibRichErrors.sol\":{\"keccak256\":\"0xe3ce6ded2fea3cc80998ca4d364bda530e273af0ba1c78d22a6cdadb6f64186e\",\"urls\":[\"bzz-raw://8239629dbcee9797a8f8157f03c2b78827b446787b4d53b3033a3e1ab538ad0b\",\"dweb:/ipfs/QmbttkX94CxMkS6t1K4He5bNwGKCRUhKqTt9pNsAL5ynst\"]},\"@0x/contracts-utils/contracts/src/LibSafeMath.sol\":{\"keccak256\":\"0xd0da9ac1905381832f6612774cb7eced3b4b60459d6bafa59f5424955b44c935\",\"urls\":[\"bzz-raw://ede4bbe2dac43c6cc4e3b7a22285e00d55b31fb8cc00b375c6ac4714298b7e6d\",\"dweb:/ipfs/QmWbN5qbJSNYrMMZMugaH5itTVSexe9yPsCPuArQVCLUgi\"]},\"@0x/contracts-utils/contracts/src/LibSafeMathRichErrors.sol\":{\"keccak256\":\"0xcf6adae04bd7af8e41fcd40ad148cc3d1cd5596bd42b01961b735c9b416a6572\",\"urls\":[\"bzz-raw://103791140e631e9d670bbc99e5f8e546f56061c5d49de97754006ce2c252d61e\",\"dweb:/ipfs/QmeRMyYFSk7n1sLzRSGqxcoX1sKQSdAQya6bRy6nseu6xX\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/GSNRecipient.sol\":{\"keccak256\":\"0x33d5d9dcb84b5c78e5a87d40bb87402086eee59af198c8cd44356ae26e02ef62\",\"urls\":[\"bzz-raw://de64782d0a1ac3af69a1ded76bbb2b3c0474d794dbeee4ae8853a57ef9e6b5d7\",\"dweb:/ipfs/QmZWUx5Zr43uDGqAnYEgv8kTaMSXdA1VZWVKwTrmtnWjS3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/IRelayHub.sol\":{\"keccak256\":\"0xe40a4875c43518eb0507b19bc4a3a72c01774c73f15188e549ada1ecc8898baf\",\"urls\":[\"bzz-raw://ce505b8a52dc44924ca700ce3909a7f764608f9c6317f5033966ec94fca3023b\",\"dweb:/ipfs/QmTysxtzyvNF3wazXAzYMUeSgQZEpPaVV2L1tbhAtmsVod\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/IRelayRecipient.sol\":{\"keccak256\":\"0x88c5716536287306f923379dae33b5e5bdc21d70ec0c440109f866d7edab7ca3\",\"urls\":[\"bzz-raw://4c5c6649a7603fb414d84fefef259e44a512df3d738c56250da1c8fa0271dc4c\",\"dweb:/ipfs/QmQGquucxTmw2isWEUf2JY25hFd5DR4U88zW7xhw5UgV3q\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzz-raw://b736ddad8143f8f1cd13c20809d4ebce5f5a8c7725081b0b703294078bd506d1\",\"dweb:/ipfs/QmdhTWCXFCuwG9JaPMjwnhkQoDj9su8R7KMPNvD5z9KeWD\"]},\"@openzeppelin/contracts-ethereum-package/contracts/drafts/SignedSafeMath.sol\":{\"keccak256\":\"0xf1587a6daea33c93e85fff4e205967183de459159aafcb01b7397fb7ec1f9f77\",\"urls\":[\"bzz-raw://1ac4f5402c6f72193c2ac0d5d878b60defb6b7cd9e13a75fe1e20654618b6375\",\"dweb:/ipfs/QmTaR64X6RsWzXvVGxPCaAoW7ZZ8Fhiii4ddRo7QpQGBrx\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x2a474399663812668bb8e9c9e7d011d54fd09de386bd6e9fcb2407a677ebd1aa\",\"urls\":[\"bzz-raw://93754fbe81bcf1f111288152c40987a9fd7cdb43dc72b9f8d7eabb96a4fa9976\",\"dweb:/ipfs/QmNZadpwGrNYB6jndNcAk6dT7f6HHMZBPXdNTa5fKu3HVp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xf2e46c19ea19035e793a4f455032784886c5b4dc43943b615cf5c09c16137e03\",\"urls\":[\"bzz-raw://b1db63829b0eee269d924a6930845ef6cb5aa869c754d9db78d53af27d6653ea\",\"dweb:/ipfs/QmXqs1mVugjBkMDsdRLwBygpbnv2ZpZsV2aQUJYonW158h\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x4342dbe1cb06cc0f0ee8929d6ab41ac68e39a1bac3b9c593e205a358ad243aee\",\"urls\":[\"bzz-raw://15a916b9dd4a3597f25381adfd5cf9abf8fbf3dab78ff001f63bc471b1cdb8f7\",\"dweb:/ipfs/QmeALu4iYnRtoPbnt5xcHHNpTqV3rPQg5Xg7rK67KqA3RB\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5062000028336200004360201b620010f71760201c565b6200003d6200013160201b62000ae51760201c565b620003fa565b600054610100900460ff1680620000685750620000686001600160e01b03620001ea16565b8062000077575060005460ff16155b6200009f5760405162461bcd60e51b81526004016200009690620003cd565b60405180910390fd5b600054610100900460ff16158015620000cb576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a380156200012d576000805461ff00191690555b5050565b600054610100900460ff1680620001565750620001566001600160e01b03620001ea16565b8062000165575060005460ff16155b620001845760405162461bcd60e51b81526004016200009690620003cd565b600054610100900460ff16158015620001b0576000805460ff1961ff0019909116610100171660011790555b6066546001600160a01b0316620001d457620001d46001600160e01b03620001f016565b8015620001e7576000805461ff00191690555b50565b303b1590565b6200021873d216153c06e857cd7f72665e0af1d7d82172f4946001600160e01b036200021a16565b565b6066546001600160a01b039081169082166200024a5760405162461bcd60e51b81526004016200009690620003b5565b806001600160a01b0316826001600160a01b031614156200027f5760405162461bcd60e51b81526004016200009690620003df565b816001600160a01b0316816001600160a01b03167fb9f84b8e65164b14439ae3620df0a4d8786d896996c0282b683f9d8c08f046e860405160405180910390a350606680546001600160a01b0319166001600160a01b0392909216919091179055565b6000620002f1602e83620003f1565b600080516020620037f083398151915281526d65207a65726f206164647265737360901b602082015260400192915050565b600062000332602e83620003f1565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b600062000384602d83620003f1565b600080516020620037f083398151915281526c652063757272656e74206f6e6560981b602082015260400192915050565b60208082528101620003c781620002e2565b92915050565b60208082528101620003c78162000323565b60208082528101620003c78162000375565b90815260200190565b6133e6806200040a6000396000f3fe6080604052600436106101095760003560e01c80638da5cb5b11610095578063c4d66de811610064578063c4d66de81461028f578063d0e30db0146102af578063e06e0e22146102b7578063f2fde38b146102d7578063ffa1ad74146102f757610109565b80638da5cb5b146102235780638f32d59b14610238578063ad61ccd51461025a578063b56f0e1c1461027c57610109565b8063715018a6116100dc578063715018a61461017357806374e861d61461018857806380274db7146101b35780638129fc1c146101e057806383947ea0146101f557610109565b806311faa1311461010b5780631220e2ff1461011e578063232a3060146101335780634434ac3d14610153575b005b6101096101193660046121fa565b61030c565b34801561012a57600080fd5b50610109610781565b34801561013f57600080fd5b5061010961014e3660046120e0565b6107a0565b34801561015f57600080fd5b5061010961016e3660046120e0565b610976565b34801561017f57600080fd5b506101096109e5565b34801561019457600080fd5b5061019d610a53565b6040516101aa9190612f67565b60405180910390f35b3480156101bf57600080fd5b506101d36101ce3660046122bb565b610a63565b6040516101aa919061304a565b3480156101ec57600080fd5b50610109610ae5565b34801561020157600080fd5b506102156102103660046120fe565b610b80565b6040516101aa92919061322e565b34801561022f57600080fd5b5061019d610c76565b34801561024457600080fd5b5061024d610c85565b6040516101aa919061303c565b34801561026657600080fd5b5061026f610cab565b6040516101aa919061308d565b61010961028a3660046123a7565b610cca565b34801561029b57600080fd5b506101096102aa3660046120e0565b6110f7565b61024d6111ca565b3480156102c357600080fd5b506101096102d23660046122fc565b611278565b3480156102e357600080fd5b506101096102f23660046120e0565b6112fb565b34801561030357600080fd5b5061026f611328565b6068546001600160a01b031661033d5760405162461bcd60e51b81526004016103349061318e565b60405180910390fd5b6000841161035d5760405162461bcd60e51b8152600401610334906130ae565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b03861681141561039b5760405162461bcd60e51b8152600401610334906131ce565b60008451116103bc5760405162461bcd60e51b81526004016103349061311e565b82518451146103dd5760405162461bcd60e51b81526004016103349061310e565b600082116103fd5760405162461bcd60e51b8152600401610334906131de565b6001600160a01b0386166104785773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561045a57600080fd5b505af115801561046e573d6000803e3d6000fd5b5050505050610493565b6104936001600160a01b03871633308863ffffffff61134916565b61049c866113aa565b8511156104b1576104af8660001961143f565b505b6104b9611cd8565b6104e98585856001600160a01b038b16156104d457346104e4565b6104e4348b63ffffffff61156a16565b6115ac565b6040516370a0823160e01b815290915060009073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2906370a0823190610526903090600401612f75565b60206040518083038186803b15801561053e57600080fd5b505afa158015610552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105769190810190612389565b9050600081116105985760405162461bcd60e51b81526004016103349061319e565b604051632e1a7d4d60e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d906105cf90849060040161304a565b600060405180830381600087803b1580156105e957600080fd5b505af11580156105fd573d6000803e3d6000fd5b50506040516370a0823160e01b81528a9250600091506001600160a01b038316906370a0823190610632903090600401612f75565b60206040518083038186803b15801561064a57600080fd5b505afa15801561065e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106829190810190612389565b905080156106a4576106a46001600160a01b038316338363ffffffff6116d816565b8351602085015160405133926001600160a01b038e16927ff4a68710ff1aa4f191fc7ca5b60a8ea5b54b9eaf7d5cd488db3c84a552a43371926106e892919061324e565b60405180910390a360695460405163b760faf960e01b81526001600160a01b039091169063b760faf9908590610722903390600401612f75565b6020604051808303818588803b15801561073b57600080fd5b505af115801561074f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250610774919081019061229d565b5050505050505050505050565b61079e73d216153c06e857cd7f72665e0af1d7d82172f4946116ff565b565b6107a8610c85565b6107c45760405162461bcd60e51b81526004016103349061313e565b6068546001600160a01b03161561086e5760685460405163095ea7b360e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29163095ea7b39161081a916001600160a01b031690600090600401612f83565b602060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061086c919081019061229d565b505b6001600160a01b0381161561090c5760405163095ea7b360e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29063095ea7b3906108b890849060001990600401612f9e565b602060405180830381600087803b1580156108d257600080fd5b505af11580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061090a919081019061229d565b505b606880546001600160a01b038084166001600160a01b031992831617928390556069805490921692169190911790556040517ff980c1430e55b1867cd9337a1f20246ab3b7255032486d0b71c24e820eebf3ab9061096b908390612f75565b60405180910390a150565b61097e610c85565b61099a5760405162461bcd60e51b81526004016103349061313e565b606a80546001600160a01b0319166001600160a01b0383161790556040517feb58b3605dc4b57dbf9dbd3db2d10cea4dd28005a4d8310f298e16d63b2047619061096b908390612f67565b6109ed610c85565b610a095760405162461bcd60e51b81526004016103349061313e565b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6066546001600160a01b03165b90565b6000610a6d610a53565b6001600160a01b0316336001600160a01b031614610a9d5760405162461bcd60e51b8152600401610334906131be565b610adc83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506117c192505050565b90505b92915050565b600054610100900460ff1680610afe5750610afe6117c7565b80610b0c575060005460ff16155b610b285760405162461bcd60e51b81526004016103349061314e565b600054610100900460ff16158015610b53576000805460ff1961ff0019909116610100171660011790555b6066546001600160a01b0316610b6b57610b6b610781565b8015610b7d576000805461ff00191690555b50565b60006060808d8d8d8d8d8d8d8d610b95610a53565b30604051602001610baf9a99989796959493929190612e95565b60408051601f19818403018152606a546020601f8a018190048102850181019093528884529093506001600160a01b031691610c1c9189908990819084018382808284376000920191909152505085516020870120610c10925090506117cd565b9063ffffffff6117fd16565b6001600160a01b031614610c3e57610c3460006118d9565b9250925050610c66565b606a546001600160a01b0316610c5857610c3460016118d9565b610c606118f1565b92509250505b9b509b9950505050505050505050565b6033546001600160a01b031690565b6033546000906001600160a01b0316610c9c611915565b6001600160a01b031614905090565b6040805180820190915260058152640312e302e360dc1b602082015290565b60008511610cea5760405162461bcd60e51b8152600401610334906130ae565b60008111610d0a5760405162461bcd60e51b8152600401610334906130ce565b60008351118015610d1c575060008251115b610d385760405162461bcd60e51b8152600401610334906130ee565b8151835114610d595760405162461bcd60e51b8152600401610334906130de565b6068546001600160a01b0316610d815760405162461bcd60e51b81526004016103349061318e565b606954604051639470b0bd60e01b81526001600160a01b0390911690639470b0bd90610db39033908990600401612f9e565b602060405180830381600087803b158015610dcd57600080fd5b505af1158015610de1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e05919081019061229d565b5073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b158015610e5557600080fd5b505af1158015610e69573d6000803e3d6000fd5b5050505050610e76611cd8565b610e8284848434611940565b8051602082015160405192935033926001600160a01b038916927f830405d045810d02985b20c8902aa806ffe7fc8598401e410248a74cac6d15ce92610ec79261324e565b60405180910390a36040516370a0823160e01b815260009073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2906370a0823190610f09903090600401612f75565b60206040518083038186803b158015610f2157600080fd5b505afa158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f599190810190612389565b604051632e1a7d4d60e01b815290915073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d90610f9390849060040161304a565b600060405180830381600087803b158015610fad57600080fd5b505af1158015610fc1573d6000803e3d6000fd5b50506040516370a0823160e01b8152889250600091506001600160a01b038316906370a0823190610ff6903090600401612f75565b60206040518083038186803b15801561100e57600080fd5b505afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110469190810190612389565b90508015611068576110686001600160a01b038316338363ffffffff6116d816565b4780156110eb576000336001600160a01b03168260405161108890612f5c565b60006040518083038185875af1925050503d80600081146110c5576040519150601f19603f3d011682016040523d82523d6000602084013e6110ca565b606091505b50509050806107745760405162461bcd60e51b8152600401610334906131ae565b50505050505050505050565b600054610100900460ff168061111057506111106117c7565b8061111e575060005460ff16155b61113a5760405162461bcd60e51b81526004016103349061314e565b600054610100900460ff16158015611165576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a380156111c6576000805461ff00191690555b5050565b60008034116111eb5760405162461bcd60e51b81526004016103349061317e565b6069546001600160a01b031663b760faf934611205611915565b6040518363ffffffff1660e01b81526004016112219190612f75565b6020604051808303818588803b15801561123a57600080fd5b505af115801561124e573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250611273919081019061229d565b905090565b611280610a53565b6001600160a01b0316336001600160a01b0316146112b05760405162461bcd60e51b8152600401610334906131be565b6112f485858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508792508691508590506113a4565b5050505050565b611303610c85565b61131f5760405162461bcd60e51b81526004016103349061313e565b610b7d816119ef565b604051806040016040528060058152602001640312e302e360dc1b81525081565b6040516113a49085906323b872dd60e01b9061136d90879087908790602401612fd4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a71565b50505050565b604051636eb1769f60e11b81526000906001600160a01b0383169063dd62ed3e906113ef9030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401612fb9565b60206040518083038186803b15801561140757600080fd5b505afa15801561141b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610adf9190810190612389565b604051636eb1769f60e11b8152600090839082906001600160a01b0383169063dd62ed3e906114889030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401612fb9565b60206040518083038186803b1580156114a057600080fd5b505afa1580156114b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114d89190810190612389565b9050838114156114ed57600192505050610adf565b6000841180156114fd5750600081115b15611531576115316001600160a01b0383167395e6f48254609a6ee006f7d493c8e5fb97094cef600063ffffffff611b5616565b61155f6001600160a01b0383167395e6f48254609a6ee006f7d493c8e5fb97094cef8663ffffffff611b5616565b506001949350505050565b6000610adc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c1c565b6115b4611cd8565b60008551116115d55760405162461bcd60e51b81526004016103349061309e565b83518551146115f65760405162461bcd60e51b81526004016103349061315e565b600083116116165760405162461bcd60e51b8152600401610334906131de565b61161e611cf6565b60405163a6c3bf3360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef9063a6c3bf3390859061165b908a9089908b9060040161300a565b60a0604051808303818588803b15801561167457600080fd5b505af1158015611688573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506116ad919081019061236b565b905060405180604001604052808260200151815260200182600001518152509150505b949350505050565b6040516116fa90849063a9059cbb60e01b9061136d9086908690602401612ffc565b505050565b6066546001600160a01b0390811690821661172c5760405162461bcd60e51b81526004016103349061312e565b806001600160a01b0316826001600160a01b0316141561175e5760405162461bcd60e51b81526004016103349061316e565b816001600160a01b0316816001600160a01b03167fb9f84b8e65164b14439ae3620df0a4d8786d896996c0282b683f9d8c08f046e860405160405180910390a350606680546001600160a01b0319166001600160a01b0392909216919091179055565b50600090565b303b1590565b6000816040516020016117e09190612f3c565b604051602081830303815290604052805190602001209050919050565b6000815160411461181057506000610adf565b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156118565760009350505050610adf565b8060ff16601b1415801561186e57508060ff16601c14155b1561187f5760009350505050610adf565b600186828585604051600081526020016040526040516118a29493929190613058565b6020604051602081039080840390855afa1580156118c4573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b604080516020810190915260008152600b9190910191565b6000606061190d60405180602001604052806000815250611c4d565b915091509091565b6066546000906001600160a01b03163314611931575033610a60565b611939611c52565b9050610a60565b611948611cd8565b60008551116119695760405162461bcd60e51b81526004016103349061309e565b835185511461198a5760405162461bcd60e51b81526004016103349061315e565b600083116119aa5760405162461bcd60e51b81526004016103349061320e565b6119b2611cf6565b604051638bc8efb360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef90638bc8efb390859061165b908a9089908b9060040161300a565b6001600160a01b038116611a155760405162461bcd60e51b8152600401610334906130be565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b611a83826001600160a01b0316611c9f565b611a9f5760405162461bcd60e51b81526004016103349061321e565b60006060836001600160a01b031683604051611abb9190612f30565b6000604051808303816000865af19150503d8060008114611af8576040519150601f19603f3d011682016040523d82523d6000602084013e611afd565b606091505b509150915081611b1f5760405162461bcd60e51b8152600401610334906130fe565b8051156113a45780806020019051611b3a919081019061229d565b6113a45760405162461bcd60e51b8152600401610334906131ee565b801580611bde5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90611b8c9030908690600401612fb9565b60206040518083038186803b158015611ba457600080fd5b505afa158015611bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bdc9190810190612389565b155b611bfa5760405162461bcd60e51b8152600401610334906131fe565b6040516116fa90849063095ea7b360e01b9061136d9086908690602401612ffc565b60008184841115611c405760405162461bcd60e51b8152600401610334919061308d565b50508183035b9392505050565b600091565b600060606000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031692915050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906116d0575050151592915050565b60405180604001604052806002906020820280388339509192915050565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8035610adf8161337d565b600082601f830112611d4157600080fd5b8135611d54611d4f82613282565b61325c565b81815260209384019390925082018360005b83811015611d925781358601611d7c8882611e62565b8452506020928301929190910190600101611d66565b5050505092915050565b600082601f830112611dad57600080fd5b8135611dbb611d4f82613282565b81815260209384019390925082018360005b83811015611d925781358601611de38882611f34565b8452506020928301929190910190600101611dcd565b8035610adf81613391565b8051610adf81613391565b8035610adf8161339a565b60008083601f840112611e2c57600080fd5b5081356001600160401b03811115611e4357600080fd5b602083019150836001820283011115611e5b57600080fd5b9250929050565b600082601f830112611e7357600080fd5b8135611e81611d4f826132a2565b91508082526020830160208301858383011115611e9d57600080fd5b611ea8838284613324565b50505092915050565b600060a08284031215611ec357600080fd5b611ecd60a061325c565b90506000611edb84846120d5565b8252506020611eec848483016120d5565b6020830152506040611f00848285016120d5565b6040830152506060611f14848285016120d5565b6060830152506080611f28848285016120d5565b60808301525092915050565b60006101c08284031215611f4757600080fd5b611f526101c061325c565b90506000611f608484611d25565b8252506020611f7184848301611d25565b6020830152506040611f8584828501611d25565b6040830152506060611f9984828501611d25565b6060830152506080611fad84828501611e0f565b60808301525060a0611fc184828501611e0f565b60a08301525060c0611fd584828501611e0f565b60c08301525060e0611fe984828501611e0f565b60e083015250610100611ffe84828501611e0f565b6101008301525061012061201484828501611e0f565b610120830152506101408201356001600160401b0381111561203557600080fd5b61204184828501611e62565b610140830152506101608201356001600160401b0381111561206257600080fd5b61206e84828501611e62565b610160830152506101808201356001600160401b0381111561208f57600080fd5b61209b84828501611e62565b610180830152506101a08201356001600160401b038111156120bc57600080fd5b6120c884828501611e62565b6101a08301525092915050565b8051610adf8161339a565b6000602082840312156120f257600080fd5b60006116d08484611d25565b60008060008060008060008060008060006101208c8e03121561212057600080fd5b600061212c8e8e611d25565b9b5050602061213d8e828f01611d25565b9a505060408c01356001600160401b0381111561215957600080fd5b6121658e828f01611e1a565b995099505060606121788e828f01611e0f565b97505060806121898e828f01611e0f565b96505060a061219a8e828f01611e0f565b95505060c06121ab8e828f01611e0f565b94505060e08c01356001600160401b038111156121c757600080fd5b6121d38e828f01611e1a565b93509350506101006121e78e828f01611e0f565b9150509295989b509295989b9093969950565b600080600080600060a0868803121561221257600080fd5b600061221e8888611d25565b955050602061222f88828901611e0f565b94505060408601356001600160401b0381111561224b57600080fd5b61225788828901611d9c565b93505060608601356001600160401b0381111561227357600080fd5b61227f88828901611d30565b925050608061229088828901611e0f565b9150509295509295909350565b6000602082840312156122af57600080fd5b60006116d08484611e04565b600080602083850312156122ce57600080fd5b82356001600160401b038111156122e457600080fd5b6122f085828601611e1a565b92509250509250929050565b60008060008060006080868803121561231457600080fd5b85356001600160401b0381111561232a57600080fd5b61233688828901611e1a565b9550955050602061234988828901611df9565b935050604061235a88828901611e0f565b925050606061229088828901611e0f565b600060a0828403121561237d57600080fd5b60006116d08484611eb1565b60006020828403121561239b57600080fd5b60006116d084846120d5565b600080600080600060a086880312156123bf57600080fd5b60006123cb8888611e0f565b955050602061222f88828901611d25565b6000610adc838361252e565b6000610adc8383612d51565b6123fd81613303565b82525050565b6123fd61240f826132e1565b61335c565b6123fd816132e1565b6000612428826132cf565b61243281856132d3565b935083602082028501612444856132c9565b8060005b8581101561247e578484038952815161246185826123dc565b945061246c836132c9565b60209a909a0199925050600101612448565b5091979650505050505050565b6000612496826132cf565b6124a081856132d3565b9350836020820285016124b2856132c9565b8060005b8581101561247e57848403895281516124cf85826123e8565b94506124da836132c9565b60209a909a01999250506001016124b6565b6123fd816132ec565b6123fd81610a60565b6123fd61250a82610a60565b610a60565b600061251b83856132dc565b9350612528838584613324565b50500190565b6000612539826132cf565b61254381856132d3565b9350612553818560208601613330565b61255c8161336d565b9093019392505050565b6000612571826132cf565b61257b81856132dc565b935061258b818560208601613330565b9290920192915050565b6123fd8161330e565b60006125ab6036836132d3565b7f4174206c65617374206f6e65206f7264657220616e64206d61746368696e672081527539b4b3b730ba3ab9329034b9903932b8bab4b932b21760511b602082015260400192915050565b60006126036024836132d3565b7f496e70757420616d6f756e74206d7573742062652067726561746572207468618152633710181760e11b602082015260400192915050565b6000612649601c836132dc565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c0192915050565b60006126826026836132d3565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b60006126ca602a836132d3565b7f4d616b657220617373657420616d6f756e74206d75737420626520677265617481526932b9103a3430b710181760b11b602082015260400192915050565b6000612716603a836132d3565b7f4c656e67746873206f6620616c6c206f726465727320616e64207369676e617481527f7572657320617272617973206d75737420626520657175616c2e000000000000602082015260400192915050565b6000612775602e836132d3565b7f4d75737420737570706c79206d6f7265207468616e2030206f7264657273206181526d37321039b4b3b730ba3ab932b99760911b602082015260400192915050565b60006127c56020836132d3565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b60006127fe6035836132d3565b7f4c656e677468206f66206f726465727320616e64207369676e6174757265732081527430b93930bcb99036bab9ba1031329032b8bab0b61760591b602082015260400192915050565b60006128556016836132d3565b7527b93232b9399030b93930bc9034b99032b6b83a3c9760511b815260200192915050565b6000612887602e836132d3565b7f47534e526563697069656e743a206e65772052656c617948756220697320746881526d65207a65726f206164647265737360901b602082015260400192915050565b60006128d76020836132d3565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000612910602e836132d3565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b60006129606031836132d3565b7f4d69736d61746368206265747765656e206e756d626572206f66206f72646572815270399030b7321039b4b3b730ba3ab932b99760791b602082015260400192915050565b60006129b3602d836132d3565b7f47534e526563697069656e743a206e65772052656c617948756220697320746881526c652063757272656e74206f6e6560981b602082015260400192915050565b6000612a02601c836132d3565b7f4d757374206465706f736974206d6f7265207468616e20302065746800000000815260200192915050565b6000612a3b6054836132d3565b7f46756e64206d616e6167657220636f6e7472616374206e6f74207365742e205481527f686973206d61792062652064756520746f20616e2075706772616465206f66206020820152733a3434b990383937bc3c9031b7b73a3930b1ba1760611b604082015260600192915050565b6000612ab76012836132d3565b712737902ba2aa241037baba383aba3a32b21760711b815260200192915050565b6000612ae56034836132d3565b7f4661696c656420746f207472616e736665722045544820746f206d73672e7365815273373232b91030b33a32b91032bc31b430b733b29760611b602082015260400192915050565b6000612b3b6024836132d3565b7f47534e526563697069656e743a2063616c6c6572206973206e6f742052656c618152633ca43ab160e11b602082015260400192915050565b6000610adf6000836132dc565b6000612b8e602f836132d3565b7f496e70757420616e64206f75747075742063757272656e636965732063616e6e81526e37ba103132903a34329039b0b6b29760891b602082015260400192915050565b6000612bdf602f836132d3565b7f54616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b6000612c30602a836132d3565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b6000612c7c6036836132d3565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015260400192915050565b6000612cd4602f836132d3565b7f4d616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b6000612d25601f836132d3565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b80516000906101c0840190612d668582612414565b506020830151612d796020860182612414565b506040830151612d8c6040860182612414565b506060830151612d9f6060860182612414565b506080830151612db260808601826124f5565b5060a0830151612dc560a08601826124f5565b5060c0830151612dd860c08601826124f5565b5060e0830151612deb60e08601826124f5565b50610100830151612e006101008601826124f5565b50610120830151612e156101208601826124f5565b50610140830151848203610140860152612e2f828261252e565b915050610160830151848203610160860152612e4b828261252e565b915050610180830151848203610180860152612e67828261252e565b9150506101a08301518482036101a0860152612e83828261252e565b95945050505050565b6123fd816132fd565b6000612ea1828d612403565b601482019150612eb1828c612403565b601482019150612ec2828a8c61250f565b9150612ece82896124fe565b602082019150612ede82886124fe565b602082019150612eee82876124fe565b602082019150612efe82866124fe565b602082019150612f0e8285612403565b601482019150612f1e8284612403565b506014019a9950505050505050505050565b6000611c468284612566565b6000612f478261263c565b9150612f5382846124fe565b50602001919050565b6000610adf82612b74565b60208101610adf8284612414565b60208101610adf82846123f4565b60408101612f9182856123f4565b611c466020830184612595565b60408101612fac82856123f4565b611c4660208301846124f5565b60408101612fc78285612414565b611c466020830184612414565b60608101612fe28286612414565b612fef6020830185612414565b6116d060408301846124f5565b60408101612fac8285612414565b6060808252810161301b818661248b565b905061302a60208301856124f5565b8181036040830152612e83818461241d565b60208101610adf82846124ec565b60208101610adf82846124f5565b6080810161306682876124f5565b6130736020830186612e8c565b61308060408301856124f5565b612e8360608301846124f5565b60208082528101610adc818461252e565b60208082528101610adf8161259e565b60208082528101610adf816125f6565b60208082528101610adf81612675565b60208082528101610adf816126bd565b60208082528101610adf81612709565b60208082528101610adf81612768565b60208082528101610adf816127b8565b60208082528101610adf816127f1565b60208082528101610adf81612848565b60208082528101610adf8161287a565b60208082528101610adf816128ca565b60208082528101610adf81612903565b60208082528101610adf81612953565b60208082528101610adf816129a6565b60208082528101610adf816129f5565b60208082528101610adf81612a2e565b60208082528101610adf81612aaa565b60208082528101610adf81612ad8565b60208082528101610adf81612b2e565b60208082528101610adf81612b81565b60208082528101610adf81612bd2565b60208082528101610adf81612c23565b60208082528101610adf81612c6f565b60208082528101610adf81612cc7565b60208082528101610adf81612d18565b6040810161323c82856124f5565b81810360208301526116d0818461252e565b60408101612fac82856124f5565b6040518181016001600160401b038111828210171561327a57600080fd5b604052919050565b60006001600160401b0382111561329857600080fd5b5060209081020190565b60006001600160401b038211156132b857600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b6000610adf826132f1565b151590565b6001600160a01b031690565b60ff1690565b6000610adf82613319565b6000610adf82610a60565b6000610adf826132e1565b82818337506000910152565b60005b8381101561334b578181015183820152602001613333565b838111156113a45750506000910152565b6000610adf826000610adf82613377565b601f01601f191690565b60601b90565b613386816132e1565b8114610b7d57600080fd5b613386816132ec565b61338681610a6056fea365627a7a72315820d6491cd0a3aebd183ed9af0088aeded57e787345521f29752a47ef6f23a981446c6578706572696d656e74616cf564736f6c6343000511004047534e526563697069656e743a206e65772052656c6179487562206973207468",
  "deployedBytecode": "0x6080604052600436106101095760003560e01c80638da5cb5b11610095578063c4d66de811610064578063c4d66de81461028f578063d0e30db0146102af578063e06e0e22146102b7578063f2fde38b146102d7578063ffa1ad74146102f757610109565b80638da5cb5b146102235780638f32d59b14610238578063ad61ccd51461025a578063b56f0e1c1461027c57610109565b8063715018a6116100dc578063715018a61461017357806374e861d61461018857806380274db7146101b35780638129fc1c146101e057806383947ea0146101f557610109565b806311faa1311461010b5780631220e2ff1461011e578063232a3060146101335780634434ac3d14610153575b005b6101096101193660046121fa565b61030c565b34801561012a57600080fd5b50610109610781565b34801561013f57600080fd5b5061010961014e3660046120e0565b6107a0565b34801561015f57600080fd5b5061010961016e3660046120e0565b610976565b34801561017f57600080fd5b506101096109e5565b34801561019457600080fd5b5061019d610a53565b6040516101aa9190612f67565b60405180910390f35b3480156101bf57600080fd5b506101d36101ce3660046122bb565b610a63565b6040516101aa919061304a565b3480156101ec57600080fd5b50610109610ae5565b34801561020157600080fd5b506102156102103660046120fe565b610b80565b6040516101aa92919061322e565b34801561022f57600080fd5b5061019d610c76565b34801561024457600080fd5b5061024d610c85565b6040516101aa919061303c565b34801561026657600080fd5b5061026f610cab565b6040516101aa919061308d565b61010961028a3660046123a7565b610cca565b34801561029b57600080fd5b506101096102aa3660046120e0565b6110f7565b61024d6111ca565b3480156102c357600080fd5b506101096102d23660046122fc565b611278565b3480156102e357600080fd5b506101096102f23660046120e0565b6112fb565b34801561030357600080fd5b5061026f611328565b6068546001600160a01b031661033d5760405162461bcd60e51b81526004016103349061318e565b60405180910390fd5b6000841161035d5760405162461bcd60e51b8152600401610334906130ae565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b03861681141561039b5760405162461bcd60e51b8152600401610334906131ce565b60008451116103bc5760405162461bcd60e51b81526004016103349061311e565b82518451146103dd5760405162461bcd60e51b81526004016103349061310e565b600082116103fd5760405162461bcd60e51b8152600401610334906131de565b6001600160a01b0386166104785773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561045a57600080fd5b505af115801561046e573d6000803e3d6000fd5b5050505050610493565b6104936001600160a01b03871633308863ffffffff61134916565b61049c866113aa565b8511156104b1576104af8660001961143f565b505b6104b9611cd8565b6104e98585856001600160a01b038b16156104d457346104e4565b6104e4348b63ffffffff61156a16565b6115ac565b6040516370a0823160e01b815290915060009073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2906370a0823190610526903090600401612f75565b60206040518083038186803b15801561053e57600080fd5b505afa158015610552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105769190810190612389565b9050600081116105985760405162461bcd60e51b81526004016103349061319e565b604051632e1a7d4d60e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d906105cf90849060040161304a565b600060405180830381600087803b1580156105e957600080fd5b505af11580156105fd573d6000803e3d6000fd5b50506040516370a0823160e01b81528a9250600091506001600160a01b038316906370a0823190610632903090600401612f75565b60206040518083038186803b15801561064a57600080fd5b505afa15801561065e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106829190810190612389565b905080156106a4576106a46001600160a01b038316338363ffffffff6116d816565b8351602085015160405133926001600160a01b038e16927ff4a68710ff1aa4f191fc7ca5b60a8ea5b54b9eaf7d5cd488db3c84a552a43371926106e892919061324e565b60405180910390a360695460405163b760faf960e01b81526001600160a01b039091169063b760faf9908590610722903390600401612f75565b6020604051808303818588803b15801561073b57600080fd5b505af115801561074f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250610774919081019061229d565b5050505050505050505050565b61079e73d216153c06e857cd7f72665e0af1d7d82172f4946116ff565b565b6107a8610c85565b6107c45760405162461bcd60e51b81526004016103349061313e565b6068546001600160a01b03161561086e5760685460405163095ea7b360e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29163095ea7b39161081a916001600160a01b031690600090600401612f83565b602060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061086c919081019061229d565b505b6001600160a01b0381161561090c5760405163095ea7b360e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29063095ea7b3906108b890849060001990600401612f9e565b602060405180830381600087803b1580156108d257600080fd5b505af11580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061090a919081019061229d565b505b606880546001600160a01b038084166001600160a01b031992831617928390556069805490921692169190911790556040517ff980c1430e55b1867cd9337a1f20246ab3b7255032486d0b71c24e820eebf3ab9061096b908390612f75565b60405180910390a150565b61097e610c85565b61099a5760405162461bcd60e51b81526004016103349061313e565b606a80546001600160a01b0319166001600160a01b0383161790556040517feb58b3605dc4b57dbf9dbd3db2d10cea4dd28005a4d8310f298e16d63b2047619061096b908390612f67565b6109ed610c85565b610a095760405162461bcd60e51b81526004016103349061313e565b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6066546001600160a01b03165b90565b6000610a6d610a53565b6001600160a01b0316336001600160a01b031614610a9d5760405162461bcd60e51b8152600401610334906131be565b610adc83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506117c192505050565b90505b92915050565b600054610100900460ff1680610afe5750610afe6117c7565b80610b0c575060005460ff16155b610b285760405162461bcd60e51b81526004016103349061314e565b600054610100900460ff16158015610b53576000805460ff1961ff0019909116610100171660011790555b6066546001600160a01b0316610b6b57610b6b610781565b8015610b7d576000805461ff00191690555b50565b60006060808d8d8d8d8d8d8d8d610b95610a53565b30604051602001610baf9a99989796959493929190612e95565b60408051601f19818403018152606a546020601f8a018190048102850181019093528884529093506001600160a01b031691610c1c9189908990819084018382808284376000920191909152505085516020870120610c10925090506117cd565b9063ffffffff6117fd16565b6001600160a01b031614610c3e57610c3460006118d9565b9250925050610c66565b606a546001600160a01b0316610c5857610c3460016118d9565b610c606118f1565b92509250505b9b509b9950505050505050505050565b6033546001600160a01b031690565b6033546000906001600160a01b0316610c9c611915565b6001600160a01b031614905090565b6040805180820190915260058152640312e302e360dc1b602082015290565b60008511610cea5760405162461bcd60e51b8152600401610334906130ae565b60008111610d0a5760405162461bcd60e51b8152600401610334906130ce565b60008351118015610d1c575060008251115b610d385760405162461bcd60e51b8152600401610334906130ee565b8151835114610d595760405162461bcd60e51b8152600401610334906130de565b6068546001600160a01b0316610d815760405162461bcd60e51b81526004016103349061318e565b606954604051639470b0bd60e01b81526001600160a01b0390911690639470b0bd90610db39033908990600401612f9e565b602060405180830381600087803b158015610dcd57600080fd5b505af1158015610de1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e05919081019061229d565b5073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b158015610e5557600080fd5b505af1158015610e69573d6000803e3d6000fd5b5050505050610e76611cd8565b610e8284848434611940565b8051602082015160405192935033926001600160a01b038916927f830405d045810d02985b20c8902aa806ffe7fc8598401e410248a74cac6d15ce92610ec79261324e565b60405180910390a36040516370a0823160e01b815260009073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2906370a0823190610f09903090600401612f75565b60206040518083038186803b158015610f2157600080fd5b505afa158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f599190810190612389565b604051632e1a7d4d60e01b815290915073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d90610f9390849060040161304a565b600060405180830381600087803b158015610fad57600080fd5b505af1158015610fc1573d6000803e3d6000fd5b50506040516370a0823160e01b8152889250600091506001600160a01b038316906370a0823190610ff6903090600401612f75565b60206040518083038186803b15801561100e57600080fd5b505afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110469190810190612389565b90508015611068576110686001600160a01b038316338363ffffffff6116d816565b4780156110eb576000336001600160a01b03168260405161108890612f5c565b60006040518083038185875af1925050503d80600081146110c5576040519150601f19603f3d011682016040523d82523d6000602084013e6110ca565b606091505b50509050806107745760405162461bcd60e51b8152600401610334906131ae565b50505050505050505050565b600054610100900460ff168061111057506111106117c7565b8061111e575060005460ff16155b61113a5760405162461bcd60e51b81526004016103349061314e565b600054610100900460ff16158015611165576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a380156111c6576000805461ff00191690555b5050565b60008034116111eb5760405162461bcd60e51b81526004016103349061317e565b6069546001600160a01b031663b760faf934611205611915565b6040518363ffffffff1660e01b81526004016112219190612f75565b6020604051808303818588803b15801561123a57600080fd5b505af115801561124e573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250611273919081019061229d565b905090565b611280610a53565b6001600160a01b0316336001600160a01b0316146112b05760405162461bcd60e51b8152600401610334906131be565b6112f485858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508792508691508590506113a4565b5050505050565b611303610c85565b61131f5760405162461bcd60e51b81526004016103349061313e565b610b7d816119ef565b604051806040016040528060058152602001640312e302e360dc1b81525081565b6040516113a49085906323b872dd60e01b9061136d90879087908790602401612fd4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a71565b50505050565b604051636eb1769f60e11b81526000906001600160a01b0383169063dd62ed3e906113ef9030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401612fb9565b60206040518083038186803b15801561140757600080fd5b505afa15801561141b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610adf9190810190612389565b604051636eb1769f60e11b8152600090839082906001600160a01b0383169063dd62ed3e906114889030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401612fb9565b60206040518083038186803b1580156114a057600080fd5b505afa1580156114b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114d89190810190612389565b9050838114156114ed57600192505050610adf565b6000841180156114fd5750600081115b15611531576115316001600160a01b0383167395e6f48254609a6ee006f7d493c8e5fb97094cef600063ffffffff611b5616565b61155f6001600160a01b0383167395e6f48254609a6ee006f7d493c8e5fb97094cef8663ffffffff611b5616565b506001949350505050565b6000610adc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c1c565b6115b4611cd8565b60008551116115d55760405162461bcd60e51b81526004016103349061309e565b83518551146115f65760405162461bcd60e51b81526004016103349061315e565b600083116116165760405162461bcd60e51b8152600401610334906131de565b61161e611cf6565b60405163a6c3bf3360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef9063a6c3bf3390859061165b908a9089908b9060040161300a565b60a0604051808303818588803b15801561167457600080fd5b505af1158015611688573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506116ad919081019061236b565b905060405180604001604052808260200151815260200182600001518152509150505b949350505050565b6040516116fa90849063a9059cbb60e01b9061136d9086908690602401612ffc565b505050565b6066546001600160a01b0390811690821661172c5760405162461bcd60e51b81526004016103349061312e565b806001600160a01b0316826001600160a01b0316141561175e5760405162461bcd60e51b81526004016103349061316e565b816001600160a01b0316816001600160a01b03167fb9f84b8e65164b14439ae3620df0a4d8786d896996c0282b683f9d8c08f046e860405160405180910390a350606680546001600160a01b0319166001600160a01b0392909216919091179055565b50600090565b303b1590565b6000816040516020016117e09190612f3c565b604051602081830303815290604052805190602001209050919050565b6000815160411461181057506000610adf565b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156118565760009350505050610adf565b8060ff16601b1415801561186e57508060ff16601c14155b1561187f5760009350505050610adf565b600186828585604051600081526020016040526040516118a29493929190613058565b6020604051602081039080840390855afa1580156118c4573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b604080516020810190915260008152600b9190910191565b6000606061190d60405180602001604052806000815250611c4d565b915091509091565b6066546000906001600160a01b03163314611931575033610a60565b611939611c52565b9050610a60565b611948611cd8565b60008551116119695760405162461bcd60e51b81526004016103349061309e565b835185511461198a5760405162461bcd60e51b81526004016103349061315e565b600083116119aa5760405162461bcd60e51b81526004016103349061320e565b6119b2611cf6565b604051638bc8efb360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef90638bc8efb390859061165b908a9089908b9060040161300a565b6001600160a01b038116611a155760405162461bcd60e51b8152600401610334906130be565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b611a83826001600160a01b0316611c9f565b611a9f5760405162461bcd60e51b81526004016103349061321e565b60006060836001600160a01b031683604051611abb9190612f30565b6000604051808303816000865af19150503d8060008114611af8576040519150601f19603f3d011682016040523d82523d6000602084013e611afd565b606091505b509150915081611b1f5760405162461bcd60e51b8152600401610334906130fe565b8051156113a45780806020019051611b3a919081019061229d565b6113a45760405162461bcd60e51b8152600401610334906131ee565b801580611bde5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90611b8c9030908690600401612fb9565b60206040518083038186803b158015611ba457600080fd5b505afa158015611bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bdc9190810190612389565b155b611bfa5760405162461bcd60e51b8152600401610334906131fe565b6040516116fa90849063095ea7b360e01b9061136d9086908690602401612ffc565b60008184841115611c405760405162461bcd60e51b8152600401610334919061308d565b50508183035b9392505050565b600091565b600060606000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031692915050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906116d0575050151592915050565b60405180604001604052806002906020820280388339509192915050565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8035610adf8161337d565b600082601f830112611d4157600080fd5b8135611d54611d4f82613282565b61325c565b81815260209384019390925082018360005b83811015611d925781358601611d7c8882611e62565b8452506020928301929190910190600101611d66565b5050505092915050565b600082601f830112611dad57600080fd5b8135611dbb611d4f82613282565b81815260209384019390925082018360005b83811015611d925781358601611de38882611f34565b8452506020928301929190910190600101611dcd565b8035610adf81613391565b8051610adf81613391565b8035610adf8161339a565b60008083601f840112611e2c57600080fd5b5081356001600160401b03811115611e4357600080fd5b602083019150836001820283011115611e5b57600080fd5b9250929050565b600082601f830112611e7357600080fd5b8135611e81611d4f826132a2565b91508082526020830160208301858383011115611e9d57600080fd5b611ea8838284613324565b50505092915050565b600060a08284031215611ec357600080fd5b611ecd60a061325c565b90506000611edb84846120d5565b8252506020611eec848483016120d5565b6020830152506040611f00848285016120d5565b6040830152506060611f14848285016120d5565b6060830152506080611f28848285016120d5565b60808301525092915050565b60006101c08284031215611f4757600080fd5b611f526101c061325c565b90506000611f608484611d25565b8252506020611f7184848301611d25565b6020830152506040611f8584828501611d25565b6040830152506060611f9984828501611d25565b6060830152506080611fad84828501611e0f565b60808301525060a0611fc184828501611e0f565b60a08301525060c0611fd584828501611e0f565b60c08301525060e0611fe984828501611e0f565b60e083015250610100611ffe84828501611e0f565b6101008301525061012061201484828501611e0f565b610120830152506101408201356001600160401b0381111561203557600080fd5b61204184828501611e62565b610140830152506101608201356001600160401b0381111561206257600080fd5b61206e84828501611e62565b610160830152506101808201356001600160401b0381111561208f57600080fd5b61209b84828501611e62565b610180830152506101a08201356001600160401b038111156120bc57600080fd5b6120c884828501611e62565b6101a08301525092915050565b8051610adf8161339a565b6000602082840312156120f257600080fd5b60006116d08484611d25565b60008060008060008060008060008060006101208c8e03121561212057600080fd5b600061212c8e8e611d25565b9b5050602061213d8e828f01611d25565b9a505060408c01356001600160401b0381111561215957600080fd5b6121658e828f01611e1a565b995099505060606121788e828f01611e0f565b97505060806121898e828f01611e0f565b96505060a061219a8e828f01611e0f565b95505060c06121ab8e828f01611e0f565b94505060e08c01356001600160401b038111156121c757600080fd5b6121d38e828f01611e1a565b93509350506101006121e78e828f01611e0f565b9150509295989b509295989b9093969950565b600080600080600060a0868803121561221257600080fd5b600061221e8888611d25565b955050602061222f88828901611e0f565b94505060408601356001600160401b0381111561224b57600080fd5b61225788828901611d9c565b93505060608601356001600160401b0381111561227357600080fd5b61227f88828901611d30565b925050608061229088828901611e0f565b9150509295509295909350565b6000602082840312156122af57600080fd5b60006116d08484611e04565b600080602083850312156122ce57600080fd5b82356001600160401b038111156122e457600080fd5b6122f085828601611e1a565b92509250509250929050565b60008060008060006080868803121561231457600080fd5b85356001600160401b0381111561232a57600080fd5b61233688828901611e1a565b9550955050602061234988828901611df9565b935050604061235a88828901611e0f565b925050606061229088828901611e0f565b600060a0828403121561237d57600080fd5b60006116d08484611eb1565b60006020828403121561239b57600080fd5b60006116d084846120d5565b600080600080600060a086880312156123bf57600080fd5b60006123cb8888611e0f565b955050602061222f88828901611d25565b6000610adc838361252e565b6000610adc8383612d51565b6123fd81613303565b82525050565b6123fd61240f826132e1565b61335c565b6123fd816132e1565b6000612428826132cf565b61243281856132d3565b935083602082028501612444856132c9565b8060005b8581101561247e578484038952815161246185826123dc565b945061246c836132c9565b60209a909a0199925050600101612448565b5091979650505050505050565b6000612496826132cf565b6124a081856132d3565b9350836020820285016124b2856132c9565b8060005b8581101561247e57848403895281516124cf85826123e8565b94506124da836132c9565b60209a909a01999250506001016124b6565b6123fd816132ec565b6123fd81610a60565b6123fd61250a82610a60565b610a60565b600061251b83856132dc565b9350612528838584613324565b50500190565b6000612539826132cf565b61254381856132d3565b9350612553818560208601613330565b61255c8161336d565b9093019392505050565b6000612571826132cf565b61257b81856132dc565b935061258b818560208601613330565b9290920192915050565b6123fd8161330e565b60006125ab6036836132d3565b7f4174206c65617374206f6e65206f7264657220616e64206d61746368696e672081527539b4b3b730ba3ab9329034b9903932b8bab4b932b21760511b602082015260400192915050565b60006126036024836132d3565b7f496e70757420616d6f756e74206d7573742062652067726561746572207468618152633710181760e11b602082015260400192915050565b6000612649601c836132dc565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c0192915050565b60006126826026836132d3565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b60006126ca602a836132d3565b7f4d616b657220617373657420616d6f756e74206d75737420626520677265617481526932b9103a3430b710181760b11b602082015260400192915050565b6000612716603a836132d3565b7f4c656e67746873206f6620616c6c206f726465727320616e64207369676e617481527f7572657320617272617973206d75737420626520657175616c2e000000000000602082015260400192915050565b6000612775602e836132d3565b7f4d75737420737570706c79206d6f7265207468616e2030206f7264657273206181526d37321039b4b3b730ba3ab932b99760911b602082015260400192915050565b60006127c56020836132d3565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b60006127fe6035836132d3565b7f4c656e677468206f66206f726465727320616e64207369676e6174757265732081527430b93930bcb99036bab9ba1031329032b8bab0b61760591b602082015260400192915050565b60006128556016836132d3565b7527b93232b9399030b93930bc9034b99032b6b83a3c9760511b815260200192915050565b6000612887602e836132d3565b7f47534e526563697069656e743a206e65772052656c617948756220697320746881526d65207a65726f206164647265737360901b602082015260400192915050565b60006128d76020836132d3565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000612910602e836132d3565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b60006129606031836132d3565b7f4d69736d61746368206265747765656e206e756d626572206f66206f72646572815270399030b7321039b4b3b730ba3ab932b99760791b602082015260400192915050565b60006129b3602d836132d3565b7f47534e526563697069656e743a206e65772052656c617948756220697320746881526c652063757272656e74206f6e6560981b602082015260400192915050565b6000612a02601c836132d3565b7f4d757374206465706f736974206d6f7265207468616e20302065746800000000815260200192915050565b6000612a3b6054836132d3565b7f46756e64206d616e6167657220636f6e7472616374206e6f74207365742e205481527f686973206d61792062652064756520746f20616e2075706772616465206f66206020820152733a3434b990383937bc3c9031b7b73a3930b1ba1760611b604082015260600192915050565b6000612ab76012836132d3565b712737902ba2aa241037baba383aba3a32b21760711b815260200192915050565b6000612ae56034836132d3565b7f4661696c656420746f207472616e736665722045544820746f206d73672e7365815273373232b91030b33a32b91032bc31b430b733b29760611b602082015260400192915050565b6000612b3b6024836132d3565b7f47534e526563697069656e743a2063616c6c6572206973206e6f742052656c618152633ca43ab160e11b602082015260400192915050565b6000610adf6000836132dc565b6000612b8e602f836132d3565b7f496e70757420616e64206f75747075742063757272656e636965732063616e6e81526e37ba103132903a34329039b0b6b29760891b602082015260400192915050565b6000612bdf602f836132d3565b7f54616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b6000612c30602a836132d3565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b6000612c7c6036836132d3565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015260400192915050565b6000612cd4602f836132d3565b7f4d616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b6000612d25601f836132d3565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b80516000906101c0840190612d668582612414565b506020830151612d796020860182612414565b506040830151612d8c6040860182612414565b506060830151612d9f6060860182612414565b506080830151612db260808601826124f5565b5060a0830151612dc560a08601826124f5565b5060c0830151612dd860c08601826124f5565b5060e0830151612deb60e08601826124f5565b50610100830151612e006101008601826124f5565b50610120830151612e156101208601826124f5565b50610140830151848203610140860152612e2f828261252e565b915050610160830151848203610160860152612e4b828261252e565b915050610180830151848203610180860152612e67828261252e565b9150506101a08301518482036101a0860152612e83828261252e565b95945050505050565b6123fd816132fd565b6000612ea1828d612403565b601482019150612eb1828c612403565b601482019150612ec2828a8c61250f565b9150612ece82896124fe565b602082019150612ede82886124fe565b602082019150612eee82876124fe565b602082019150612efe82866124fe565b602082019150612f0e8285612403565b601482019150612f1e8284612403565b506014019a9950505050505050505050565b6000611c468284612566565b6000612f478261263c565b9150612f5382846124fe565b50602001919050565b6000610adf82612b74565b60208101610adf8284612414565b60208101610adf82846123f4565b60408101612f9182856123f4565b611c466020830184612595565b60408101612fac82856123f4565b611c4660208301846124f5565b60408101612fc78285612414565b611c466020830184612414565b60608101612fe28286612414565b612fef6020830185612414565b6116d060408301846124f5565b60408101612fac8285612414565b6060808252810161301b818661248b565b905061302a60208301856124f5565b8181036040830152612e83818461241d565b60208101610adf82846124ec565b60208101610adf82846124f5565b6080810161306682876124f5565b6130736020830186612e8c565b61308060408301856124f5565b612e8360608301846124f5565b60208082528101610adc818461252e565b60208082528101610adf8161259e565b60208082528101610adf816125f6565b60208082528101610adf81612675565b60208082528101610adf816126bd565b60208082528101610adf81612709565b60208082528101610adf81612768565b60208082528101610adf816127b8565b60208082528101610adf816127f1565b60208082528101610adf81612848565b60208082528101610adf8161287a565b60208082528101610adf816128ca565b60208082528101610adf81612903565b60208082528101610adf81612953565b60208082528101610adf816129a6565b60208082528101610adf816129f5565b60208082528101610adf81612a2e565b60208082528101610adf81612aaa565b60208082528101610adf81612ad8565b60208082528101610adf81612b2e565b60208082528101610adf81612b81565b60208082528101610adf81612bd2565b60208082528101610adf81612c23565b60208082528101610adf81612c6f565b60208082528101610adf81612cc7565b60208082528101610adf81612d18565b6040810161323c82856124f5565b81810360208301526116d0818461252e565b60408101612fac82856124f5565b6040518181016001600160401b038111828210171561327a57600080fd5b604052919050565b60006001600160401b0382111561329857600080fd5b5060209081020190565b60006001600160401b038211156132b857600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b6000610adf826132f1565b151590565b6001600160a01b031690565b60ff1690565b6000610adf82613319565b6000610adf82610a60565b6000610adf826132e1565b82818337506000910152565b60005b8381101561334b578181015183820152602001613333565b838111156113a45750506000910152565b6000610adf826000610adf82613377565b601f01601f191690565b60601b90565b613386816132e1565b8114610b7d57600080fd5b613386816132ec565b61338681610a6056fea365627a7a72315820d6491cd0a3aebd183ed9af0088aeded57e787345521f29752a47ef6f23a981446c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1663:11886:3:-;;;2242:104;8:9:-1;5:2;;;30:1;27;20:12;5:2;2242:104:3;2274:30;2293:10;2274:18;;;;;:30;;:::i;:::-;2314:25;:23;;;;;:25;;:::i;:::-;1663:11886;;741:142:50;1024:12:58;;;;;;;;:31;;-1:-1:-1;1040:15:58;-1:-1:-1;;;;;1040:13:58;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:58;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:58;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:58;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:50;:15;;-1:-1:-1;;;;;;806:15:50;-1:-1:-1;;;;;806:15:50;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:50;;-1:-1:-1;;836:40:50;1268:14:58;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:58;;;1264:55;741:142:50;;:::o;802:131:42:-;1024:12:58;;;;;;;;:31;;-1:-1:-1;1040:15:58;-1:-1:-1;;;;;1040:13:58;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:58;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:58;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:58;;;;;1225:18;1213:4;1225:18;;;1170:80;857:9:42;;-1:-1:-1;;;;;857:9:42;853:74;;896:20;-1:-1:-1;;;;;896:18:42;:20;:::i;:::-;1268:14:58;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:58;;;1264:55;802:131:42;:::o;1409:498:58:-;1820:4;1864:17;1895:7;1409:498;:::o;939:114:42:-;986:60;1003:42;-1:-1:-1;;;;;986:16:42;:60;:::i;:::-;939:114::o;2185:395::-;2277:9;;-1:-1:-1;;;;;2277:9:42;;;;2304:25;;2296:84;;;;-1:-1:-1;;;2296:84:42;;;;;;;;;2413:15;-1:-1:-1;;;;;2398:30:42;:11;-1:-1:-1;;;;;2398:30:42;;;2390:88;;;;-1:-1:-1;;;2390:88:42;;;;;;;;;2527:11;-1:-1:-1;;;;;2494:45:42;2510:15;-1:-1:-1;;;;;2494:45:42;;;;;;;;;;;-1:-1:-1;2550:9:42;:23;;-1:-1:-1;;;;;;2550:23:42;-1:-1:-1;;;;;2550:23:42;;;;;;;;;;2185:395::o;6:383:-1:-;;166:67;230:2;225:3;166:67;;;-1:-1;;;;;;;;;;;246:55;;-1:-1;;;330:2;321:12;;314:38;380:2;371:12;;152:237;-1:-1;;152:237;398:383;;558:67;622:2;617:3;558:67;;;658:34;638:55;;-1:-1;;;722:2;713:12;;706:38;772:2;763:12;;544:237;-1:-1;;544:237;790:382;;950:67;1014:2;1009:3;950:67;;;-1:-1;;;;;;;;;;;1030:55;;-1:-1;;;1114:2;1105:12;;1098:37;1163:2;1154:12;;936:236;-1:-1;;936:236;1180:407;1371:2;1385:47;;;1356:18;;1446:131;1356:18;1446:131;;;1438:139;1342:245;-1:-1;;1342:245;1594:407;1785:2;1799:47;;;1770:18;;1860:131;1770:18;1860:131;;2008:407;2199:2;2213:47;;;2184:18;;2274:131;2184:18;2274:131;;2423:163;2526:19;;;2575:4;2566:14;;2519:67;;1663:11886:3;;;;;;",
  "deployedSourceMap": "1663:11886:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6097:2346;;;;;;;;;:::i;939:114:42:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;939:114:42;;;:::i;3141:525:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3141:525:3;;;;;;;;:::i;3990:161::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3990:161:3;;;;;;;;:::i;1746:137:50:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:137:50;;;:::i;1695:85:42:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1695:85:42;;;:::i;:::-;;;;;;;;;;;;;;;;5272:208;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5272:208:42;;;;;;;;:::i;:::-;;;;;;;;802:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;802:131:42;;;:::i;12130:955:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12130:955:3;;;;;;;;:::i;:::-;;;;;;;;;959:77:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;959:77:50;;;:::i;1310:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1310:92:50;;;:::i;:::-;;;;;;;;2926:227:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2926:227:42;;;:::i;:::-;;;;;;;;9631:1913:3;;;;;;;;;:::i;741:142:50:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;741:142:50;;;;;;;;:::i;11812:196:3:-;;;:::i;6109:274:42:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6109:274:42;;;;;;;;:::i;2032:107:50:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2032:107:50;;;;;;;;:::i;1952:40:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1952:40:3;;;:::i;6097:2346::-;6324:24;;-1:-1:-1;;;;;6324:24:3;6316:135;;;;-1:-1:-1;;;6316:135:3;;;;;;;;;;;;;;;;;6483:1;6469:11;:15;6461:64;;;;-1:-1:-1;;;6461:64:3;;;;;;;;;6565:42;-1:-1:-1;;;;;6625:41:3;;;;;6617:101;;;;-1:-1:-1;;;6617:101:3;;;;;;;;;6752:1;6736:6;:13;:17;6728:52;;;;-1:-1:-1;;;6728:52:3;;;;;;;;;6815:10;:17;6798:6;:13;:34;6790:100;;;;-1:-1:-1;;;6790:100:3;;;;;;;;;6931:1;6908:20;:24;6900:84;;;;-1:-1:-1;;;6900:84:3;;;;;;;;;-1:-1:-1;;;;;6999:32:3;;6995:368;;2858:42;-1:-1:-1;;;;;7071:13:3;;7091:11;7071:34;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7071:34:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7071:34:3;;;;;6995:368;;;7210:83;-1:-1:-1;;;;;7210:43:3;;7254:10;7274:4;7281:11;7210:83;:43;:83;:::i;:::-;7430:54;7465:18;7430:34;:54::i;:::-;7416:11;:68;7412:139;;;7486:65;7519:18;-1:-1:-1;;7486:32:3;:65::i;:::-;;7412:139;7561:31;;:::i;:::-;7595:168;7647:6;7655:10;7667:20;-1:-1:-1;;;;;7689:32:3;;;:73;;7753:9;7689:73;;;7724:26;:9;7738:11;7724:26;:13;:26;:::i;:::-;7595:51;:168::i;:::-;7829:30;;-1:-1:-1;;;7829:30:3;;7561:202;;-1:-1:-1;7807:19:3;;2858:42;;7829:15;;:30;;7853:4;;7829:30;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7829:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7829:30:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7829:30:3;;;;;;;;;7807:52;;7891:1;7877:11;:15;7869:46;;;;-1:-1:-1;;;7869:46:3;;;;;;;;;7925:27;;-1:-1:-1;;;7925:27:3;;2858:42;;7925:14;;:27;;7940:11;;7925:27;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7925:27:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;8085:35:3;;-1:-1:-1;;;8085:35:3;;8028:18;;-1:-1:-1;8001:17:3;;-1:-1:-1;;;;;;8085:20:3;;;;;:35;;8114:4;;8085:35;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8085:35:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8085:35:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8085:35:3;;;;;;;;;8057:63;-1:-1:-1;8134:21:3;;8130:81;;8157:54;-1:-1:-1;;;;;8157:23:3;;8181:10;8193:17;8157:54;:23;:54;:::i;:::-;8300:16;;;8318;;;8249:86;;8288:10;;-1:-1:-1;;;;;8249:86:3;;;;;;;8300:16;8318;8249:86;;;;;;;;;;8379:16;;:57;;-1:-1:-1;;;8379:57:3;;-1:-1:-1;;;;;8379:16:3;;;;:26;;8412:11;;8379:57;;8425:10;;8379:57;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8379:57:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8379:57:3;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8379:57:3;;;;;;;;;;6097:2346;;;;;;;;;;:::o;939:114:42:-;986:60;1003:42;986:16;:60::i;:::-;939:114::o;3141:525:3:-;1163:9:50;:7;:9::i;:::-;1155:54;;;;-1:-1:-1;;;1155:54:50;;;;;;;;;3336:24:3;;-1:-1:-1;;;;;3336:24:3;:38;3332:86;;3390:24;;3376:42;;-1:-1:-1;;;3376:42:3;;2858;;3376:13;;:42;;-1:-1:-1;;;;;3390:24:3;;;;3376:42;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3376:42:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3376:42:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3376:42:3;;;;;;;;;;3332:86;-1:-1:-1;;;;;3432:25:3;;;3428:70;;3459:39;;-1:-1:-1;;;3459:39:3;;2858:42;;3459:13;;:39;;3473:11;;-1:-1:-1;;3494:2:3;3459:39;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3459:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3459:39:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3459:39:3;;;;;;;;;;3428:70;3509:24;:38;;-1:-1:-1;;;;;3509:38:3;;;-1:-1:-1;;;;;;3509:38:3;;;;;;;;3557:16;:60;;;;;3592:24;;3557:60;;;;;;3632:27;;;;;;3536:11;;3632:27;;;;;;;;;;3141:525;:::o;3990:161::-;1163:9:50;:7;:9::i;:::-;1155:54;;;;-1:-1:-1;;;1155:54:50;;;;;;;;;4068:17:3;:30;;-1:-1:-1;;;;;;4068:30:3;-1:-1:-1;;;;;4068:30:3;;;;;4113:31;;;;;;4068:30;;4113:31;;1746:137:50;1163:9;:7;:9::i;:::-;1155:54;;;;-1:-1:-1;;;1155:54:50;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:50;;1807:40;;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:50;;;1746:137::o;1695:85:42:-;1764:9;;-1:-1:-1;;;;;1764:9:42;1695:85;;:::o;5272:208::-;5338:7;5379:12;:10;:12::i;:::-;-1:-1:-1;;;;;5365:26:42;:10;-1:-1:-1;;;;;5365:26:42;;5357:75;;;;-1:-1:-1;;;5357:75:42;;;;;;;;;5449:24;5465:7;;5449:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5449:15:42;;-1:-1:-1;;;5449:24:42:i;:::-;5442:31;;5272:208;;;;;:::o;802:131::-;1024:12:58;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:58;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:58;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:58;;;;;1225:18;1213:4;1225:18;;;1170:80;857:9:42;;-1:-1:-1;;;;;857:9:42;853:74;;896:20;:18;:20::i;:::-;1268:14:58;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:58;;;1264:55;802:131:42;:::o;12130:955:3:-;12432:7;12441:12;12465:17;12515:5;12534:4;12552:15;;12581:14;12609:8;12631;12653:5;12704:12;:10;:12::i;:::-;12780:4;12485:353;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;12918:17:3;;49:4:-1;12852:62:3;;;;;;;;;;;;;;;;;;12485:353;;-1:-1:-1;;;;;;12918:17:3;;12852:62;;12901:12;;;;;;12852:62;;12901:12;;;;12852:62;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;12852:15:3;;;;;;:40;;-1:-1:-1;12852:15:3;-1:-1:-1;12852:38:3;:40::i;:::-;:48;:62;:48;:62;:::i;:::-;-1:-1:-1;;;;;12852:83:3;;12848:117;;12944:21;12963:1;12944:18;:21::i;:::-;12937:28;;;;;;;12848:117;12979:17;;-1:-1:-1;;;;;12979:17:3;12975:65;;13019:21;13038:1;13019:18;:21::i;12975:65::-;13057:21;:19;:21::i;:::-;13050:28;;;;;12130:955;;;;;;;;;;;;;;;:::o;959:77:50:-;1023:6;;-1:-1:-1;;;;;1023:6:50;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:50;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:50;;1366:29;;1310:92;:::o;2926:227:42:-;3132:14;;;;;;;;;;;;-1:-1:-1;;;3132:14:42;;;;2926:227;:::o;9631:1913:3:-;9874:1;9860:11;:15;9852:64;;;;-1:-1:-1;;;9852:64:3;;;;;;;;;9957:1;9934:20;:24;9926:79;;;;-1:-1:-1;;;9926:79:3;;;;;;;;;10039:1;10023:6;:13;:17;:42;;;;;10064:1;10044:10;:17;:21;10023:42;10015:101;;;;-1:-1:-1;;;10015:101:3;;;;;;;;;10151:10;:17;10134:6;:13;:34;10126:105;;;;-1:-1:-1;;;10126:105:3;;;;;;;;;10249:24;;-1:-1:-1;;;;;10249:24:3;10241:135;;;;-1:-1:-1;;;10241:135:3;;;;;;;;;10420:16;;:54;;-1:-1:-1;;;10420:54:3;;-1:-1:-1;;;;;10420:16:3;;;;:29;;:54;;10450:10;;10462:11;;10420:54;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10420:54:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10420:54:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10420:54:3;;;;;;;;;;2858:42;-1:-1:-1;;;;;10528:13:3;;10548:11;10528:34;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10528:34:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10528:34:3;;;;;10615:31;;:::i;:::-;10649:103;10700:6;10708:10;10720:20;10742:9;10649:50;:103::i;:::-;10823:16;;;10841;;;10767:91;;10615:137;;-1:-1:-1;10811:10:3;;-1:-1:-1;;;;;10767:91:3;;;;;;;;;;;;;;;;;10921:30;;-1:-1:-1;;;10921:30:3;;10899:19;;2858:42;;10921:15;;:30;;10945:4;;10921:30;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10921:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10921:30:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10921:30:3;;;;;;;;;10961:27;;-1:-1:-1;;;10961:27:3;;10899:52;;-1:-1:-1;2858:42:3;;10961:14;;:27;;10899:52;;10961:27;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10961:27:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;11119:36:3;;-1:-1:-1;;;11119:36:3;;11060:19;;-1:-1:-1;11032:18:3;;-1:-1:-1;;;;;;11119:21:3;;;;;:36;;11149:4;;11119:36;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11119:36:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11119:36:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11119:36:3;;;;;;;;;11090:65;-1:-1:-1;11169:22:3;;11165:84;;11193:56;-1:-1:-1;;;;;11193:24:3;;11218:10;11230:18;11193:56;:24;:56;:::i;:::-;11311:21;11355:14;;11351:187;;11386:12;11404:10;-1:-1:-1;;;;;11404:15:3;11426:10;11404:37;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;11385:56:3;;;11463:7;11455:72;;;;-1:-1:-1;;;11455:72:3;;;;;;;;11351:187;9631:1913;;;;;;;;;;:::o;741:142:50:-;1024:12:58;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:58;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:58;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:58;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:50;:15;;-1:-1:-1;;;;;;806:15:50;-1:-1:-1;;;;;806:15:50;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:50;;-1:-1:-1;;836:40:50;1268:14:58;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:58;;;1264:55;741:142:50;;:::o;11812:196:3:-;11857:4;11893:1;11881:9;:13;11873:54;;;;-1:-1:-1;;;11873:54:3;;;;;;;;;11944:16;;-1:-1:-1;;;;;11944:16:3;:26;11977:9;11988:12;:10;:12::i;:::-;11944:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11944:57:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11944:57:3;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11944:57:3;;;;;;;;;11937:64;;11812:196;:::o;6109:274:42:-;6254:12;:10;:12::i;:::-;-1:-1:-1;;;;;6240:26:42;:10;-1:-1:-1;;;;;6240:26:42;;6232:75;;;;-1:-1:-1;;;6232:75:42;;;;;;;;;6317:59;6334:7;;6317:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6343:7:42;;-1:-1:-1;6352:12:42;;-1:-1:-1;6366:9:42;;-1:-1:-1;6317:16:42;:59::i;:::-;6109:274;;;;;:::o;2032:107:50:-;1163:9;:7;:9::i;:::-;1155:54;;;;-1:-1:-1;;;1155:54:50;;;;;;;;;2104:28;2123:8;2104:18;:28::i;1952:40:3:-;;;;;;;;;;;;;;-1:-1:-1;;;1952:40:3;;;;:::o;842:202:56:-;968:68;;942:95;;961:5;;-1:-1:-1;;;991:27:56;968:68;;1020:4;;1026:2;;1030:5;;968:68;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;968:68:56;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;968:68:56;;;179:29:-1;;;;160:49;;;942:18:56;:95::i;:::-;842:202;;;;:::o;1552:166:16:-;1643:68;;-1:-1:-1;;;1643:68:16;;1617:7;;-1:-1:-1;;;;;1643:31:16;;;;;:68;;1683:4;;1361:42;;1643:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1643:68:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1643:68:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1643:68:16;;;;;;;;1996:427;2153:52;;-1:-1:-1;;;2153:52:16;;2070:4;;2108:13;;2070:4;;-1:-1:-1;;;;;2153:15:16;;;;;:52;;2177:4;;1361:42;;2153:52;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2153:52:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2153:52:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2153:52:16;;;;;;;;;2132:73;;2233:6;2219:10;:20;2215:37;;;2248:4;2241:11;;;;;;2215:37;2275:1;2266:6;:10;:28;;;;;2293:1;2280:10;:14;2266:28;2262:76;;;2296:42;-1:-1:-1;;;;;2296:17:16;;1361:42;2336:1;2296:42;:17;:42;:::i;:::-;2348:47;-1:-1:-1;;;;;2348:17:16;;1361:42;2388:6;2348:47;:17;:47;:::i;:::-;-1:-1:-1;2412:4:16;;1996:427;-1:-1:-1;;;;1996:427:16:o;1274:134:49:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;2931:728:16:-;3095:17;;:::i;:::-;3148:1;3132:6;:13;:17;3124:84;;;;-1:-1:-1;;;3124:84:16;;;;;;;;;3243:10;:17;3226:6;:13;:34;3218:96;;;;-1:-1:-1;;;3218:96:16;;;;;;;;;3355:1;3332:20;:24;3324:84;;;;-1:-1:-1;;;3324:84:16;;;;;;;;;3418:45;;:::i;:::-;3466:97;;-1:-1:-1;;;3466:97:16;;1192:42;;3466:36;;3509:11;;3466:97;;3522:6;;3530:20;;3552:10;;3466:97;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3466:97:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3466:97:16;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3466:97:16;;;;;;;;;3418:145;;3573:79;;;;;;;;3581:11;:34;;;3573:79;;;;3617:11;:34;;;3573:79;;;;;;2931:728;;;;;;;:::o;662:174:56:-;770:58;;744:85;;763:5;;-1:-1:-1;;;793:23:56;770:58;;818:2;;822:5;;770:58;;;;744:85;662:174;;;:::o;2185:395:42:-;2277:9;;-1:-1:-1;;;;;2277:9:42;;;;2304:25;;2296:84;;;;-1:-1:-1;;;2296:84:42;;;;;;;;;2413:15;-1:-1:-1;;;;;2398:30:42;:11;-1:-1:-1;;;;;2398:30:42;;;2390:88;;;;-1:-1:-1;;;2390:88:42;;;;;;;;;2527:11;-1:-1:-1;;;;;2494:45:42;2510:15;-1:-1:-1;;;;;2494:45:42;;;;;;;;;;;-1:-1:-1;2550:9:42;:23;;-1:-1:-1;;;;;;2550:23:42;-1:-1:-1;;;;;2550:23:42;;;;;;;;;;2185:395::o;13183:130:3:-;-1:-1:-1;13240:7:3;;13183:130::o;1409:498:58:-;1820:4;1864:17;1895:7;1409:498;:::o;3381:265:47:-;3450:7;3633:4;3580:58;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3580:58:47;;;3570:69;;;;;;3563:76;;3381:265;;;:::o;1226:1891::-;1304:7;1365:9;:16;1385:2;1365:22;1361:72;;-1:-1:-1;1419:1:47;1403:19;;1361:72;1783:4;1768:20;;1762:27;1828:4;1813:20;;1807:27;1881:4;1866:20;;1860:27;1499:9;1852:36;2799:66;2786:79;;2782:127;;;2896:1;2881:17;;;;;;;2782:127;2923:1;:7;;2928:2;2923:7;;:18;;;;;2934:1;:7;;2939:2;2934:7;;2923:18;2919:66;;;2972:1;2957:17;;;;;;;2919:66;3086:24;3096:4;3102:1;3105;3108;3086:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3086:24:47;;-1:-1:-1;;3086:24:47;;;1226:1891;-1:-1:-1;;;;;;;1226:1891:47:o;7547:156:42:-;7650:46;;;;;;;;;-1:-1:-1;7650:46:42;;1286:2;7658:33;;;;;7547:156::o;6977:124::-;7031:7;7040:12;7071:23;;;;;;;;;;;;;:19;:23::i;:::-;7064:30;;;;6977:124;;:::o;4103:210::-;4193:9;;4148:15;;-1:-1:-1;;;;;4193:9:42;4179:10;:23;4175:132;;-1:-1:-1;4225:10:42;4218:17;;4175:132;4273:23;:21;:23::i;:::-;4266:30;;;;4145:726:16;4308:17;;:::i;:::-;4361:1;4345:6;:13;:17;4337:84;;;;-1:-1:-1;;;4337:84:16;;;;;;;;;4456:10;:17;4439:6;:13;:34;4431:96;;;;-1:-1:-1;;;4431:96:16;;;;;;;;;4568:1;4545:20;:24;4537:84;;;;-1:-1:-1;;;4537:84:16;;;;;;;;;4631:45;;:::i;:::-;4679:96;;-1:-1:-1;;;4679:96:16;;1192:42;;4679:35;;4721:11;;4679:96;;4734:6;;4742:20;;4764:10;;4679:96;;;;2240:225:50;-1:-1:-1;;;;;2313:22:50;;2305:73;;;;-1:-1:-1;;;2305:73:50;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:50;;;;2414:6;;2393:38;;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:50;-1:-1:-1;;;;;2441:17:50;;;;;;;;;;2240:225::o;2666:1095:56:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:56;;:27::i;:::-;3253:71;;;;-1:-1:-1;;;3253:71:56;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:56;3456:4;3436:25;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:56;;;;3479:7;3471:52;;;;-1:-1:-1;;;3471:52:56;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;;;;;;;;;;3659:85;;;;-1:-1:-1;;;3659:85:56;;;;;;;;1050:612;1415:10;;;1414:62;;-1:-1:-1;1431:39:56;;-1:-1:-1;;;1431:39:56;;-1:-1:-1;;;;;1431:15:56;;;;;:39;;1455:4;;1462:7;;1431:39;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1431:39:56;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:56;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1431:39:56;;;;;;;;;:44;1414:62;1406:150;;;;-1:-1:-1;;;1406:150:56;;;;;;;;;1592:62;;1566:89;;1585:5;;-1:-1:-1;;;1615:22:56;1592:62;;1639:7;;1648:5;;1592:62;;;;1732:187:49;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:49;;;;;;;;;;-1:-1:-1;;1888:5:49;;;1732:187;;;;;;:::o;7263:153:42:-;7337:7;;7263:153::o;8207:1250::-;8262:22;9069:18;9090:8;;9069:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;;;9124:8:42;9355:17;9349:24;-1:-1:-1;;;;;9345:73:42;;8207:1250;-1:-1:-1;;8207:1250:42:o;686:610:57:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:57;;;1238:51;-1:-1:-1;;686:610:57:o;1663:11886:3:-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;1663:11886:3;;;-1:-1:-1;;1663:11886:3:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;311:693;;433:3;426:4;418:6;414:17;410:27;400:2;;451:1;448;441:12;400:2;488:6;475:20;510:85;525:69;587:6;525:69;;;510:85;;;623:21;;;667:4;655:17;;;;501:94;;-1:-1;680:14;;655:17;775:1;760:238;785:6;782:1;779:13;760:238;;;868:3;855:17;847:6;843:30;892:42;930:3;918:10;892:42;;;880:55;;-1:-1;958:4;949:14;;;;977;;;;;807:1;800:9;760:238;;;764:14;393:611;;;;;;;;1044:735;;1180:3;1173:4;1165:6;1161:17;1157:27;1147:2;;1198:1;1195;1188:12;1147:2;1235:6;1222:20;1257:99;1272:83;1348:6;1272:83;;1257:99;1384:21;;;1428:4;1416:17;;;;1248:108;;-1:-1;1441:14;;1416:17;1536:1;1521:252;1546:6;1543:1;1540:13;1521:252;;;1629:3;1616:17;1608:6;1604:30;1653:56;1705:3;1693:10;1653:56;;;1641:69;;-1:-1;1733:4;1724:14;;;;1752;;;;;1568:1;1561:9;1521:252;;1787:124;1851:20;;1876:30;1851:20;1876:30;;1918:128;1993:13;;2011:30;1993:13;2011:30;;2053:130;2120:20;;2145:33;2120:20;2145:33;;2204:336;;;2318:3;2311:4;2303:6;2299:17;2295:27;2285:2;;2336:1;2333;2326:12;2285:2;-1:-1;2356:20;;-1:-1;;;;;2385:30;;2382:2;;;2428:1;2425;2418:12;2382:2;2462:4;2454:6;2450:17;2438:29;;2513:3;2505:4;2497:6;2493:17;2483:8;2479:32;2476:41;2473:2;;;2530:1;2527;2520:12;2473:2;2278:262;;;;;;2549:432;;2646:3;2639:4;2631:6;2627:17;2623:27;2613:2;;2664:1;2661;2654:12;2613:2;2701:6;2688:20;2723:60;2738:44;2775:6;2738:44;;2723:60;2714:69;;2803:6;2796:5;2789:21;2839:4;2831:6;2827:17;2872:4;2865:5;2861:16;2907:3;2898:6;2893:3;2889:16;2886:25;2883:2;;;2924:1;2921;2914:12;2883:2;2934:41;2968:6;2963:3;2958;2934:41;;;2606:375;;;;;;;;3029:1033;;3158:4;3146:9;3141:3;3137:19;3133:30;3130:2;;;3176:1;3173;3166:12;3130:2;3194:20;3209:4;3194:20;;;3185:29;-1:-1;3282:1;3314:60;3370:3;3350:9;3314:60;;;3289:86;;-1:-1;3454:2;3487:60;3543:3;3519:22;;;3487:60;;;3480:4;3473:5;3469:16;3462:86;3396:163;3617:2;3650:60;3706:3;3697:6;3686:9;3682:22;3650:60;;;3643:4;3636:5;3632:16;3625:86;3569:153;3780:2;3813:60;3869:3;3860:6;3849:9;3845:22;3813:60;;;3806:4;3799:5;3795:16;3788:86;3732:153;3946:3;3980:60;4036:3;4027:6;4016:9;4012:22;3980:60;;;3973:4;3966:5;3962:16;3955:86;3895:157;3124:938;;;;;4097:2714;;4205:6;4193:9;4188:3;4184:19;4180:32;4177:2;;;4225:1;4222;4215:12;4177:2;4243:22;4258:6;4243:22;;;4234:31;-1:-1;4323:1;4355:49;4400:3;4380:9;4355:49;;;4330:75;;-1:-1;4474:2;4507:49;4552:3;4528:22;;;4507:49;;;4500:4;4493:5;4489:16;4482:75;4426:142;4633:2;4666:49;4711:3;4702:6;4691:9;4687:22;4666:49;;;4659:4;4652:5;4648:16;4641:75;4578:149;4786:2;4819:49;4864:3;4855:6;4844:9;4840:22;4819:49;;;4812:4;4805:5;4801:16;4794:75;4737:143;4942:3;4976:49;5021:3;5012:6;5001:9;4997:22;4976:49;;;4969:4;4962:5;4958:16;4951:75;4890:147;5099:3;5133:49;5178:3;5169:6;5158:9;5154:22;5133:49;;;5126:4;5119:5;5115:16;5108:75;5047:147;5248:3;5282:49;5327:3;5318:6;5307:9;5303:22;5282:49;;;5275:4;5268:5;5264:16;5257:75;5204:139;5397:3;5431:49;5476:3;5467:6;5456:9;5452:22;5431:49;;;5424:4;5417:5;5413:16;5406:75;5353:139;5559:3;5595:49;5640:3;5631:6;5620:9;5616:22;5595:49;;;5586:6;5579:5;5575:18;5568:77;5502:154;5706:3;5742:49;5787:3;5778:6;5767:9;5763:22;5742:49;;;5733:6;5726:5;5722:18;5715:77;5666:137;5891:3;5880:9;5876:19;5863:33;-1:-1;;;;;5908:6;5905:30;5902:2;;;5948:1;5945;5938:12;5902:2;5985:54;6035:3;6026:6;6015:9;6011:22;5985:54;;;5976:6;5969:5;5965:18;5958:82;5813:238;6139:3;6128:9;6124:19;6111:33;-1:-1;;;;;6156:6;6153:30;6150:2;;;6196:1;6193;6186:12;6150:2;6233:54;6283:3;6274:6;6263:9;6259:22;6233:54;;;6224:6;6217:5;6213:18;6206:82;6061:238;6390:3;6379:9;6375:19;6362:33;-1:-1;;;;;6407:6;6404:30;6401:2;;;6447:1;6444;6437:12;6401:2;6484:54;6534:3;6525:6;6514:9;6510:22;6484:54;;;6475:6;6468:5;6464:18;6457:82;6309:241;6641:3;6630:9;6626:19;6613:33;-1:-1;;;;;6658:6;6655:30;6652:2;;;6698:1;6695;6688:12;6652:2;6735:54;6785:3;6776:6;6765:9;6761:22;6735:54;;;6726:6;6719:5;6715:18;6708:82;6560:241;4171:2640;;;;;6955:134;7033:13;;7051:33;7033:13;7051:33;;7096:241;;7200:2;7188:9;7179:7;7175:23;7171:32;7168:2;;;7216:1;7213;7206:12;7168:2;7251:1;7268:53;7313:7;7293:9;7268:53;;7608:1497;;;;;;;;;;;;7887:3;7875:9;7866:7;7862:23;7858:33;7855:2;;;7904:1;7901;7894:12;7855:2;7939:1;7956:53;8001:7;7981:9;7956:53;;;7946:63;;7918:97;8046:2;8064:53;8109:7;8100:6;8089:9;8085:22;8064:53;;;8054:63;;8025:98;8182:2;8171:9;8167:18;8154:32;-1:-1;;;;;8198:6;8195:30;8192:2;;;8238:1;8235;8228:12;8192:2;8266:64;8322:7;8313:6;8302:9;8298:22;8266:64;;;8256:74;;;;8133:203;8367:2;8385:53;8430:7;8421:6;8410:9;8406:22;8385:53;;;8375:63;;8346:98;8475:3;8494:53;8539:7;8530:6;8519:9;8515:22;8494:53;;;8484:63;;8454:99;8584:3;8603:53;8648:7;8639:6;8628:9;8624:22;8603:53;;;8593:63;;8563:99;8693:3;8712:53;8757:7;8748:6;8737:9;8733:22;8712:53;;;8702:63;;8672:99;8830:3;8819:9;8815:19;8802:33;-1:-1;;;;;8847:6;8844:30;8841:2;;;8887:1;8884;8877:12;8841:2;8915:64;8971:7;8962:6;8951:9;8947:22;8915:64;;;8905:74;;;;8781:204;9016:3;9036:53;9081:7;9072:6;9061:9;9057:22;9036:53;;;9025:64;;8995:100;7849:1256;;;;;;;;;;;;;;;9112:1063;;;;;;9358:3;9346:9;9337:7;9333:23;9329:33;9326:2;;;9375:1;9372;9365:12;9326:2;9410:1;9427:53;9472:7;9452:9;9427:53;;;9417:63;;9389:97;9517:2;9535:53;9580:7;9571:6;9560:9;9556:22;9535:53;;;9525:63;;9496:98;9653:2;9642:9;9638:18;9625:32;-1:-1;;;;;9669:6;9666:30;9663:2;;;9709:1;9706;9699:12;9663:2;9729:97;9818:7;9809:6;9798:9;9794:22;9729:97;;;9719:107;;9604:228;9891:2;9880:9;9876:18;9863:32;-1:-1;;;;;9907:6;9904:30;9901:2;;;9947:1;9944;9937:12;9901:2;9967:83;10042:7;10033:6;10022:9;10018:22;9967:83;;;9957:93;;9842:214;10087:3;10106:53;10151:7;10142:6;10131:9;10127:22;10106:53;;;10096:63;;10066:99;9320:855;;;;;;;;;10182:257;;10294:2;10282:9;10273:7;10269:23;10265:32;10262:2;;;10310:1;10307;10300:12;10262:2;10345:1;10362:61;10415:7;10395:9;10362:61;;10446:365;;;10569:2;10557:9;10548:7;10544:23;10540:32;10537:2;;;10585:1;10582;10575:12;10537:2;10620:31;;-1:-1;;;;;10660:30;;10657:2;;;10703:1;10700;10693:12;10657:2;10731:64;10787:7;10778:6;10767:9;10763:22;10731:64;;;10721:74;;;;10599:202;10531:280;;;;;;10818:735;;;;;;10989:3;10977:9;10968:7;10964:23;10960:33;10957:2;;;11006:1;11003;10996:12;10957:2;11041:31;;-1:-1;;;;;11081:30;;11078:2;;;11124:1;11121;11114:12;11078:2;11152:64;11208:7;11199:6;11188:9;11184:22;11152:64;;;11142:74;;;;11020:202;11253:2;11271:50;11313:7;11304:6;11293:9;11289:22;11271:50;;;11261:60;;11232:95;11358:2;11376:53;11421:7;11412:6;11401:9;11397:22;11376:53;;;11366:63;;11337:98;11466:2;11484:53;11529:7;11520:6;11509:9;11505:22;11484:53;;11560:322;;11704:3;11692:9;11683:7;11679:23;11675:33;11672:2;;;11721:1;11718;11711:12;11672:2;11756:1;11773:93;11858:7;11838:9;11773:93;;11889:263;;12004:2;11992:9;11983:7;11979:23;11975:32;11972:2;;;12020:1;12017;12010:12;11972:2;12055:1;12072:64;12128:7;12108:9;12072:64;;12159:1063;;;;;;12405:3;12393:9;12384:7;12380:23;12376:33;12373:2;;;12422:1;12419;12412:12;12373:2;12457:1;12474:53;12519:7;12499:9;12474:53;;;12464:63;;12436:97;12564:2;12582:53;12627:7;12618:6;12607:9;12603:22;12582:53;;13230:177;;13341:60;13397:3;13389:6;13341:60;;13416:233;;13555:88;13639:3;13631:6;13555:88;;13657:142;13748:45;13787:5;13748:45;;;13743:3;13736:58;13730:69;;;13806:184;13923:61;13951:32;13977:5;13951:32;;;13923:61;;13997:103;14070:24;14088:5;14070:24;;14413:888;;14568:59;14621:5;14568:59;;;14640:91;14724:6;14719:3;14640:91;;;14633:98;;14754:3;14796:4;14788:6;14784:17;14779:3;14775:27;14823:61;14878:5;14823:61;;;14904:7;14932:1;14917:345;14942:6;14939:1;14936:13;14917:345;;;15004:9;14998:4;14994:20;14989:3;14982:33;15049:6;15043:13;15071:74;15140:4;15125:13;15071:74;;;15063:82;;15162:65;15220:6;15162:65;;;15250:4;15241:14;;;;;15152:75;-1:-1;;14964:1;14957:9;14917:345;;;-1:-1;15275:4;;14547:754;-1:-1;;;;;;;14547:754;15368:1000;;15551:73;15618:5;15551:73;;;15637:105;15735:6;15730:3;15637:105;;;15630:112;;15765:3;15807:4;15799:6;15795:17;15790:3;15786:27;15834:75;15903:5;15834:75;;;15929:7;15957:1;15942:387;15967:6;15964:1;15961:13;15942:387;;;16029:9;16023:4;16019:20;16014:3;16007:33;16074:6;16068:13;16096:102;16193:4;16178:13;16096:102;;;16088:110;;16215:79;16287:6;16215:79;;;16317:4;16308:14;;;;;16205:89;-1:-1;;15989:1;15982:9;15942:387;;16376:104;16453:21;16468:5;16453:21;;16487:113;16570:24;16588:5;16570:24;;16607:152;16708:45;16728:24;16746:5;16728:24;;;16708:45;;16789:310;;16921:88;17002:6;16997:3;16921:88;;;16914:95;;17021:43;17057:6;17052:3;17045:5;17021:43;;;-1:-1;;17077:16;;16907:192;17107:343;;17217:38;17249:5;17217:38;;;17267:70;17330:6;17325:3;17267:70;;;17260:77;;17342:52;17387:6;17382:3;17375:4;17368:5;17364:16;17342:52;;;17415:29;17437:6;17415:29;;;17406:39;;;;17197:253;-1:-1;;;17197:253;17457:356;;17585:38;17617:5;17585:38;;;17635:88;17716:6;17711:3;17635:88;;;17628:95;;17728:52;17773:6;17768:3;17761:4;17754:5;17750:16;17728:52;;;17792:16;;;;;17565:248;-1:-1;;17565:248;18142:142;18233:45;18272:5;18233:45;;18992:391;;19152:67;19216:2;19211:3;19152:67;;;19252:34;19232:55;;-1:-1;;;19316:2;19307:12;;19300:46;19374:2;19365:12;;19138:245;-1:-1;;19138:245;19392:373;;19552:67;19616:2;19611:3;19552:67;;;19652:34;19632:55;;-1:-1;;;19716:2;19707:12;;19700:28;19756:2;19747:12;;19538:227;-1:-1;;19538:227;19774:400;;19952:85;20034:2;20029:3;19952:85;;;20070:66;20050:87;;20165:2;20156:12;;19938:236;-1:-1;;19938:236;20183:375;;20343:67;20407:2;20402:3;20343:67;;;20443:34;20423:55;;-1:-1;;;20507:2;20498:12;;20491:30;20549:2;20540:12;;20329:229;-1:-1;;20329:229;20567:379;;20727:67;20791:2;20786:3;20727:67;;;20827:34;20807:55;;-1:-1;;;20891:2;20882:12;;20875:34;20937:2;20928:12;;20713:233;-1:-1;;20713:233;20955:395;;21115:67;21179:2;21174:3;21115:67;;;21215:34;21195:55;;21284:28;21279:2;21270:12;;21263:50;21341:2;21332:12;;21101:249;-1:-1;;21101:249;21359:383;;21519:67;21583:2;21578:3;21519:67;;;21619:34;21599:55;;-1:-1;;;21683:2;21674:12;;21667:38;21733:2;21724:12;;21505:237;-1:-1;;21505:237;21751:332;;21911:67;21975:2;21970:3;21911:67;;;22011:34;21991:55;;22074:2;22065:12;;21897:186;-1:-1;;21897:186;22092:390;;22252:67;22316:2;22311:3;22252:67;;;22352:34;22332:55;;-1:-1;;;22416:2;22407:12;;22400:45;22473:2;22464:12;;22238:244;-1:-1;;22238:244;22491:322;;22651:67;22715:2;22710:3;22651:67;;;-1:-1;;;22731:45;;22804:2;22795:12;;22637:176;-1:-1;;22637:176;22822:383;;22982:67;23046:2;23041:3;22982:67;;;23082:34;23062:55;;-1:-1;;;23146:2;23137:12;;23130:38;23196:2;23187:12;;22968:237;-1:-1;;22968:237;23214:332;;23374:67;23438:2;23433:3;23374:67;;;23474:34;23454:55;;23537:2;23528:12;;23360:186;-1:-1;;23360:186;23555:383;;23715:67;23779:2;23774:3;23715:67;;;23815:34;23795:55;;-1:-1;;;23879:2;23870:12;;23863:38;23929:2;23920:12;;23701:237;-1:-1;;23701:237;23947:386;;24107:67;24171:2;24166:3;24107:67;;;24207:34;24187:55;;-1:-1;;;24271:2;24262:12;;24255:41;24324:2;24315:12;;24093:240;-1:-1;;24093:240;24342:382;;24502:67;24566:2;24561:3;24502:67;;;24602:34;24582:55;;-1:-1;;;24666:2;24657:12;;24650:37;24715:2;24706:12;;24488:236;-1:-1;;24488:236;24733:328;;24893:67;24957:2;24952:3;24893:67;;;24993:30;24973:51;;25052:2;25043:12;;24879:182;-1:-1;;24879:182;25070:458;;25230:67;25294:2;25289:3;25230:67;;;25330:34;25310:55;;25399:34;25394:2;25385:12;;25378:56;-1:-1;;;25463:2;25454:12;;25447:44;25519:2;25510:12;;25216:312;-1:-1;;25216:312;25537:318;;25697:67;25761:2;25756:3;25697:67;;;-1:-1;;;25777:41;;25846:2;25837:12;;25683:172;-1:-1;;25683:172;25864:389;;26024:67;26088:2;26083:3;26024:67;;;26124:34;26104:55;;-1:-1;;;26188:2;26179:12;;26172:44;26244:2;26235:12;;26010:243;-1:-1;;26010:243;26262:373;;26422:67;26486:2;26481:3;26422:67;;;26522:34;26502:55;;-1:-1;;;26586:2;26577:12;;26570:28;26626:2;26617:12;;26408:227;-1:-1;;26408:227;26644:296;;26821:83;26902:1;26897:3;26821:83;;26949:384;;27109:67;27173:2;27168:3;27109:67;;;27209:34;27189:55;;-1:-1;;;27273:2;27264:12;;27257:39;27324:2;27315:12;;27095:238;-1:-1;;27095:238;27342:384;;27502:67;27566:2;27561:3;27502:67;;;27602:34;27582:55;;-1:-1;;;27666:2;27657:12;;27650:39;27717:2;27708:12;;27488:238;-1:-1;;27488:238;27735:379;;27895:67;27959:2;27954:3;27895:67;;;27995:34;27975:55;;-1:-1;;;28059:2;28050:12;;28043:34;28105:2;28096:12;;27881:233;-1:-1;;27881:233;28123:391;;28283:67;28347:2;28342:3;28283:67;;;28383:34;28363:55;;-1:-1;;;28447:2;28438:12;;28431:46;28505:2;28496:12;;28269:245;-1:-1;;28269:245;28523:384;;28683:67;28747:2;28742:3;28683:67;;;28783:34;28763:55;;-1:-1;;;28847:2;28838:12;;28831:39;28898:2;28889:12;;28669:238;-1:-1;;28669:238;28916:331;;29076:67;29140:2;29135:3;29076:67;;;29176:33;29156:54;;29238:2;29229:12;;29062:185;-1:-1;;29062:185;29308:2766;29517:23;;29308:2766;;29441:6;29432:16;;;29546:63;29436:3;29517:23;29546:63;;;29463:152;29696:4;29689:5;29685:16;29679:23;29708:63;29765:4;29760:3;29756:14;29742:12;29708:63;;;29625:152;29865:4;29858:5;29854:16;29848:23;29877:63;29934:4;29929:3;29925:14;29911:12;29877:63;;;29787:159;30028:4;30021:5;30017:16;30011:23;30040:63;30097:4;30092:3;30088:14;30074:12;30040:63;;;29956:153;30194:4;30187:5;30183:16;30177:23;30206:63;30263:4;30258:3;30254:14;30240:12;30206:63;;;30119:156;30360:4;30353:5;30349:16;30343:23;30372:63;30429:4;30424:3;30420:14;30406:12;30372:63;;;30285:156;30518:4;30511:5;30507:16;30501:23;30530:63;30587:4;30582:3;30578:14;30564:12;30530:63;;;30451:148;30676:4;30669:5;30665:16;30659:23;30688:63;30745:4;30740:3;30736:14;30722:12;30688:63;;;30609:148;30847:6;30840:5;30836:18;30830:25;30861:65;30918:6;30913:3;30909:16;30895:12;30861:65;;;30767:165;31005:6;30998:5;30994:18;30988:25;31019:65;31076:6;31071:3;31067:16;31053:12;31019:65;;;30942:148;31173:6;31166:5;31162:18;31156:25;31229:3;31223:4;31219:14;31210:6;31205:3;31201:16;31194:40;31249:67;31311:4;31297:12;31249:67;;;31241:75;;31100:228;31411:6;31404:5;31400:18;31394:25;31467:3;31461:4;31457:14;31448:6;31443:3;31439:16;31432:40;31487:67;31549:4;31535:12;31487:67;;;31479:75;;31338:228;31652:6;31645:5;31641:18;31635:25;31708:3;31702:4;31698:14;31689:6;31684:3;31680:16;31673:40;31728:67;31790:4;31776:12;31728:67;;;31720:75;;31576:231;31893:6;31886:5;31882:18;31876:25;31949:3;31943:4;31939:14;31930:6;31925:3;31921:16;31914:40;31969:67;32031:4;32017:12;31969:67;;;31961:75;29414:2660;-1:-1;;;;;29414:2660;32470:107;32549:22;32565:5;32549:22;;32584:1426;;32971:75;33042:3;33033:6;32971:75;;;33068:2;33063:3;33059:12;33052:19;;33082:75;33153:3;33144:6;33082:75;;;33179:2;33174:3;33170:12;33163:19;;33200:103;33299:3;33290:6;33282;33200:103;;;33193:110;;33314:75;33385:3;33376:6;33314:75;;;33411:2;33406:3;33402:12;33395:19;;33425:75;33496:3;33487:6;33425:75;;;33522:2;33517:3;33513:12;33506:19;;33536:75;33607:3;33598:6;33536:75;;;33633:2;33628:3;33624:12;33617:19;;33647:75;33718:3;33709:6;33647:75;;;33744:2;33739:3;33735:12;33728:19;;33758:75;33829:3;33820:6;33758:75;;;33855:2;33850:3;33846:12;33839:19;;33869:91;33956:3;33947:6;33869:91;;;-1:-1;33982:2;33973:12;;32959:1051;-1:-1;;;;;;;;;;32959:1051;34017:262;;34161:93;34250:3;34241:6;34161:93;;34286:511;;34513:148;34657:3;34513:148;;;34506:155;;34672:75;34743:3;34734:6;34672:75;;;-1:-1;34769:2;34760:12;;34494:303;-1:-1;34494:303;34804:370;;35002:147;35145:3;35002:147;;35181:213;35299:2;35284:18;;35313:71;35288:9;35357:6;35313:71;;35401:229;35527:2;35512:18;;35541:79;35516:9;35593:6;35541:79;;35637:356;35799:2;35784:18;;35813:79;35788:9;35865:6;35813:79;;;35903:80;35979:2;35968:9;35964:18;35955:6;35903:80;;36000:340;36154:2;36139:18;;36168:79;36143:9;36220:6;36168:79;;;36258:72;36326:2;36315:9;36311:18;36302:6;36258:72;;36347:324;36493:2;36478:18;;36507:71;36482:9;36551:6;36507:71;;;36589:72;36657:2;36646:9;36642:18;36633:6;36589:72;;36678:435;36852:2;36837:18;;36866:71;36841:9;36910:6;36866:71;;;36948:72;37016:2;37005:9;37001:18;36992:6;36948:72;;;37031;37099:2;37088:9;37084:18;37075:6;37031:72;;37120:324;37266:2;37251:18;;37280:71;37255:9;37324:6;37280:71;;37451:827;37773:2;37787:47;;;37758:18;;37848:146;37758:18;37980:6;37848:146;;;37840:154;;38005:72;38073:2;38062:9;38058:18;38049:6;38005:72;;;38125:9;38119:4;38115:20;38110:2;38099:9;38095:18;38088:48;38150:118;38263:4;38254:6;38150:118;;38285:201;38397:2;38382:18;;38411:65;38386:9;38449:6;38411:65;;38493:213;38611:2;38596:18;;38625:71;38600:9;38669:6;38625:71;;38713:539;38911:3;38896:19;;38926:71;38900:9;38970:6;38926:71;;;39008:68;39072:2;39061:9;39057:18;39048:6;39008:68;;;39087:72;39155:2;39144:9;39140:18;39131:6;39087:72;;;39170;39238:2;39227:9;39223:18;39214:6;39170:72;;39259:293;39393:2;39407:47;;;39378:18;;39468:74;39378:18;39528:6;39468:74;;39867:407;40058:2;40072:47;;;40043:18;;40133:131;40043:18;40133:131;;40281:407;40472:2;40486:47;;;40457:18;;40547:131;40457:18;40547:131;;40695:407;40886:2;40900:47;;;40871:18;;40961:131;40871:18;40961:131;;41109:407;41300:2;41314:47;;;41285:18;;41375:131;41285:18;41375:131;;41523:407;41714:2;41728:47;;;41699:18;;41789:131;41699:18;41789:131;;41937:407;42128:2;42142:47;;;42113:18;;42203:131;42113:18;42203:131;;42351:407;42542:2;42556:47;;;42527:18;;42617:131;42527:18;42617:131;;42765:407;42956:2;42970:47;;;42941:18;;43031:131;42941:18;43031:131;;43179:407;43370:2;43384:47;;;43355:18;;43445:131;43355:18;43445:131;;43593:407;43784:2;43798:47;;;43769:18;;43859:131;43769:18;43859:131;;44007:407;44198:2;44212:47;;;44183:18;;44273:131;44183:18;44273:131;;44421:407;44612:2;44626:47;;;44597:18;;44687:131;44597:18;44687:131;;44835:407;45026:2;45040:47;;;45011:18;;45101:131;45011:18;45101:131;;45249:407;45440:2;45454:47;;;45425:18;;45515:131;45425:18;45515:131;;45663:407;45854:2;45868:47;;;45839:18;;45929:131;45839:18;45929:131;;46077:407;46268:2;46282:47;;;46253:18;;46343:131;46253:18;46343:131;;46491:407;46682:2;46696:47;;;46667:18;;46757:131;46667:18;46757:131;;46905:407;47096:2;47110:47;;;47081:18;;47171:131;47081:18;47171:131;;47319:407;47510:2;47524:47;;;47495:18;;47585:131;47495:18;47585:131;;47733:407;47924:2;47938:47;;;47909:18;;47999:131;47909:18;47999:131;;48147:407;48338:2;48352:47;;;48323:18;;48413:131;48323:18;48413:131;;48561:407;48752:2;48766:47;;;48737:18;;48827:131;48737:18;48827:131;;48975:407;49166:2;49180:47;;;49151:18;;49241:131;49151:18;49241:131;;49389:407;49580:2;49594:47;;;49565:18;;49655:131;49565:18;49655:131;;49803:407;49994:2;50008:47;;;49979:18;;50069:131;49979:18;50069:131;;50437:408;50601:2;50586:18;;50615:71;50590:9;50659:6;50615:71;;;50734:9;50728:4;50724:20;50719:2;50708:9;50704:18;50697:48;50759:76;50830:4;50821:6;50759:76;;50852:324;50998:2;50983:18;;51012:71;50987:9;51056:6;51012:71;;51183:256;51245:2;51239:9;51271:17;;;-1:-1;;;;;51331:34;;51367:22;;;51328:62;51325:2;;;51403:1;51400;51393:12;51325:2;51419;51412:22;51223:216;;-1:-1;51223:216;51446:309;;-1:-1;;;;;51602:6;51599:30;51596:2;;;51642:1;51639;51632:12;51596:2;-1:-1;51677:4;51665:17;;;51730:15;;51533:222;52092:317;;-1:-1;;;;;52223:6;52220:30;52217:2;;;52263:1;52260;52253:12;52217:2;-1:-1;52394:4;52330;52307:17;;;;-1:-1;;52303:33;52384:15;;52154:255;52416:156;52545:4;52536:14;;52493:79;52756:142;52864:12;;52835:63;53829:183;53952:19;;;54001:4;53992:14;;53945:67;54559:144;54694:3;54672:31;-1:-1;54672:31;55037:91;;55099:24;55117:5;55099:24;;55241:85;55307:13;55300:21;;55283:43;55412:121;-1:-1;;;;;55474:54;;55457:76;55619:81;55690:4;55679:16;;55662:38;55707:129;;55794:37;55825:5;55794:37;;55843:116;;55930:24;55948:5;55930:24;;55966:121;;56045:37;56076:5;56045:37;;56210:145;56291:6;56286:3;56281;56268:30;-1:-1;56347:1;56329:16;;56322:27;56261:94;56364:268;56429:1;56436:101;56450:6;56447:1;56444:13;56436:101;;;56517:11;;;56511:18;56498:11;;;56491:39;56472:2;56465:10;56436:101;;;56552:6;56549:1;56546:13;56543:2;;;-1:-1;;56617:1;56599:16;;56592:27;56413:219;56640:95;;56704:26;56724:5;56933:89;56997:20;57011:5;56997:20;;57110:97;57198:2;57178:14;-1:-1;;57174:28;;57158:49;57215:94;57289:2;57285:14;;57257:52;57317:117;57386:24;57404:5;57386:24;;;57379:5;57376:35;57366:2;;57425:1;57422;57415:12;57581:111;57647:21;57662:5;57647:21;;57699:117;57768:24;57786:5;57768:24;",
  "source": "/**\n * @file\n * @author David Lucid <david@rari.capital>\n *\n * @section LICENSE\n *\n * All rights reserved to David Lucid of David Lucid LLC.\n * Any disclosure, reproduction, distribution or other use of this code by any individual or entity other than David Lucid of David Lucid LLC, unless given explicit permission by David Lucid of David Lucid LLC, is prohibited.\n *\n * @section DESCRIPTION\n *\n * This file includes the Ethereum contract code for RariFundProxy, which faciliates pre-deposit exchanges and post-withdrawal exchanges.\n */\n\npragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/drafts/SignedSafeMath.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/GSN/GSNRecipient.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\";\n\nimport \"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\";\nimport \"@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol\";\n\nimport \"./lib/exchanges/ZeroExExchangeController.sol\";\nimport \"./RariFundManager.sol\";\n\n/**\n * @title RariFundProxy\n * @dev This contract faciliates deposits to RariFundManager from exchanges and withdrawals from RariFundManager for exchanges.\n */\n\ncontract RariFundProxy is Ownable, GSNRecipient {\n    using SafeMath for uint256;\n    using SignedSafeMath for int256;\n    using ECDSA for bytes32;\n    using SafeERC20 for IERC20;\n\n    /**\n     * @notice Package version of `rari-eth-contracts` when this contract was deployed.\n     */\n    string public constant VERSION = \"1.0.0\";\n\n\n    /**\n     * @dev Maps ERC20 token contract addresses to supported currency codes.\n     */\n    mapping(string => address) private _erc20Contracts;\n\n    /**\n     * @dev Constructor that sets supported ERC20 token contract addresses.\n     */\n    constructor () public {\n        Ownable.initialize(msg.sender);\n        GSNRecipient.initialize();\n    }\n\n    /**\n     * @dev Address of the RariFundManager.\n     */\n    address payable private _rariFundManagerContract;\n\n    /**\n     * @dev Contract of the RariFundManager.\n     */\n    RariFundManager private _rariFundManager;\n\n    /**\n     * @dev Address of the trusted GSN signer.\n     */\n    address private _gsnTrustedSigner;\n\n    /**\n     * @dev Emitted when the RariFundManager of the RariFundProxy is set.\n     */\n    event FundManagerSet(address newContract);\n\n\n    address constant private WETH_CONTRACT = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n\n\n    IEtherToken constant private _weth = IEtherToken(WETH_CONTRACT);\n\n\n    /**\n     * @dev Sets or upgrades the RariFundManager of the RariFundProxy.\n     * @param newContract The address of the new RariFundManager contract.\n     */\n    function setFundManager(address payable newContract) external onlyOwner {\n        // Approve maximum output tokens to RariFundManager for deposit\n        // see safeApprove in IERC20\n        if (_rariFundManagerContract != address(0)) _weth.approve(_rariFundManagerContract, 0);\n        if (newContract != address(0)) _weth.approve(newContract, uint256(-1));\n\n        _rariFundManagerContract = newContract;\n        _rariFundManager = RariFundManager(_rariFundManagerContract);\n        emit FundManagerSet(newContract);\n    }\n\n    \n\n    /**\n     * @dev Emitted when the trusted GSN signer of the RariFundProxy is set.\n     */\n    event GsnTrustedSignerSet(address newAddress);\n\n    /**\n     * @dev Sets or upgrades the trusted GSN signer of the RariFundProxy.\n     * @param newAddress The Ethereum address of the new trusted GSN signer.\n     */\n    function setGsnTrustedSigner(address newAddress) external onlyOwner {\n        _gsnTrustedSigner = newAddress;\n        emit GsnTrustedSignerSet(newAddress);\n    }\n\n    /**\n     * @dev Payable fallback function called by 0x exchange to refund unspent protocol fee.\n     */\n    function () external payable { }\n\n    /**\n     * @dev Emitted when funds have been exchanged before being deposited via RariFundManager.\n     * If exchanging from ETH, `inputErc20Contract` = address(0).\n     */\n    event PreDepositExchange(address indexed inputErc20Contract, address indexed payee, uint256 makerAssetFilledAmount, uint256 depositAmount);\n\n    /**\n     * @dev Emitted when funds have been exchanged after being withdrawn via RariFundManager.\n     * If exchanging from ETH, `outputErc20Contract` = address(0).\n     */\n    event PostWithdrawalExchange(address indexed outputErc20Contract, address indexed payee, uint256 withdrawalAmount, uint256 takerAssetFilledAmount);\n\n    \n    /**\n     * @notice Exchanges and deposits funds to RariFund in exchange for RFT (via 0x).\n     * You can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation.\n     * Please note that you must approve RariFundProxy to transfer at least `inputAmount` unless you are inputting ETH.\n     * You also must input at least enough ETH to cover the protocol fee (and enough to cover `orders` if you are inputting ETH).\n     * @dev We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n     * @param inputErc20Contract The ERC20 contract address of the token to be exchanged. Set to address(0) to input ETH.\n     * @param inputAmount The amount of tokens to be exchanged (including taker fees).\n     * @param orders The limit orders to be filled in ascending order of the price you pay.\n     * @param signatures The signatures for the orders.\n     * @param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\n     */\n    function exchangeAndDeposit(address inputErc20Contract, uint256 inputAmount, LibOrder.Order[] memory orders, bytes[] memory signatures, uint256 takerAssetFillAmount) public payable {\n        // Input validation\n        require(_rariFundManagerContract != address(0), \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\");\n        require(inputAmount > 0, \"Input amount must be greater than 0.\");\n        address outputErc20Contract = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n        require(inputErc20Contract != outputErc20Contract, \"Input and output currencies cannot be the same.\");\n        require(orders.length > 0, \"Orders array is empty.\");\n        require(orders.length == signatures.length, \"Length of orders and signatures arrays must be equal.\");\n        require(takerAssetFillAmount > 0, \"Taker asset fill amount must be greater than 0.\");\n\n        if (inputErc20Contract == address(0)) {\n            // Wrap ETH\n            _weth.deposit.value(inputAmount)();\n        } else {\n            // Transfer input tokens from msg.sender if not inputting ETH\n            IERC20(inputErc20Contract).safeTransferFrom(msg.sender, address(this), inputAmount); // The user must approve the transfer of tokens beforehand\n        }\n\n        // Approve and exchange tokens\n        if (inputAmount > ZeroExExchangeController.allowance(inputErc20Contract)) ZeroExExchangeController.approve(inputErc20Contract, uint256(-1));\n        uint256[2] memory filledAmounts = ZeroExExchangeController.marketSellOrdersFillOrKill(orders, signatures, takerAssetFillAmount, inputErc20Contract == address(0) ? msg.value.sub(inputAmount) : msg.value);\n\n        // Unwrap outputted WETH\n        uint256 wethBalance = _weth.balanceOf(address(this));\n        require(wethBalance > 0, \"No WETH outputted.\");\n        _weth.withdraw(wethBalance);\n\n        // Refund unused input tokens\n        IERC20 inputToken = IERC20(inputErc20Contract);\n        uint256 inputTokenBalance = inputToken.balanceOf(address(this));\n        if (inputTokenBalance > 0) inputToken.safeTransfer(msg.sender, inputTokenBalance);\n\n        // Emit event\n        emit PreDepositExchange(inputErc20Contract, msg.sender, filledAmounts[0], filledAmounts[1]);\n\n        // Deposit output tokens\n        _rariFundManager.depositTo.value(wethBalance)(msg.sender);\n    }\n\n\n    /**\n     * @notice Withdraws funds from RariFund in exchange for RFT and exchanges to them to the desired currency (if no 0x orders are supplied, exchanges DAI, USDC, USDT, TUSD, and mUSD via mStable).\n     * You can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation.\n     * Please note that you must approve RariFundManager to burn of the necessary amount of RFT.\n     * You also must input at least enough ETH to cover the protocol fees.\n     * @dev We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n     * @param inputAmount The amounts of tokens to be withdrawn and exchanged (including taker fees).\n     * @param outputErc20Contract The ERC20 contract address of the token to be outputted by the exchange. Set to address(0) to output ETH.\n     * @param orders The limit orders to be filled in ascending order of the price you pay.\n     * @param signatures The signatures for the orders.\n     * @param makerAssetFillAmount The amount of the maker assets to buy.\n     */\n    function withdrawAndExchange(uint256 inputAmount, address outputErc20Contract, LibOrder.Order[] memory orders, bytes[] memory signatures, uint256 makerAssetFillAmount) public payable {\n        // Input validation\n        require(inputAmount > 0, \"Input amount must be greater than 0.\");\n        require(makerAssetFillAmount > 0, \"Maker asset amount must be greater than 0.\");\n        require(orders.length > 0 && signatures.length > 0, \"Must supply more than 0 orders and signatures.\");\n        require(orders.length == signatures.length, \"Lengths of all orders and signatures arrays must be equal.\");\n        require(_rariFundManagerContract != address(0), \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\");\n\n        // Withdraw input tokens\n        _rariFundManager.withdrawFrom(msg.sender, inputAmount);\n\n        // Wrap ETH for exchanging with 0x\n        _weth.deposit.value(inputAmount)();\n\n        // Exchange tokens and emit event\n        uint256[2] memory filledAmounts = ZeroExExchangeController.marketBuyOrdersFillOrKill(orders, signatures, makerAssetFillAmount, msg.value);\n        emit PostWithdrawalExchange(outputErc20Contract, msg.sender, filledAmounts[0], filledAmounts[1]);\n\n        // Unwrap unused WETH\n        uint256 wethBalance = _weth.balanceOf(address(this));\n        _weth.withdraw(wethBalance);\n\n        // Forward output tokens\n        IERC20 outputToken = IERC20(outputErc20Contract);\n        uint256 outputTokenBalance = outputToken.balanceOf(address(this));\n        if (outputTokenBalance > 0) outputToken.safeTransfer(msg.sender, outputTokenBalance);\n\n        // Forward unused ETH\n        uint256 ethBalance = address(this).balance;\n        \n        if (ethBalance > 0) {\n            (bool success, ) = msg.sender.call.value(ethBalance)(\"\");\n            require(success, \"Failed to transfer ETH to msg.sender after exchange.\");\n        }\n    }\n\n\n    /**\n     * @notice Deposits funds to RariFund in exchange for REFT (with GSN support).\n     * You may only deposit ETH.\n     * Please note that you must approve RariFundProxy to transfer at least `amount`.\n     * @return Boolean indicating success.\n     */\n    function deposit() payable external returns (bool) {\n        require(msg.value > 0, \"Must deposit more than 0 eth\");\n        return _rariFundManager.depositTo.value(msg.value)(_msgSender());\n    }\n\n    /**\n     * @dev Ensures that only transactions with a trusted signature can be relayed through the GSN.\n     */\n    function acceptRelayedCall(\n        address relay,\n        address from,\n        bytes calldata encodedFunction,\n        uint256 transactionFee,\n        uint256 gasPrice,\n        uint256 gasLimit,\n        uint256 nonce,\n        bytes calldata approvalData,\n        uint256\n    ) external view returns (uint256, bytes memory) {\n        bytes memory blob = abi.encodePacked(\n            relay,\n            from,\n            encodedFunction,\n            transactionFee,\n            gasPrice,\n            gasLimit,\n            nonce, // Prevents replays on RelayHub\n            getHubAddr(), // Prevents replays in multiple RelayHubs\n            address(this) // Prevents replays in multiple recipients\n        );\n        if (keccak256(blob).toEthSignedMessageHash().recover(approvalData) != _gsnTrustedSigner) return _rejectRelayedCall(0);\n        if (_gsnTrustedSigner == address(0)) return _rejectRelayedCall(1);\n        return _approveRelayedCall();\n    }\n\n    /**\n     * @dev Code executed before processing a call relayed through the GSN.\n     */\n    function _preRelayedCall(bytes memory) internal returns (bytes32) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Code executed after processing a call relayed through the GSN.\n     */\n    function _postRelayedCall(bytes memory, bool, uint256, bytes32) internal {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n",
  "sourcePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundProxy.sol",
  "ast": {
    "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundProxy.sol",
    "exportedSymbols": {
      "RariFundProxy": [
        3277
      ]
    },
    "id": 3278,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2611,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "540:23:3"
      },
      {
        "id": 2612,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "564:33:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "id": 2613,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 8202,
        "src": "599:78:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/drafts/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/drafts/SignedSafeMath.sol",
        "id": 2614,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 8015,
        "src": "678:86:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 2615,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 8326,
        "src": "765:82:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
        "id": 2616,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 8964,
        "src": "848:83:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
        "id": 2617,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 9184,
        "src": "932:86:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2618,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 8846,
        "src": "1019:90:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/GSN/GSNRecipient.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/GSN/GSNRecipient.sol",
        "id": 2619,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 7252,
        "src": "1110:81:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
        "id": 2620,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 7841,
        "src": "1192:83:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 2621,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 5971,
        "src": "1277:64:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol",
        "file": "@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol",
        "id": 2622,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 4859,
        "src": "1342:70:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/exchanges/ZeroExExchangeController.sol",
        "file": "./lib/exchanges/ZeroExExchangeController.sol",
        "id": 2623,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 3896,
        "src": "1414:54:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundManager.sol",
        "file": "./RariFundManager.sol",
        "id": 2624,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 2610,
        "src": "1469:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2625,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8325,
              "src": "1689:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$8325",
                "typeString": "contract Ownable"
              }
            },
            "id": 2626,
            "nodeType": "InheritanceSpecifier",
            "src": "1689:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2627,
              "name": "GSNRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7251,
              "src": "1698:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GSNRecipient_$7251",
                "typeString": "contract GSNRecipient"
              }
            },
            "id": 2628,
            "nodeType": "InheritanceSpecifier",
            "src": "1698:12:3"
          }
        ],
        "contractDependencies": [
          6893,
          7251,
          7555,
          8325,
          9327
        ],
        "contractKind": "contract",
        "documentation": "@title RariFundProxy\n@dev This contract faciliates deposits to RariFundManager from exchanges and withdrawals from RariFundManager for exchanges.",
        "fullyImplemented": true,
        "id": 3277,
        "linearizedBaseContracts": [
          3277,
          7251,
          8325,
          6893,
          7555,
          9327
        ],
        "name": "RariFundProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2631,
            "libraryName": {
              "contractScope": null,
              "id": 2629,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8201,
              "src": "1723:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$8201",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1717:27:3",
            "typeName": {
              "id": 2630,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1736:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2634,
            "libraryName": {
              "contractScope": null,
              "id": 2632,
              "name": "SignedSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8014,
              "src": "1755:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignedSafeMath_$8014",
                "typeString": "library SignedSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1749:32:3",
            "typeName": {
              "id": 2633,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "1774:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 2637,
            "libraryName": {
              "contractScope": null,
              "id": 2635,
              "name": "ECDSA",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7840,
              "src": "1792:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECDSA_$7840",
                "typeString": "library ECDSA"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1786:24:3",
            "typeName": {
              "id": 2636,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1802:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 2640,
            "libraryName": {
              "contractScope": null,
              "id": 2638,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9183,
              "src": "1821:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$9183",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1815:27:3",
            "typeName": {
              "contractScope": null,
              "id": 2639,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8963,
              "src": "1835:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8963",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 2643,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "1952:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2641,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1952:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "312e302e30",
              "id": 2642,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1985:7:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                "typeString": "literal_string \"1.0.0\""
              },
              "value": "1.0.0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2647,
            "name": "_erc20Contracts",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2093:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2646,
              "keyType": {
                "id": 2644,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2101:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "2093:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 2645,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2111:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2662,
              "nodeType": "Block",
              "src": "2264:82:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2653,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "2293:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2293:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2650,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8325,
                        "src": "2274:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$8325_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 2652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8236,
                      "src": "2274:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2274:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2657,
                        "name": "GSNRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7251,
                        "src": "2314:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GSNRecipient_$7251_$",
                          "typeString": "type(contract GSNRecipient)"
                        }
                      },
                      "id": 2659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6921,
                      "src": "2314:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2314:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2661,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:25:3"
                }
              ]
            },
            "documentation": "@dev Constructor that sets supported ERC20 token contract addresses.",
            "id": 2663,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2254:2:3"
            },
            "returnParameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2264:0:3"
            },
            "scope": 3277,
            "src": "2242:104:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2665,
            "name": "_rariFundManagerContract",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2412:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2664,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2412:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2667,
            "name": "_rariFundManager",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2528:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RariFundManager_$2609",
              "typeString": "contract RariFundManager"
            },
            "typeName": {
              "contractScope": null,
              "id": 2666,
              "name": "RariFundManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2609,
              "src": "2528:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RariFundManager_$2609",
                "typeString": "contract RariFundManager"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2669,
            "name": "_gsnTrustedSigner",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2638:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2668,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2638:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the RariFundManager of the RariFundProxy is set.",
            "id": 2673,
            "name": "FundManagerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2671,
                  "indexed": false,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2673,
                  "src": "2789:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2788:21:3"
            },
            "src": "2768:42:3"
          },
          {
            "constant": true,
            "id": 2676,
            "name": "WETH_CONTRACT",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2817:83:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2674,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2817:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 2675,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2858:42:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2681,
            "name": "_weth",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2908:63:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEtherToken_$4858",
              "typeString": "contract IEtherToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 2677,
              "name": "IEtherToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4858,
              "src": "2908:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEtherToken_$4858",
                "typeString": "contract IEtherToken"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 2679,
                  "name": "WETH_CONTRACT",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2676,
                  "src": "2957:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 2678,
                "name": "IEtherToken",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4858,
                "src": "2945:11:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IEtherToken_$4858_$",
                  "typeString": "type(contract IEtherToken)"
                }
              },
              "id": 2680,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2945:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEtherToken_$4858",
                "typeString": "contract IEtherToken"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2731,
              "nodeType": "Block",
              "src": "3213:453:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2688,
                      "name": "_rariFundManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2665,
                      "src": "3336:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3372:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3364:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3364:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3336:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2700,
                  "nodeType": "IfStatement",
                  "src": "3332:86:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2696,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2665,
                          "src": "3390:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3416:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2693,
                          "name": "_weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2681,
                          "src": "3376:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEtherToken_$4858",
                            "typeString": "contract IEtherToken"
                          }
                        },
                        "id": 2695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4822,
                        "src": "3376:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 2698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3376:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2699,
                    "nodeType": "ExpressionStatement",
                    "src": "3376:42:3"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2701,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2683,
                      "src": "3432:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3455:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3447:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3447:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3432:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2716,
                  "nodeType": "IfStatement",
                  "src": "3428:70:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2709,
                          "name": "newContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2683,
                          "src": "3473:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "3494:2:3",
                              "subExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3495:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            ],
                            "id": 2710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3486:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 2713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3486:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2706,
                          "name": "_weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2681,
                          "src": "3459:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEtherToken_$4858",
                            "typeString": "contract IEtherToken"
                          }
                        },
                        "id": 2708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4822,
                        "src": "3459:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 2714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3459:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2715,
                    "nodeType": "ExpressionStatement",
                    "src": "3459:39:3"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2717,
                      "name": "_rariFundManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2665,
                      "src": "3509:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2718,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2683,
                      "src": "3536:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3509:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2720,
                  "nodeType": "ExpressionStatement",
                  "src": "3509:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2721,
                      "name": "_rariFundManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2667,
                      "src": "3557:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RariFundManager_$2609",
                        "typeString": "contract RariFundManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2723,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2665,
                          "src": "3592:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 2722,
                        "name": "RariFundManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2609,
                        "src": "3576:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RariFundManager_$2609_$",
                          "typeString": "type(contract RariFundManager)"
                        }
                      },
                      "id": 2724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3576:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RariFundManager_$2609",
                        "typeString": "contract RariFundManager"
                      }
                    },
                    "src": "3557:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RariFundManager_$2609",
                      "typeString": "contract RariFundManager"
                    }
                  },
                  "id": 2726,
                  "nodeType": "ExpressionStatement",
                  "src": "3557:60:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2728,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2683,
                        "src": "3647:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2727,
                      "name": "FundManagerSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2673,
                      "src": "3632:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3632:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2730,
                  "nodeType": "EmitStatement",
                  "src": "3627:32:3"
                }
              ]
            },
            "documentation": "@dev Sets or upgrades the RariFundManager of the RariFundProxy.\n@param newContract The address of the new RariFundManager contract.",
            "id": 2732,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2686,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2685,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8254,
                  "src": "3203:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3203:9:3"
              }
            ],
            "name": "setFundManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "3165:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3165:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3164:29:3"
            },
            "returnParameters": {
              "id": 2687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3213:0:3"
            },
            "scope": 3277,
            "src": "3141:525:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the trusted GSN signer of the RariFundProxy is set.",
            "id": 2736,
            "name": "GsnTrustedSignerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2734,
                  "indexed": false,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2736,
                  "src": "3797:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3796:20:3"
            },
            "src": "3771:46:3"
          },
          {
            "body": {
              "id": 2751,
              "nodeType": "Block",
              "src": "4058:93:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2743,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "4068:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2744,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2738,
                      "src": "4088:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4068:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2746,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:30:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2748,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2738,
                        "src": "4133:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2747,
                      "name": "GsnTrustedSignerSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2736,
                      "src": "4113:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4113:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2750,
                  "nodeType": "EmitStatement",
                  "src": "4108:36:3"
                }
              ]
            },
            "documentation": "@dev Sets or upgrades the trusted GSN signer of the RariFundProxy.\n@param newAddress The Ethereum address of the new trusted GSN signer.",
            "id": 2752,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2741,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2740,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8254,
                  "src": "4048:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4048:9:3"
              }
            ],
            "name": "setGsnTrustedSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2738,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2752,
                  "src": "4019:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4018:20:3"
            },
            "returnParameters": {
              "id": 2742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4058:0:3"
            },
            "scope": 3277,
            "src": "3990:161:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2755,
              "nodeType": "Block",
              "src": "4294:3:3",
              "statements": []
            },
            "documentation": "@dev Payable fallback function called by 0x exchange to refund unspent protocol fee.",
            "id": 2756,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4274:2:3"
            },
            "returnParameters": {
              "id": 2754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4294:0:3"
            },
            "scope": 3277,
            "src": "4265:32:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when funds have been exchanged before being deposited via RariFundManager.\nIf exchanging from ETH, `inputErc20Contract` = address(0).",
            "id": 2766,
            "name": "PreDepositExchange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2758,
                  "indexed": true,
                  "name": "inputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "4505:34:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4505:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2760,
                  "indexed": true,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "4541:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4541:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2762,
                  "indexed": false,
                  "name": "makerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "4564:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4564:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2764,
                  "indexed": false,
                  "name": "depositAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "4596:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4596:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4504:114:3"
            },
            "src": "4480:139:3"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when funds have been exchanged after being withdrawn via RariFundManager.\nIf exchanging from ETH, `outputErc20Contract` = address(0).",
            "id": 2776,
            "name": "PostWithdrawalExchange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2768,
                  "indexed": true,
                  "name": "outputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "4831:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4831:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2770,
                  "indexed": true,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "4868:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4868:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2772,
                  "indexed": false,
                  "name": "withdrawalAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "4891:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4891:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2774,
                  "indexed": false,
                  "name": "takerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "4917:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4917:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4830:118:3"
            },
            "src": "4802:147:3"
          },
          {
            "body": {
              "id": 2985,
              "nodeType": "Block",
              "src": "6278:2165:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 2796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2792,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2665,
                          "src": "6324:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6360:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6352:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6352:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6324:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e64206d616e6167657220636f6e7472616374206e6f74207365742e2054686973206d61792062652064756520746f20616e2075706772616465206f6620746869732070726f787920636f6e74726163742e",
                        "id": 2797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6364:86:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b83c7c00758395ed4d63ccdaa5904c335f9ad81195b61837435b99ce9fc2093f",
                          "typeString": "literal_string \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\""
                        },
                        "value": "Fund manager contract not set. This may be due to an upgrade of this proxy contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b83c7c00758395ed4d63ccdaa5904c335f9ad81195b61837435b99ce9fc2093f",
                          "typeString": "literal_string \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\""
                        }
                      ],
                      "id": 2791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6316:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6316:135:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2799,
                  "nodeType": "ExpressionStatement",
                  "src": "6316:135:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2801,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2780,
                          "src": "6469:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6483:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6469:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e70757420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 2804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6486:38:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10ec4461035f01cadf610cb96994718d3fc3095642887636b626de36d0d74f78",
                          "typeString": "literal_string \"Input amount must be greater than 0.\""
                        },
                        "value": "Input amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10ec4461035f01cadf610cb96994718d3fc3095642887636b626de36d0d74f78",
                          "typeString": "literal_string \"Input amount must be greater than 0.\""
                        }
                      ],
                      "id": 2800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6461:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6461:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2806,
                  "nodeType": "ExpressionStatement",
                  "src": "6461:64:3"
                },
                {
                  "assignments": [
                    2808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2808,
                      "name": "outputErc20Contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "6535:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2807,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6535:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2810,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                    "id": 2809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6565:42:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6535:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2812,
                          "name": "inputErc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2778,
                          "src": "6625:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2813,
                          "name": "outputErc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2808,
                          "src": "6647:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6625:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e70757420616e64206f75747075742063757272656e636965732063616e6e6f74206265207468652073616d652e",
                        "id": 2815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6668:49:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c88618326a63336fe0e08f0635173c076832f8f5a6f1a006cde4ac0ef2f2ad12",
                          "typeString": "literal_string \"Input and output currencies cannot be the same.\""
                        },
                        "value": "Input and output currencies cannot be the same."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c88618326a63336fe0e08f0635173c076832f8f5a6f1a006cde4ac0ef2f2ad12",
                          "typeString": "literal_string \"Input and output currencies cannot be the same.\""
                        }
                      ],
                      "id": 2811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6617:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6617:101:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2817,
                  "nodeType": "ExpressionStatement",
                  "src": "6617:101:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2819,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2783,
                            "src": "6736:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 2820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6736:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6752:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6736:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f726465727320617272617920697320656d7074792e",
                        "id": 2823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6755:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6190cde5dc607c506a1968723067856cead5a5fc477117fab3dac4cf939442e4",
                          "typeString": "literal_string \"Orders array is empty.\""
                        },
                        "value": "Orders array is empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6190cde5dc607c506a1968723067856cead5a5fc477117fab3dac4cf939442e4",
                          "typeString": "literal_string \"Orders array is empty.\""
                        }
                      ],
                      "id": 2818,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6728:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6728:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2825,
                  "nodeType": "ExpressionStatement",
                  "src": "6728:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2827,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2783,
                            "src": "6798:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 2828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6798:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2829,
                            "name": "signatures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2786,
                            "src": "6815:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "id": 2830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6815:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6798:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c656e677468206f66206f726465727320616e64207369676e61747572657320617272617973206d75737420626520657175616c2e",
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6834:55:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55eb73697ae411cbdcd68aa304c60679b6b21ab3e72c1f9aaf1dc8519d061213",
                          "typeString": "literal_string \"Length of orders and signatures arrays must be equal.\""
                        },
                        "value": "Length of orders and signatures arrays must be equal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55eb73697ae411cbdcd68aa304c60679b6b21ab3e72c1f9aaf1dc8519d061213",
                          "typeString": "literal_string \"Length of orders and signatures arrays must be equal.\""
                        }
                      ],
                      "id": 2826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6790:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6790:100:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "6790:100:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2836,
                          "name": "takerAssetFillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2788,
                          "src": "6908:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6931:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6908:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54616b65722061737365742066696c6c20616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 2839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6934:49:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9c0a22ccc4fce3408666f0d24bb0b9b76616c444827c5a4a278ea8e5e349935",
                          "typeString": "literal_string \"Taker asset fill amount must be greater than 0.\""
                        },
                        "value": "Taker asset fill amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9c0a22ccc4fce3408666f0d24bb0b9b76616c444827c5a4a278ea8e5e349935",
                          "typeString": "literal_string \"Taker asset fill amount must be greater than 0.\""
                        }
                      ],
                      "id": 2835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6900:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6900:84:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2841,
                  "nodeType": "ExpressionStatement",
                  "src": "6900:84:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2842,
                      "name": "inputErc20Contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2778,
                      "src": "6999:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7029:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7021:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7021:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6999:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2869,
                    "nodeType": "Block",
                    "src": "7122:241:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2861,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9342,
                                "src": "7254:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7254:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2864,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9470,
                                  "src": "7274:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                                    "typeString": "contract RariFundProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                                    "typeString": "contract RariFundProxy"
                                  }
                                ],
                                "id": 2863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7266:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7266:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2866,
                              "name": "inputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2780,
                              "src": "7281:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2858,
                                  "name": "inputErc20Contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2778,
                                  "src": "7217:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2857,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8963,
                                "src": "7210:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$8963_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7210:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8963",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9021,
                            "src": "7210:43:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8963_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8963_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7210:83:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2868,
                        "nodeType": "ExpressionStatement",
                        "src": "7210:83:3"
                      }
                    ]
                  },
                  "id": 2870,
                  "nodeType": "IfStatement",
                  "src": "6995:368:3",
                  "trueBody": {
                    "id": 2856,
                    "nodeType": "Block",
                    "src": "7033:83:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2852,
                                "name": "inputAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2780,
                                "src": "7091:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2847,
                                  "name": "_weth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2681,
                                  "src": "7071:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IEtherToken_$4858",
                                    "typeString": "contract IEtherToken"
                                  }
                                },
                                "id": 2850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4852,
                                "src": "7071:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 2851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7071:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                                "typeString": "function (uint256) pure returns (function () payable external)"
                              }
                            },
                            "id": 2853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7071:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 2854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7071:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2855,
                        "nodeType": "ExpressionStatement",
                        "src": "7071:34:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2871,
                      "name": "inputAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2780,
                      "src": "7416:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2874,
                          "name": "inputErc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2778,
                          "src": "7465:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2872,
                          "name": "ZeroExExchangeController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "7430:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$3895_$",
                            "typeString": "type(library ZeroExExchangeController)"
                          }
                        },
                        "id": 2873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3714,
                        "src": "7430:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 2875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7430:54:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7416:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2887,
                  "nodeType": "IfStatement",
                  "src": "7412:139:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2880,
                          "name": "inputErc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2778,
                          "src": "7519:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "7547:2:3",
                              "subExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7548:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            ],
                            "id": 2881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7539:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7539:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2877,
                          "name": "ZeroExExchangeController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "7486:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$3895_$",
                            "typeString": "type(library ZeroExExchangeController)"
                          }
                        },
                        "id": 2879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3770,
                        "src": "7486:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 2885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7486:65:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2886,
                    "nodeType": "ExpressionStatement",
                    "src": "7486:65:3"
                  }
                },
                {
                  "assignments": [
                    2892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2892,
                      "name": "filledAmounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "7561:31:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2890,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7561:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2891,
                        "length": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 2889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7569:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "7561:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2912,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2895,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2783,
                        "src": "7647:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2896,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2786,
                        "src": "7655:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2897,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2788,
                        "src": "7667:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2898,
                            "name": "inputErc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2778,
                            "src": "7689:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7719:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7711:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7711:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7689:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2908,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "7753:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7753:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "7689:73:3",
                        "trueExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2906,
                              "name": "inputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2780,
                              "src": "7738:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2903,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9342,
                                "src": "7724:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7724:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8057,
                            "src": "7724:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7724:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2893,
                        "name": "ZeroExExchangeController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "7595:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$3895_$",
                          "typeString": "type(library ZeroExExchangeController)"
                        }
                      },
                      "id": 2894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketSellOrdersFillOrKill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3832,
                      "src": "7595:51:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (struct LibOrder.Order memory[] memory,bytes memory[] memory,uint256,uint256) returns (uint256[2] memory)"
                      }
                    },
                    "id": 2911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7595:168:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7561:202:3"
                },
                {
                  "assignments": [
                    2914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2914,
                      "name": "wethBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "7807:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2913,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7807:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2921,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2918,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9470,
                            "src": "7853:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 2917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7845:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7845:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2915,
                        "name": "_weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2681,
                        "src": "7829:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEtherToken_$4858",
                          "typeString": "contract IEtherToken"
                        }
                      },
                      "id": 2916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4834,
                      "src": "7829:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7829:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7807:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2923,
                          "name": "wethBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2914,
                          "src": "7877:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7891:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7877:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2057455448206f75747075747465642e",
                        "id": 2926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7894:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf515bb2b0019479e053ca5197013d1441ee886ea3b414302745edc1d7ff2e6a",
                          "typeString": "literal_string \"No WETH outputted.\""
                        },
                        "value": "No WETH outputted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf515bb2b0019479e053ca5197013d1441ee886ea3b414302745edc1d7ff2e6a",
                          "typeString": "literal_string \"No WETH outputted.\""
                        }
                      ],
                      "id": 2922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "7869:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7869:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2928,
                  "nodeType": "ExpressionStatement",
                  "src": "7869:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2932,
                        "name": "wethBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2914,
                        "src": "7940:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2929,
                        "name": "_weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2681,
                        "src": "7925:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEtherToken_$4858",
                          "typeString": "contract IEtherToken"
                        }
                      },
                      "id": 2931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4857,
                      "src": "7925:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7925:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2934,
                  "nodeType": "ExpressionStatement",
                  "src": "7925:27:3"
                },
                {
                  "assignments": [
                    2936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2936,
                      "name": "inputToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "8001:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8963",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2935,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8963,
                        "src": "8001:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8963",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2940,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2938,
                        "name": "inputErc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2778,
                        "src": "8028:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2937,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8963,
                      "src": "8021:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$8963_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8021:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8963",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8001:46:3"
                },
                {
                  "assignments": [
                    2942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2942,
                      "name": "inputTokenBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "8057:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2941,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8057:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2949,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2946,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9470,
                            "src": "8114:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 2945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8106:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8106:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2943,
                        "name": "inputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2936,
                        "src": "8085:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8963",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8908,
                      "src": "8085:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8085:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8057:63:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2950,
                      "name": "inputTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2942,
                      "src": "8134:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8154:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8134:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2961,
                  "nodeType": "IfStatement",
                  "src": "8130:81:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2956,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "8181:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8181:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2958,
                          "name": "inputTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2942,
                          "src": "8193:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2953,
                          "name": "inputToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2936,
                          "src": "8157:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8963",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8996,
                        "src": "8157:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8963_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8963_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 2959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8157:54:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2960,
                    "nodeType": "ExpressionStatement",
                    "src": "8157:54:3"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2963,
                        "name": "inputErc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2778,
                        "src": "8268:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2964,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "8288:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8288:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2966,
                          "name": "filledAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2892,
                          "src": "8300:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 2968,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8314:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8300:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2969,
                          "name": "filledAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2892,
                          "src": "8318:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 2971,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8332:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8318:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2962,
                      "name": "PreDepositExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2766,
                      "src": "8249:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8249:86:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2973,
                  "nodeType": "EmitStatement",
                  "src": "8244:91:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2981,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "8425:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8425:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2979,
                          "name": "wethBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2914,
                          "src": "8412:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2974,
                            "name": "_rariFundManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2667,
                            "src": "8379:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundManager_$2609",
                              "typeString": "contract RariFundManager"
                            }
                          },
                          "id": 2977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1976,
                          "src": "8379:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) payable external returns (bool)"
                          }
                        },
                        "id": 2978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8379:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_address_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) pure returns (function (address) payable external returns (bool))"
                        }
                      },
                      "id": 2980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8379:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$value",
                        "typeString": "function (address) payable external returns (bool)"
                      }
                    },
                    "id": 2983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8379:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2984,
                  "nodeType": "ExpressionStatement",
                  "src": "8379:57:3"
                }
              ]
            },
            "documentation": "@notice Exchanges and deposits funds to RariFund in exchange for RFT (via 0x).\nYou can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation.\nPlease note that you must approve RariFundProxy to transfer at least `inputAmount` unless you are inputting ETH.\nYou also must input at least enough ETH to cover the protocol fee (and enough to cover `orders` if you are inputting ETH).\n@dev We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n@param inputErc20Contract The ERC20 contract address of the token to be exchanged. Set to address(0) to input ETH.\n@param inputAmount The amount of tokens to be exchanged (including taker fees).\n@param orders The limit orders to be filled in ascending order of the price you pay.\n@param signatures The signatures for the orders.\n@param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).",
            "id": 2986,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchangeAndDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2778,
                  "name": "inputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "6125:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6125:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2780,
                  "name": "inputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "6153:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6153:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2783,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "6174:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 2781,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 5905,
                      "src": "6174:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$5905_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 2782,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6174:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$5905_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2786,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "6206:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2784,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "6206:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 2785,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6206:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2788,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "6233:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6233:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6124:138:3"
            },
            "returnParameters": {
              "id": 2790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6278:0:3"
            },
            "scope": 3277,
            "src": "6097:2346:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3159,
              "nodeType": "Block",
              "src": "9814:1730:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3002,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "9860:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9874:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9860:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e70757420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 3005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9877:38:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10ec4461035f01cadf610cb96994718d3fc3095642887636b626de36d0d74f78",
                          "typeString": "literal_string \"Input amount must be greater than 0.\""
                        },
                        "value": "Input amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10ec4461035f01cadf610cb96994718d3fc3095642887636b626de36d0d74f78",
                          "typeString": "literal_string \"Input amount must be greater than 0.\""
                        }
                      ],
                      "id": 3001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "9852:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9852:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3007,
                  "nodeType": "ExpressionStatement",
                  "src": "9852:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3009,
                          "name": "makerAssetFillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2998,
                          "src": "9934:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9957:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9934:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d616b657220617373657420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 3012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9960:44:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a580f6bd790216ace381cf3f0090194d2ae6d300a88d0a08248928b3a5d4b77",
                          "typeString": "literal_string \"Maker asset amount must be greater than 0.\""
                        },
                        "value": "Maker asset amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a580f6bd790216ace381cf3f0090194d2ae6d300a88d0a08248928b3a5d4b77",
                          "typeString": "literal_string \"Maker asset amount must be greater than 0.\""
                        }
                      ],
                      "id": 3008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "9926:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9926:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3014,
                  "nodeType": "ExpressionStatement",
                  "src": "9926:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3016,
                              "name": "orders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2993,
                              "src": "10023:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                                "typeString": "struct LibOrder.Order memory[] memory"
                              }
                            },
                            "id": 3017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10023:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10039:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10023:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3020,
                              "name": "signatures",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2996,
                              "src": "10044:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 3021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10044:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10064:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10044:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10023:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d75737420737570706c79206d6f7265207468616e2030206f726465727320616e64207369676e6174757265732e",
                        "id": 3025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10067:48:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41bffa4bdf9cdb851eec15b6ddde27e81ab7897d111d27840ec7533b7cf10ef3",
                          "typeString": "literal_string \"Must supply more than 0 orders and signatures.\""
                        },
                        "value": "Must supply more than 0 orders and signatures."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41bffa4bdf9cdb851eec15b6ddde27e81ab7897d111d27840ec7533b7cf10ef3",
                          "typeString": "literal_string \"Must supply more than 0 orders and signatures.\""
                        }
                      ],
                      "id": 3015,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "10015:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10015:101:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3027,
                  "nodeType": "ExpressionStatement",
                  "src": "10015:101:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3029,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2993,
                            "src": "10134:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 3030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10134:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3031,
                            "name": "signatures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2996,
                            "src": "10151:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10151:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10134:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c656e67746873206f6620616c6c206f726465727320616e64207369676e61747572657320617272617973206d75737420626520657175616c2e",
                        "id": 3034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10170:60:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c02afdb0391335f8b52c343a2a8054ff69fddb7e95173204f238a1cf2f5bb70",
                          "typeString": "literal_string \"Lengths of all orders and signatures arrays must be equal.\""
                        },
                        "value": "Lengths of all orders and signatures arrays must be equal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c02afdb0391335f8b52c343a2a8054ff69fddb7e95173204f238a1cf2f5bb70",
                          "typeString": "literal_string \"Lengths of all orders and signatures arrays must be equal.\""
                        }
                      ],
                      "id": 3028,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "10126:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10126:105:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3036,
                  "nodeType": "ExpressionStatement",
                  "src": "10126:105:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 3042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3038,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2665,
                          "src": "10249:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10285:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10277:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10277:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "10249:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e64206d616e6167657220636f6e7472616374206e6f74207365742e2054686973206d61792062652064756520746f20616e2075706772616465206f6620746869732070726f787920636f6e74726163742e",
                        "id": 3043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10289:86:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b83c7c00758395ed4d63ccdaa5904c335f9ad81195b61837435b99ce9fc2093f",
                          "typeString": "literal_string \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\""
                        },
                        "value": "Fund manager contract not set. This may be due to an upgrade of this proxy contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b83c7c00758395ed4d63ccdaa5904c335f9ad81195b61837435b99ce9fc2093f",
                          "typeString": "literal_string \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\""
                        }
                      ],
                      "id": 3037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "10241:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10241:135:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3045,
                  "nodeType": "ExpressionStatement",
                  "src": "10241:135:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3049,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "10450:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10450:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3051,
                        "name": "inputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "10462:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3046,
                        "name": "_rariFundManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2667,
                        "src": "10420:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RariFundManager_$2609",
                          "typeString": "contract RariFundManager"
                        }
                      },
                      "id": 3048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2225,
                      "src": "10420:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10420:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3053,
                  "nodeType": "ExpressionStatement",
                  "src": "10420:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3059,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "10548:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3054,
                            "name": "_weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2681,
                            "src": "10528:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEtherToken_$4858",
                              "typeString": "contract IEtherToken"
                            }
                          },
                          "id": 3057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4852,
                          "src": "10528:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$__$",
                            "typeString": "function () payable external"
                          }
                        },
                        "id": 3058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10528:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                          "typeString": "function (uint256) pure returns (function () payable external)"
                        }
                      },
                      "id": 3060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10528:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 3061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10528:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3062,
                  "nodeType": "ExpressionStatement",
                  "src": "10528:34:3"
                },
                {
                  "assignments": [
                    3067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3067,
                      "name": "filledAmounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "10615:31:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3065,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10615:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3066,
                        "length": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 3064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10623:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "10615:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3076,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3070,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "10700:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3071,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2996,
                        "src": "10708:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3072,
                        "name": "makerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "10720:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3073,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "10742:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10742:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3068,
                        "name": "ZeroExExchangeController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "10649:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$3895_$",
                          "typeString": "type(library ZeroExExchangeController)"
                        }
                      },
                      "id": 3069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketBuyOrdersFillOrKill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3894,
                      "src": "10649:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (struct LibOrder.Order memory[] memory,bytes memory[] memory,uint256,uint256) returns (uint256[2] memory)"
                      }
                    },
                    "id": 3075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10649:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10615:137:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3078,
                        "name": "outputErc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "10790:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3079,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "10811:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10811:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3081,
                          "name": "filledAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3067,
                          "src": "10823:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 3083,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10837:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10823:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3084,
                          "name": "filledAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3067,
                          "src": "10841:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 3086,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 3085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10855:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10841:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3077,
                      "name": "PostWithdrawalExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "10767:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 3087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10767:91:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3088,
                  "nodeType": "EmitStatement",
                  "src": "10762:96:3"
                },
                {
                  "assignments": [
                    3090
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3090,
                      "name": "wethBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "10899:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3089,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10899:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3097,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3094,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9470,
                            "src": "10945:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 3093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10937:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10937:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3091,
                        "name": "_weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2681,
                        "src": "10921:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEtherToken_$4858",
                          "typeString": "contract IEtherToken"
                        }
                      },
                      "id": 3092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4834,
                      "src": "10921:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10921:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10899:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3101,
                        "name": "wethBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3090,
                        "src": "10976:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3098,
                        "name": "_weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2681,
                        "src": "10961:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEtherToken_$4858",
                          "typeString": "contract IEtherToken"
                        }
                      },
                      "id": 3100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4857,
                      "src": "10961:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10961:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3103,
                  "nodeType": "ExpressionStatement",
                  "src": "10961:27:3"
                },
                {
                  "assignments": [
                    3105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3105,
                      "name": "outputToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "11032:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8963",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3104,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8963,
                        "src": "11032:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8963",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3109,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3107,
                        "name": "outputErc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "11060:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3106,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8963,
                      "src": "11053:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$8963_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11053:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8963",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11032:48:3"
                },
                {
                  "assignments": [
                    3111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3111,
                      "name": "outputTokenBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "11090:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11090:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3118,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3115,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9470,
                            "src": "11149:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 3114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11141:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11141:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3112,
                        "name": "outputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3105,
                        "src": "11119:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8963",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8908,
                      "src": "11119:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11119:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11090:65:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3119,
                      "name": "outputTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3111,
                      "src": "11169:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11190:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11169:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3130,
                  "nodeType": "IfStatement",
                  "src": "11165:84:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "11218:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11218:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3127,
                          "name": "outputTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3111,
                          "src": "11230:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3122,
                          "name": "outputToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3105,
                          "src": "11193:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8963",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 3124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8996,
                        "src": "11193:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8963_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8963_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 3128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11193:56:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3129,
                    "nodeType": "ExpressionStatement",
                    "src": "11193:56:3"
                  }
                },
                {
                  "assignments": [
                    3132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3132,
                      "name": "ethBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "11290:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11290:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3137,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3134,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9470,
                          "src": "11319:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                            "typeString": "contract RariFundProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                            "typeString": "contract RariFundProxy"
                          }
                        ],
                        "id": 3133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11311:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 3135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11311:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "11311:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11290:42:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3138,
                      "name": "ethBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "11355:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11368:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11355:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3158,
                  "nodeType": "IfStatement",
                  "src": "11351:187:3",
                  "trueBody": {
                    "id": 3157,
                    "nodeType": "Block",
                    "src": "11371:167:3",
                    "statements": [
                      {
                        "assignments": [
                          3142,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3142,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 3157,
                            "src": "11386:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3141,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "11386:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 3151,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 3149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11438:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3147,
                                "name": "ethBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3132,
                                "src": "11426:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3143,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9342,
                                    "src": "11404:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3144,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "11404:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 3145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "11404:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 3146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11404:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                              }
                            },
                            "id": 3148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11404:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 3150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11404:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11385:56:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3153,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3142,
                              "src": "11463:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4661696c656420746f207472616e736665722045544820746f206d73672e73656e6465722061667465722065786368616e67652e",
                              "id": 3154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11472:54:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0c323c447b818774bf7a9be177dc972f282a9474cbe8219a77658bdd7d0519d",
                                "typeString": "literal_string \"Failed to transfer ETH to msg.sender after exchange.\""
                              },
                              "value": "Failed to transfer ETH to msg.sender after exchange."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0c323c447b818774bf7a9be177dc972f282a9474cbe8219a77658bdd7d0519d",
                                "typeString": "literal_string \"Failed to transfer ETH to msg.sender after exchange.\""
                              }
                            ],
                            "id": 3152,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9345,
                              9346
                            ],
                            "referencedDeclaration": 9346,
                            "src": "11455:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11455:72:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3156,
                        "nodeType": "ExpressionStatement",
                        "src": "11455:72:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Withdraws funds from RariFund in exchange for RFT and exchanges to them to the desired currency (if no 0x orders are supplied, exchanges DAI, USDC, USDT, TUSD, and mUSD via mStable).\nYou can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation.\nPlease note that you must approve RariFundManager to burn of the necessary amount of RFT.\nYou also must input at least enough ETH to cover the protocol fees.\n@dev We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n@param inputAmount The amounts of tokens to be withdrawn and exchanged (including taker fees).\n@param outputErc20Contract The ERC20 contract address of the token to be outputted by the exchange. Set to address(0) to output ETH.\n@param orders The limit orders to be filled in ascending order of the price you pay.\n@param signatures The signatures for the orders.\n@param makerAssetFillAmount The amount of the maker assets to buy.",
            "id": 3160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAndExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2988,
                  "name": "inputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "9660:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9660:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2990,
                  "name": "outputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "9681:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9681:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2993,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "9710:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 2991,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 5905,
                      "src": "9710:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$5905_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 2992,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "9710:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$5905_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2996,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "9742:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2994,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "9742:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 2995,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "9742:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2998,
                  "name": "makerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "9769:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9769:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9659:139:3"
            },
            "returnParameters": {
              "id": 3000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9814:0:3"
            },
            "scope": 3277,
            "src": "9631:1913:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3183,
              "nodeType": "Block",
              "src": "11863:145:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "11881:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11881:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11893:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11881:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206465706f736974206d6f7265207468616e203020657468",
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11896:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b063b6e19f2d2bb594343a3e489df4f1a7c3f38284aa15e06edbe91b12cb9fe5",
                          "typeString": "literal_string \"Must deposit more than 0 eth\""
                        },
                        "value": "Must deposit more than 0 eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b063b6e19f2d2bb594343a3e489df4f1a7c3f38284aa15e06edbe91b12cb9fe5",
                          "typeString": "literal_string \"Must deposit more than 0 eth\""
                        }
                      ],
                      "id": 3165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "11873:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11873:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3172,
                  "nodeType": "ExpressionStatement",
                  "src": "11873:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3179,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            7034
                          ],
                          "referencedDeclaration": 7034,
                          "src": "11988:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11988:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3176,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "11977:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11977:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3173,
                            "name": "_rariFundManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2667,
                            "src": "11944:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundManager_$2609",
                              "typeString": "contract RariFundManager"
                            }
                          },
                          "id": 3174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1976,
                          "src": "11944:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) payable external returns (bool)"
                          }
                        },
                        "id": 3175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11944:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_address_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) pure returns (function (address) payable external returns (bool))"
                        }
                      },
                      "id": 3178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11944:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$value",
                        "typeString": "function (address) payable external returns (bool)"
                      }
                    },
                    "id": 3181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11944:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3164,
                  "id": 3182,
                  "nodeType": "Return",
                  "src": "11937:64:3"
                }
              ]
            },
            "documentation": "@notice Deposits funds to RariFund in exchange for REFT (with GSN support).\nYou may only deposit ETH.\nPlease note that you must approve RariFundProxy to transfer at least `amount`.\n@return Boolean indicating success.",
            "id": 3184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11828:2:3"
            },
            "returnParameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3163,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "11857:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11857:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11856:6:3"
            },
            "scope": 3277,
            "src": "11812:196:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3255,
              "nodeType": "Block",
              "src": "12455:630:3",
              "statements": [
                {
                  "assignments": [
                    3210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3210,
                      "name": "blob",
                      "nodeType": "VariableDeclaration",
                      "scope": 3255,
                      "src": "12465:17:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3209,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12465:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3226,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3213,
                        "name": "relay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3186,
                        "src": "12515:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3214,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3188,
                        "src": "12534:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3215,
                        "name": "encodedFunction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3190,
                        "src": "12552:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3216,
                        "name": "transactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3192,
                        "src": "12581:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3217,
                        "name": "gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3194,
                        "src": "12609:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3218,
                        "name": "gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3196,
                        "src": "12631:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3219,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3198,
                        "src": "12653:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3220,
                          "name": "getHubAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6954,
                          "src": "12704:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12704:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3223,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9470,
                            "src": "12780:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 3222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12772:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12772:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3211,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9329,
                        "src": "12485:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12485:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 3225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12485:353:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12465:373:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3233,
                          "name": "approvalData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3200,
                          "src": "12901:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3228,
                                  "name": "blob",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3210,
                                  "src": "12862:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 3227,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9336,
                                "src": "12852:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 3229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12852:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 3230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "toEthSignedMessageHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7839,
                            "src": "12852:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                              "typeString": "function (bytes32) pure returns (bytes32)"
                            }
                          },
                          "id": 3231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12852:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 3232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recover",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7823,
                        "src": "12852:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes memory) pure returns (address)"
                        }
                      },
                      "id": 3234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12852:62:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3235,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "12918:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12852:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3241,
                  "nodeType": "IfStatement",
                  "src": "12848:117:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12963:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3237,
                        "name": "_rejectRelayedCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7162,
                        "src": "12944:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256,bytes memory)"
                        }
                      },
                      "id": 3239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12944:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(uint256,bytes memory)"
                      }
                    },
                    "functionReturnParameters": 3208,
                    "id": 3240,
                    "nodeType": "Return",
                    "src": "12937:28:3"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3242,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "12979:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13008:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13000:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 3245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13000:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12979:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3251,
                  "nodeType": "IfStatement",
                  "src": "12975:65:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 3248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13038:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 3247,
                        "name": "_rejectRelayedCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7162,
                        "src": "13019:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256,bytes memory)"
                        }
                      },
                      "id": 3249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13019:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(uint256,bytes memory)"
                      }
                    },
                    "functionReturnParameters": 3208,
                    "id": 3250,
                    "nodeType": "Return",
                    "src": "13012:28:3"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3252,
                      "name": "_approveRelayedCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7132,
                        7146
                      ],
                      "referencedDeclaration": 7132,
                      "src": "13057:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (uint256,bytes memory)"
                      }
                    },
                    "id": 3253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13057:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(uint256,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 3208,
                  "id": 3254,
                  "nodeType": "Return",
                  "src": "13050:28:3"
                }
              ]
            },
            "documentation": "@dev Ensures that only transactions with a trusted signature can be relayed through the GSN.",
            "id": 3256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3186,
                  "name": "relay",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12166:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12166:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3188,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12189:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12189:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3190,
                  "name": "encodedFunction",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12211:30:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3189,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12211:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3192,
                  "name": "transactionFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12251:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12251:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3194,
                  "name": "gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12283:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12283:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3196,
                  "name": "gasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12309:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12309:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3198,
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12335:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12335:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3200,
                  "name": "approvalData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12358:27:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3199,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12358:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3202,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12395:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12395:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12156:252:3"
            },
            "returnParameters": {
              "id": 3208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3205,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12432:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12432:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3207,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12441:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3206,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12441:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12431:23:3"
            },
            "scope": 3277,
            "src": "12130:955:3",
            "stateMutability": "view",
            "superFunction": 7536,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3263,
              "nodeType": "Block",
              "src": "13249:64:3",
              "statements": []
            },
            "documentation": "@dev Code executed before processing a call relayed through the GSN.",
            "id": 3264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3264,
                  "src": "13208:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3257,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13208:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13207:14:3"
            },
            "returnParameters": {
              "id": 3262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3261,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3264,
                  "src": "13240:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3260,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13240:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13239:9:3"
            },
            "scope": 3277,
            "src": "13183:130:3",
            "stateMutability": "nonpayable",
            "superFunction": 7081,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3275,
              "nodeType": "Block",
              "src": "13483:64:3",
              "statements": []
            },
            "documentation": "@dev Code executed after processing a call relayed through the GSN.",
            "id": 3276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3266,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3276,
                  "src": "13436:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3265,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13436:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3268,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3276,
                  "src": "13450:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3267,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13450:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3270,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3276,
                  "src": "13456:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13456:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3272,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3276,
                  "src": "13465:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3271,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13465:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13435:38:3"
            },
            "returnParameters": {
              "id": 3274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13483:0:3"
            },
            "scope": 3277,
            "src": "13410:137:3",
            "stateMutability": "nonpayable",
            "superFunction": 7120,
            "visibility": "internal"
          }
        ],
        "scope": 3278,
        "src": "1663:11886:3"
      }
    ],
    "src": "540:13010:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundProxy.sol",
    "exportedSymbols": {
      "RariFundProxy": [
        3277
      ]
    },
    "id": 3278,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2611,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "540:23:3"
      },
      {
        "id": 2612,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "564:33:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "id": 2613,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 8202,
        "src": "599:78:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/drafts/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/drafts/SignedSafeMath.sol",
        "id": 2614,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 8015,
        "src": "678:86:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 2615,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 8326,
        "src": "765:82:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
        "id": 2616,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 8964,
        "src": "848:83:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
        "id": 2617,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 9184,
        "src": "932:86:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2618,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 8846,
        "src": "1019:90:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/GSN/GSNRecipient.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/GSN/GSNRecipient.sol",
        "id": 2619,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 7252,
        "src": "1110:81:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
        "id": 2620,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 7841,
        "src": "1192:83:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 2621,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 5971,
        "src": "1277:64:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol",
        "file": "@0x/contracts-erc20/contracts/src/interfaces/IEtherToken.sol",
        "id": 2622,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 4859,
        "src": "1342:70:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/lib/exchanges/ZeroExExchangeController.sol",
        "file": "./lib/exchanges/ZeroExExchangeController.sol",
        "id": 2623,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 3896,
        "src": "1414:54:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/richter/Projects/Cloud/rari-work/rari-eth-contracts/contracts/RariFundManager.sol",
        "file": "./RariFundManager.sol",
        "id": 2624,
        "nodeType": "ImportDirective",
        "scope": 3278,
        "sourceUnit": 2610,
        "src": "1469:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2625,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8325,
              "src": "1689:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$8325",
                "typeString": "contract Ownable"
              }
            },
            "id": 2626,
            "nodeType": "InheritanceSpecifier",
            "src": "1689:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2627,
              "name": "GSNRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7251,
              "src": "1698:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GSNRecipient_$7251",
                "typeString": "contract GSNRecipient"
              }
            },
            "id": 2628,
            "nodeType": "InheritanceSpecifier",
            "src": "1698:12:3"
          }
        ],
        "contractDependencies": [
          6893,
          7251,
          7555,
          8325,
          9327
        ],
        "contractKind": "contract",
        "documentation": "@title RariFundProxy\n@dev This contract faciliates deposits to RariFundManager from exchanges and withdrawals from RariFundManager for exchanges.",
        "fullyImplemented": true,
        "id": 3277,
        "linearizedBaseContracts": [
          3277,
          7251,
          8325,
          6893,
          7555,
          9327
        ],
        "name": "RariFundProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2631,
            "libraryName": {
              "contractScope": null,
              "id": 2629,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8201,
              "src": "1723:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$8201",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1717:27:3",
            "typeName": {
              "id": 2630,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1736:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2634,
            "libraryName": {
              "contractScope": null,
              "id": 2632,
              "name": "SignedSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8014,
              "src": "1755:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignedSafeMath_$8014",
                "typeString": "library SignedSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1749:32:3",
            "typeName": {
              "id": 2633,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "1774:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 2637,
            "libraryName": {
              "contractScope": null,
              "id": 2635,
              "name": "ECDSA",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7840,
              "src": "1792:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECDSA_$7840",
                "typeString": "library ECDSA"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1786:24:3",
            "typeName": {
              "id": 2636,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1802:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 2640,
            "libraryName": {
              "contractScope": null,
              "id": 2638,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9183,
              "src": "1821:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$9183",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1815:27:3",
            "typeName": {
              "contractScope": null,
              "id": 2639,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8963,
              "src": "1835:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8963",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 2643,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "1952:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2641,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1952:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "312e302e30",
              "id": 2642,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1985:7:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                "typeString": "literal_string \"1.0.0\""
              },
              "value": "1.0.0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2647,
            "name": "_erc20Contracts",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2093:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2646,
              "keyType": {
                "id": 2644,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2101:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "2093:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 2645,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2111:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2662,
              "nodeType": "Block",
              "src": "2264:82:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2653,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "2293:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2293:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2650,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8325,
                        "src": "2274:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$8325_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 2652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8236,
                      "src": "2274:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2274:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2657,
                        "name": "GSNRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7251,
                        "src": "2314:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GSNRecipient_$7251_$",
                          "typeString": "type(contract GSNRecipient)"
                        }
                      },
                      "id": 2659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6921,
                      "src": "2314:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2314:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2661,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:25:3"
                }
              ]
            },
            "documentation": "@dev Constructor that sets supported ERC20 token contract addresses.",
            "id": 2663,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2254:2:3"
            },
            "returnParameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2264:0:3"
            },
            "scope": 3277,
            "src": "2242:104:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2665,
            "name": "_rariFundManagerContract",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2412:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2664,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2412:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2667,
            "name": "_rariFundManager",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2528:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RariFundManager_$2609",
              "typeString": "contract RariFundManager"
            },
            "typeName": {
              "contractScope": null,
              "id": 2666,
              "name": "RariFundManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2609,
              "src": "2528:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RariFundManager_$2609",
                "typeString": "contract RariFundManager"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2669,
            "name": "_gsnTrustedSigner",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2638:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2668,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2638:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the RariFundManager of the RariFundProxy is set.",
            "id": 2673,
            "name": "FundManagerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2671,
                  "indexed": false,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2673,
                  "src": "2789:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2788:21:3"
            },
            "src": "2768:42:3"
          },
          {
            "constant": true,
            "id": 2676,
            "name": "WETH_CONTRACT",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2817:83:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2674,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2817:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 2675,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2858:42:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2681,
            "name": "_weth",
            "nodeType": "VariableDeclaration",
            "scope": 3277,
            "src": "2908:63:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEtherToken_$4858",
              "typeString": "contract IEtherToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 2677,
              "name": "IEtherToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4858,
              "src": "2908:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEtherToken_$4858",
                "typeString": "contract IEtherToken"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 2679,
                  "name": "WETH_CONTRACT",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2676,
                  "src": "2957:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 2678,
                "name": "IEtherToken",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4858,
                "src": "2945:11:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IEtherToken_$4858_$",
                  "typeString": "type(contract IEtherToken)"
                }
              },
              "id": 2680,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2945:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEtherToken_$4858",
                "typeString": "contract IEtherToken"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2731,
              "nodeType": "Block",
              "src": "3213:453:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2688,
                      "name": "_rariFundManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2665,
                      "src": "3336:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3372:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3364:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3364:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3336:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2700,
                  "nodeType": "IfStatement",
                  "src": "3332:86:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2696,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2665,
                          "src": "3390:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3416:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2693,
                          "name": "_weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2681,
                          "src": "3376:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEtherToken_$4858",
                            "typeString": "contract IEtherToken"
                          }
                        },
                        "id": 2695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4822,
                        "src": "3376:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 2698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3376:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2699,
                    "nodeType": "ExpressionStatement",
                    "src": "3376:42:3"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2701,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2683,
                      "src": "3432:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3455:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3447:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3447:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3432:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2716,
                  "nodeType": "IfStatement",
                  "src": "3428:70:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2709,
                          "name": "newContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2683,
                          "src": "3473:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "3494:2:3",
                              "subExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3495:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            ],
                            "id": 2710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3486:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 2713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3486:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2706,
                          "name": "_weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2681,
                          "src": "3459:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEtherToken_$4858",
                            "typeString": "contract IEtherToken"
                          }
                        },
                        "id": 2708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4822,
                        "src": "3459:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 2714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3459:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2715,
                    "nodeType": "ExpressionStatement",
                    "src": "3459:39:3"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2717,
                      "name": "_rariFundManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2665,
                      "src": "3509:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2718,
                      "name": "newContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2683,
                      "src": "3536:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3509:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2720,
                  "nodeType": "ExpressionStatement",
                  "src": "3509:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2721,
                      "name": "_rariFundManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2667,
                      "src": "3557:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RariFundManager_$2609",
                        "typeString": "contract RariFundManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2723,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2665,
                          "src": "3592:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 2722,
                        "name": "RariFundManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2609,
                        "src": "3576:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RariFundManager_$2609_$",
                          "typeString": "type(contract RariFundManager)"
                        }
                      },
                      "id": 2724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3576:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RariFundManager_$2609",
                        "typeString": "contract RariFundManager"
                      }
                    },
                    "src": "3557:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RariFundManager_$2609",
                      "typeString": "contract RariFundManager"
                    }
                  },
                  "id": 2726,
                  "nodeType": "ExpressionStatement",
                  "src": "3557:60:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2728,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2683,
                        "src": "3647:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2727,
                      "name": "FundManagerSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2673,
                      "src": "3632:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3632:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2730,
                  "nodeType": "EmitStatement",
                  "src": "3627:32:3"
                }
              ]
            },
            "documentation": "@dev Sets or upgrades the RariFundManager of the RariFundProxy.\n@param newContract The address of the new RariFundManager contract.",
            "id": 2732,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2686,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2685,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8254,
                  "src": "3203:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3203:9:3"
              }
            ],
            "name": "setFundManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "3165:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3165:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3164:29:3"
            },
            "returnParameters": {
              "id": 2687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3213:0:3"
            },
            "scope": 3277,
            "src": "3141:525:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the trusted GSN signer of the RariFundProxy is set.",
            "id": 2736,
            "name": "GsnTrustedSignerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2734,
                  "indexed": false,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2736,
                  "src": "3797:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3796:20:3"
            },
            "src": "3771:46:3"
          },
          {
            "body": {
              "id": 2751,
              "nodeType": "Block",
              "src": "4058:93:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2743,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "4068:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2744,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2738,
                      "src": "4088:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4068:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2746,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:30:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2748,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2738,
                        "src": "4133:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2747,
                      "name": "GsnTrustedSignerSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2736,
                      "src": "4113:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4113:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2750,
                  "nodeType": "EmitStatement",
                  "src": "4108:36:3"
                }
              ]
            },
            "documentation": "@dev Sets or upgrades the trusted GSN signer of the RariFundProxy.\n@param newAddress The Ethereum address of the new trusted GSN signer.",
            "id": 2752,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2741,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2740,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8254,
                  "src": "4048:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4048:9:3"
              }
            ],
            "name": "setGsnTrustedSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2738,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2752,
                  "src": "4019:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4018:20:3"
            },
            "returnParameters": {
              "id": 2742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4058:0:3"
            },
            "scope": 3277,
            "src": "3990:161:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2755,
              "nodeType": "Block",
              "src": "4294:3:3",
              "statements": []
            },
            "documentation": "@dev Payable fallback function called by 0x exchange to refund unspent protocol fee.",
            "id": 2756,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4274:2:3"
            },
            "returnParameters": {
              "id": 2754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4294:0:3"
            },
            "scope": 3277,
            "src": "4265:32:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when funds have been exchanged before being deposited via RariFundManager.\nIf exchanging from ETH, `inputErc20Contract` = address(0).",
            "id": 2766,
            "name": "PreDepositExchange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2758,
                  "indexed": true,
                  "name": "inputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "4505:34:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4505:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2760,
                  "indexed": true,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "4541:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4541:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2762,
                  "indexed": false,
                  "name": "makerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "4564:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4564:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2764,
                  "indexed": false,
                  "name": "depositAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "4596:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4596:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4504:114:3"
            },
            "src": "4480:139:3"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when funds have been exchanged after being withdrawn via RariFundManager.\nIf exchanging from ETH, `outputErc20Contract` = address(0).",
            "id": 2776,
            "name": "PostWithdrawalExchange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2768,
                  "indexed": true,
                  "name": "outputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "4831:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4831:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2770,
                  "indexed": true,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "4868:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4868:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2772,
                  "indexed": false,
                  "name": "withdrawalAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "4891:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4891:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2774,
                  "indexed": false,
                  "name": "takerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "4917:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4917:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4830:118:3"
            },
            "src": "4802:147:3"
          },
          {
            "body": {
              "id": 2985,
              "nodeType": "Block",
              "src": "6278:2165:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 2796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2792,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2665,
                          "src": "6324:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6360:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6352:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6352:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6324:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e64206d616e6167657220636f6e7472616374206e6f74207365742e2054686973206d61792062652064756520746f20616e2075706772616465206f6620746869732070726f787920636f6e74726163742e",
                        "id": 2797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6364:86:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b83c7c00758395ed4d63ccdaa5904c335f9ad81195b61837435b99ce9fc2093f",
                          "typeString": "literal_string \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\""
                        },
                        "value": "Fund manager contract not set. This may be due to an upgrade of this proxy contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b83c7c00758395ed4d63ccdaa5904c335f9ad81195b61837435b99ce9fc2093f",
                          "typeString": "literal_string \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\""
                        }
                      ],
                      "id": 2791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6316:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6316:135:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2799,
                  "nodeType": "ExpressionStatement",
                  "src": "6316:135:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2801,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2780,
                          "src": "6469:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6483:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6469:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e70757420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 2804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6486:38:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10ec4461035f01cadf610cb96994718d3fc3095642887636b626de36d0d74f78",
                          "typeString": "literal_string \"Input amount must be greater than 0.\""
                        },
                        "value": "Input amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10ec4461035f01cadf610cb96994718d3fc3095642887636b626de36d0d74f78",
                          "typeString": "literal_string \"Input amount must be greater than 0.\""
                        }
                      ],
                      "id": 2800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6461:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6461:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2806,
                  "nodeType": "ExpressionStatement",
                  "src": "6461:64:3"
                },
                {
                  "assignments": [
                    2808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2808,
                      "name": "outputErc20Contract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "6535:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2807,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6535:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2810,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                    "id": 2809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6565:42:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6535:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2812,
                          "name": "inputErc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2778,
                          "src": "6625:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2813,
                          "name": "outputErc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2808,
                          "src": "6647:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6625:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e70757420616e64206f75747075742063757272656e636965732063616e6e6f74206265207468652073616d652e",
                        "id": 2815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6668:49:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c88618326a63336fe0e08f0635173c076832f8f5a6f1a006cde4ac0ef2f2ad12",
                          "typeString": "literal_string \"Input and output currencies cannot be the same.\""
                        },
                        "value": "Input and output currencies cannot be the same."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c88618326a63336fe0e08f0635173c076832f8f5a6f1a006cde4ac0ef2f2ad12",
                          "typeString": "literal_string \"Input and output currencies cannot be the same.\""
                        }
                      ],
                      "id": 2811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6617:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6617:101:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2817,
                  "nodeType": "ExpressionStatement",
                  "src": "6617:101:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2819,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2783,
                            "src": "6736:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 2820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6736:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6752:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6736:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f726465727320617272617920697320656d7074792e",
                        "id": 2823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6755:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6190cde5dc607c506a1968723067856cead5a5fc477117fab3dac4cf939442e4",
                          "typeString": "literal_string \"Orders array is empty.\""
                        },
                        "value": "Orders array is empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6190cde5dc607c506a1968723067856cead5a5fc477117fab3dac4cf939442e4",
                          "typeString": "literal_string \"Orders array is empty.\""
                        }
                      ],
                      "id": 2818,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6728:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6728:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2825,
                  "nodeType": "ExpressionStatement",
                  "src": "6728:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2827,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2783,
                            "src": "6798:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 2828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6798:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2829,
                            "name": "signatures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2786,
                            "src": "6815:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "id": 2830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6815:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6798:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c656e677468206f66206f726465727320616e64207369676e61747572657320617272617973206d75737420626520657175616c2e",
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6834:55:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55eb73697ae411cbdcd68aa304c60679b6b21ab3e72c1f9aaf1dc8519d061213",
                          "typeString": "literal_string \"Length of orders and signatures arrays must be equal.\""
                        },
                        "value": "Length of orders and signatures arrays must be equal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55eb73697ae411cbdcd68aa304c60679b6b21ab3e72c1f9aaf1dc8519d061213",
                          "typeString": "literal_string \"Length of orders and signatures arrays must be equal.\""
                        }
                      ],
                      "id": 2826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6790:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6790:100:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "6790:100:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2836,
                          "name": "takerAssetFillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2788,
                          "src": "6908:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6931:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6908:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54616b65722061737365742066696c6c20616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 2839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6934:49:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9c0a22ccc4fce3408666f0d24bb0b9b76616c444827c5a4a278ea8e5e349935",
                          "typeString": "literal_string \"Taker asset fill amount must be greater than 0.\""
                        },
                        "value": "Taker asset fill amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9c0a22ccc4fce3408666f0d24bb0b9b76616c444827c5a4a278ea8e5e349935",
                          "typeString": "literal_string \"Taker asset fill amount must be greater than 0.\""
                        }
                      ],
                      "id": 2835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "6900:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6900:84:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2841,
                  "nodeType": "ExpressionStatement",
                  "src": "6900:84:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2842,
                      "name": "inputErc20Contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2778,
                      "src": "6999:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7029:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7021:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7021:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6999:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2869,
                    "nodeType": "Block",
                    "src": "7122:241:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2861,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9342,
                                "src": "7254:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7254:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2864,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9470,
                                  "src": "7274:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                                    "typeString": "contract RariFundProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                                    "typeString": "contract RariFundProxy"
                                  }
                                ],
                                "id": 2863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7266:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7266:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2866,
                              "name": "inputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2780,
                              "src": "7281:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2858,
                                  "name": "inputErc20Contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2778,
                                  "src": "7217:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2857,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8963,
                                "src": "7210:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$8963_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7210:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8963",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9021,
                            "src": "7210:43:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8963_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8963_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7210:83:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2868,
                        "nodeType": "ExpressionStatement",
                        "src": "7210:83:3"
                      }
                    ]
                  },
                  "id": 2870,
                  "nodeType": "IfStatement",
                  "src": "6995:368:3",
                  "trueBody": {
                    "id": 2856,
                    "nodeType": "Block",
                    "src": "7033:83:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2852,
                                "name": "inputAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2780,
                                "src": "7091:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2847,
                                  "name": "_weth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2681,
                                  "src": "7071:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IEtherToken_$4858",
                                    "typeString": "contract IEtherToken"
                                  }
                                },
                                "id": 2850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4852,
                                "src": "7071:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 2851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7071:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                                "typeString": "function (uint256) pure returns (function () payable external)"
                              }
                            },
                            "id": 2853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7071:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 2854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7071:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2855,
                        "nodeType": "ExpressionStatement",
                        "src": "7071:34:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2871,
                      "name": "inputAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2780,
                      "src": "7416:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2874,
                          "name": "inputErc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2778,
                          "src": "7465:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2872,
                          "name": "ZeroExExchangeController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "7430:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$3895_$",
                            "typeString": "type(library ZeroExExchangeController)"
                          }
                        },
                        "id": 2873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3714,
                        "src": "7430:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 2875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7430:54:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7416:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2887,
                  "nodeType": "IfStatement",
                  "src": "7412:139:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2880,
                          "name": "inputErc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2778,
                          "src": "7519:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "7547:2:3",
                              "subExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7548:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_minus_1_by_1",
                                "typeString": "int_const -1"
                              }
                            ],
                            "id": 2881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7539:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7539:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2877,
                          "name": "ZeroExExchangeController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "7486:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$3895_$",
                            "typeString": "type(library ZeroExExchangeController)"
                          }
                        },
                        "id": 2879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3770,
                        "src": "7486:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 2885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7486:65:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2886,
                    "nodeType": "ExpressionStatement",
                    "src": "7486:65:3"
                  }
                },
                {
                  "assignments": [
                    2892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2892,
                      "name": "filledAmounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "7561:31:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2890,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7561:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2891,
                        "length": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 2889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7569:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "7561:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2912,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2895,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2783,
                        "src": "7647:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2896,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2786,
                        "src": "7655:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2897,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2788,
                        "src": "7667:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2898,
                            "name": "inputErc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2778,
                            "src": "7689:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7719:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7711:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7711:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7689:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2908,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "7753:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7753:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "7689:73:3",
                        "trueExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2906,
                              "name": "inputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2780,
                              "src": "7738:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2903,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9342,
                                "src": "7724:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7724:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8057,
                            "src": "7724:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7724:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2893,
                        "name": "ZeroExExchangeController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "7595:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$3895_$",
                          "typeString": "type(library ZeroExExchangeController)"
                        }
                      },
                      "id": 2894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketSellOrdersFillOrKill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3832,
                      "src": "7595:51:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (struct LibOrder.Order memory[] memory,bytes memory[] memory,uint256,uint256) returns (uint256[2] memory)"
                      }
                    },
                    "id": 2911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7595:168:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7561:202:3"
                },
                {
                  "assignments": [
                    2914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2914,
                      "name": "wethBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "7807:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2913,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7807:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2921,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2918,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9470,
                            "src": "7853:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 2917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7845:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7845:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2915,
                        "name": "_weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2681,
                        "src": "7829:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEtherToken_$4858",
                          "typeString": "contract IEtherToken"
                        }
                      },
                      "id": 2916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4834,
                      "src": "7829:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7829:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7807:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2923,
                          "name": "wethBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2914,
                          "src": "7877:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7891:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7877:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2057455448206f75747075747465642e",
                        "id": 2926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7894:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf515bb2b0019479e053ca5197013d1441ee886ea3b414302745edc1d7ff2e6a",
                          "typeString": "literal_string \"No WETH outputted.\""
                        },
                        "value": "No WETH outputted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf515bb2b0019479e053ca5197013d1441ee886ea3b414302745edc1d7ff2e6a",
                          "typeString": "literal_string \"No WETH outputted.\""
                        }
                      ],
                      "id": 2922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "7869:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7869:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2928,
                  "nodeType": "ExpressionStatement",
                  "src": "7869:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2932,
                        "name": "wethBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2914,
                        "src": "7940:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2929,
                        "name": "_weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2681,
                        "src": "7925:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEtherToken_$4858",
                          "typeString": "contract IEtherToken"
                        }
                      },
                      "id": 2931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4857,
                      "src": "7925:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7925:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2934,
                  "nodeType": "ExpressionStatement",
                  "src": "7925:27:3"
                },
                {
                  "assignments": [
                    2936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2936,
                      "name": "inputToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "8001:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8963",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2935,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8963,
                        "src": "8001:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8963",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2940,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2938,
                        "name": "inputErc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2778,
                        "src": "8028:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2937,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8963,
                      "src": "8021:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$8963_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8021:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8963",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8001:46:3"
                },
                {
                  "assignments": [
                    2942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2942,
                      "name": "inputTokenBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "8057:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2941,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8057:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2949,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2946,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9470,
                            "src": "8114:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 2945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8106:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8106:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2943,
                        "name": "inputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2936,
                        "src": "8085:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8963",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8908,
                      "src": "8085:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8085:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8057:63:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2950,
                      "name": "inputTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2942,
                      "src": "8134:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8154:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8134:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2961,
                  "nodeType": "IfStatement",
                  "src": "8130:81:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2956,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "8181:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8181:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2958,
                          "name": "inputTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2942,
                          "src": "8193:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2953,
                          "name": "inputToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2936,
                          "src": "8157:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8963",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8996,
                        "src": "8157:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8963_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8963_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 2959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8157:54:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2960,
                    "nodeType": "ExpressionStatement",
                    "src": "8157:54:3"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2963,
                        "name": "inputErc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2778,
                        "src": "8268:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2964,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "8288:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8288:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2966,
                          "name": "filledAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2892,
                          "src": "8300:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 2968,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8314:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8300:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2969,
                          "name": "filledAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2892,
                          "src": "8318:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 2971,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8332:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8318:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2962,
                      "name": "PreDepositExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2766,
                      "src": "8249:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8249:86:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2973,
                  "nodeType": "EmitStatement",
                  "src": "8244:91:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2981,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "8425:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8425:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2979,
                          "name": "wethBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2914,
                          "src": "8412:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2974,
                            "name": "_rariFundManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2667,
                            "src": "8379:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundManager_$2609",
                              "typeString": "contract RariFundManager"
                            }
                          },
                          "id": 2977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1976,
                          "src": "8379:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) payable external returns (bool)"
                          }
                        },
                        "id": 2978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8379:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_address_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) pure returns (function (address) payable external returns (bool))"
                        }
                      },
                      "id": 2980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8379:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$value",
                        "typeString": "function (address) payable external returns (bool)"
                      }
                    },
                    "id": 2983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8379:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2984,
                  "nodeType": "ExpressionStatement",
                  "src": "8379:57:3"
                }
              ]
            },
            "documentation": "@notice Exchanges and deposits funds to RariFund in exchange for RFT (via 0x).\nYou can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation.\nPlease note that you must approve RariFundProxy to transfer at least `inputAmount` unless you are inputting ETH.\nYou also must input at least enough ETH to cover the protocol fee (and enough to cover `orders` if you are inputting ETH).\n@dev We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n@param inputErc20Contract The ERC20 contract address of the token to be exchanged. Set to address(0) to input ETH.\n@param inputAmount The amount of tokens to be exchanged (including taker fees).\n@param orders The limit orders to be filled in ascending order of the price you pay.\n@param signatures The signatures for the orders.\n@param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).",
            "id": 2986,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchangeAndDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2778,
                  "name": "inputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "6125:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6125:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2780,
                  "name": "inputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "6153:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6153:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2783,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "6174:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 2781,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 5905,
                      "src": "6174:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$5905_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 2782,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6174:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$5905_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2786,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "6206:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2784,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "6206:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 2785,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6206:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2788,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "6233:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6233:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6124:138:3"
            },
            "returnParameters": {
              "id": 2790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6278:0:3"
            },
            "scope": 3277,
            "src": "6097:2346:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3159,
              "nodeType": "Block",
              "src": "9814:1730:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3002,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "9860:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9874:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9860:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e70757420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 3005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9877:38:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10ec4461035f01cadf610cb96994718d3fc3095642887636b626de36d0d74f78",
                          "typeString": "literal_string \"Input amount must be greater than 0.\""
                        },
                        "value": "Input amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10ec4461035f01cadf610cb96994718d3fc3095642887636b626de36d0d74f78",
                          "typeString": "literal_string \"Input amount must be greater than 0.\""
                        }
                      ],
                      "id": 3001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "9852:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9852:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3007,
                  "nodeType": "ExpressionStatement",
                  "src": "9852:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3009,
                          "name": "makerAssetFillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2998,
                          "src": "9934:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9957:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9934:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d616b657220617373657420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 3012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9960:44:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a580f6bd790216ace381cf3f0090194d2ae6d300a88d0a08248928b3a5d4b77",
                          "typeString": "literal_string \"Maker asset amount must be greater than 0.\""
                        },
                        "value": "Maker asset amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a580f6bd790216ace381cf3f0090194d2ae6d300a88d0a08248928b3a5d4b77",
                          "typeString": "literal_string \"Maker asset amount must be greater than 0.\""
                        }
                      ],
                      "id": 3008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "9926:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9926:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3014,
                  "nodeType": "ExpressionStatement",
                  "src": "9926:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3016,
                              "name": "orders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2993,
                              "src": "10023:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                                "typeString": "struct LibOrder.Order memory[] memory"
                              }
                            },
                            "id": 3017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10023:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10039:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10023:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3020,
                              "name": "signatures",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2996,
                              "src": "10044:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 3021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10044:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10064:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10044:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10023:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d75737420737570706c79206d6f7265207468616e2030206f726465727320616e64207369676e6174757265732e",
                        "id": 3025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10067:48:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41bffa4bdf9cdb851eec15b6ddde27e81ab7897d111d27840ec7533b7cf10ef3",
                          "typeString": "literal_string \"Must supply more than 0 orders and signatures.\""
                        },
                        "value": "Must supply more than 0 orders and signatures."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41bffa4bdf9cdb851eec15b6ddde27e81ab7897d111d27840ec7533b7cf10ef3",
                          "typeString": "literal_string \"Must supply more than 0 orders and signatures.\""
                        }
                      ],
                      "id": 3015,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "10015:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10015:101:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3027,
                  "nodeType": "ExpressionStatement",
                  "src": "10015:101:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3029,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2993,
                            "src": "10134:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 3030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10134:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3031,
                            "name": "signatures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2996,
                            "src": "10151:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10151:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10134:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c656e67746873206f6620616c6c206f726465727320616e64207369676e61747572657320617272617973206d75737420626520657175616c2e",
                        "id": 3034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10170:60:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c02afdb0391335f8b52c343a2a8054ff69fddb7e95173204f238a1cf2f5bb70",
                          "typeString": "literal_string \"Lengths of all orders and signatures arrays must be equal.\""
                        },
                        "value": "Lengths of all orders and signatures arrays must be equal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c02afdb0391335f8b52c343a2a8054ff69fddb7e95173204f238a1cf2f5bb70",
                          "typeString": "literal_string \"Lengths of all orders and signatures arrays must be equal.\""
                        }
                      ],
                      "id": 3028,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "10126:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10126:105:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3036,
                  "nodeType": "ExpressionStatement",
                  "src": "10126:105:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 3042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3038,
                          "name": "_rariFundManagerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2665,
                          "src": "10249:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10285:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10277:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10277:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "10249:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e64206d616e6167657220636f6e7472616374206e6f74207365742e2054686973206d61792062652064756520746f20616e2075706772616465206f6620746869732070726f787920636f6e74726163742e",
                        "id": 3043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10289:86:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b83c7c00758395ed4d63ccdaa5904c335f9ad81195b61837435b99ce9fc2093f",
                          "typeString": "literal_string \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\""
                        },
                        "value": "Fund manager contract not set. This may be due to an upgrade of this proxy contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b83c7c00758395ed4d63ccdaa5904c335f9ad81195b61837435b99ce9fc2093f",
                          "typeString": "literal_string \"Fund manager contract not set. This may be due to an upgrade of this proxy contract.\""
                        }
                      ],
                      "id": 3037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "10241:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10241:135:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3045,
                  "nodeType": "ExpressionStatement",
                  "src": "10241:135:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3049,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "10450:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10450:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3051,
                        "name": "inputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "10462:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3046,
                        "name": "_rariFundManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2667,
                        "src": "10420:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RariFundManager_$2609",
                          "typeString": "contract RariFundManager"
                        }
                      },
                      "id": 3048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2225,
                      "src": "10420:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10420:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3053,
                  "nodeType": "ExpressionStatement",
                  "src": "10420:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3059,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "10548:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3054,
                            "name": "_weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2681,
                            "src": "10528:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEtherToken_$4858",
                              "typeString": "contract IEtherToken"
                            }
                          },
                          "id": 3057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4852,
                          "src": "10528:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$__$",
                            "typeString": "function () payable external"
                          }
                        },
                        "id": 3058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10528:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                          "typeString": "function (uint256) pure returns (function () payable external)"
                        }
                      },
                      "id": 3060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10528:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 3061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10528:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3062,
                  "nodeType": "ExpressionStatement",
                  "src": "10528:34:3"
                },
                {
                  "assignments": [
                    3067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3067,
                      "name": "filledAmounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "10615:31:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3065,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10615:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3066,
                        "length": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 3064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10623:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "10615:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3076,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3070,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "10700:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3071,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2996,
                        "src": "10708:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3072,
                        "name": "makerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "10720:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3073,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "10742:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10742:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3068,
                        "name": "ZeroExExchangeController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "10649:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$3895_$",
                          "typeString": "type(library ZeroExExchangeController)"
                        }
                      },
                      "id": 3069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketBuyOrdersFillOrKill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3894,
                      "src": "10649:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (struct LibOrder.Order memory[] memory,bytes memory[] memory,uint256,uint256) returns (uint256[2] memory)"
                      }
                    },
                    "id": 3075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10649:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10615:137:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3078,
                        "name": "outputErc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "10790:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3079,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9342,
                          "src": "10811:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10811:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3081,
                          "name": "filledAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3067,
                          "src": "10823:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 3083,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10837:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10823:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3084,
                          "name": "filledAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3067,
                          "src": "10841:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 3086,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 3085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10855:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10841:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3077,
                      "name": "PostWithdrawalExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "10767:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 3087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10767:91:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3088,
                  "nodeType": "EmitStatement",
                  "src": "10762:96:3"
                },
                {
                  "assignments": [
                    3090
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3090,
                      "name": "wethBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "10899:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3089,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10899:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3097,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3094,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9470,
                            "src": "10945:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 3093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10937:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10937:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3091,
                        "name": "_weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2681,
                        "src": "10921:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEtherToken_$4858",
                          "typeString": "contract IEtherToken"
                        }
                      },
                      "id": 3092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4834,
                      "src": "10921:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10921:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10899:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3101,
                        "name": "wethBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3090,
                        "src": "10976:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3098,
                        "name": "_weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2681,
                        "src": "10961:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEtherToken_$4858",
                          "typeString": "contract IEtherToken"
                        }
                      },
                      "id": 3100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4857,
                      "src": "10961:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10961:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3103,
                  "nodeType": "ExpressionStatement",
                  "src": "10961:27:3"
                },
                {
                  "assignments": [
                    3105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3105,
                      "name": "outputToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "11032:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8963",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3104,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8963,
                        "src": "11032:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8963",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3109,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3107,
                        "name": "outputErc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "11060:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3106,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8963,
                      "src": "11053:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$8963_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11053:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8963",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11032:48:3"
                },
                {
                  "assignments": [
                    3111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3111,
                      "name": "outputTokenBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "11090:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11090:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3118,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3115,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9470,
                            "src": "11149:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 3114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11141:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11141:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3112,
                        "name": "outputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3105,
                        "src": "11119:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8963",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8908,
                      "src": "11119:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11119:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11090:65:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3119,
                      "name": "outputTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3111,
                      "src": "11169:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11190:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11169:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3130,
                  "nodeType": "IfStatement",
                  "src": "11165:84:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "11218:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11218:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3127,
                          "name": "outputTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3111,
                          "src": "11230:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3122,
                          "name": "outputToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3105,
                          "src": "11193:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8963",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 3124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8996,
                        "src": "11193:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8963_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8963_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 3128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11193:56:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3129,
                    "nodeType": "ExpressionStatement",
                    "src": "11193:56:3"
                  }
                },
                {
                  "assignments": [
                    3132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3132,
                      "name": "ethBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "11290:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11290:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3137,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3134,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9470,
                          "src": "11319:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                            "typeString": "contract RariFundProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                            "typeString": "contract RariFundProxy"
                          }
                        ],
                        "id": 3133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11311:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 3135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11311:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "11311:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11290:42:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3138,
                      "name": "ethBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "11355:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11368:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11355:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3158,
                  "nodeType": "IfStatement",
                  "src": "11351:187:3",
                  "trueBody": {
                    "id": 3157,
                    "nodeType": "Block",
                    "src": "11371:167:3",
                    "statements": [
                      {
                        "assignments": [
                          3142,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3142,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 3157,
                            "src": "11386:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3141,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "11386:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 3151,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 3149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11438:2:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3147,
                                "name": "ethBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3132,
                                "src": "11426:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3143,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9342,
                                    "src": "11404:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3144,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "11404:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 3145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "11404:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 3146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11404:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                              }
                            },
                            "id": 3148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11404:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 3150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11404:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11385:56:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3153,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3142,
                              "src": "11463:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4661696c656420746f207472616e736665722045544820746f206d73672e73656e6465722061667465722065786368616e67652e",
                              "id": 3154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11472:54:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0c323c447b818774bf7a9be177dc972f282a9474cbe8219a77658bdd7d0519d",
                                "typeString": "literal_string \"Failed to transfer ETH to msg.sender after exchange.\""
                              },
                              "value": "Failed to transfer ETH to msg.sender after exchange."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0c323c447b818774bf7a9be177dc972f282a9474cbe8219a77658bdd7d0519d",
                                "typeString": "literal_string \"Failed to transfer ETH to msg.sender after exchange.\""
                              }
                            ],
                            "id": 3152,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9345,
                              9346
                            ],
                            "referencedDeclaration": 9346,
                            "src": "11455:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11455:72:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3156,
                        "nodeType": "ExpressionStatement",
                        "src": "11455:72:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Withdraws funds from RariFund in exchange for RFT and exchanges to them to the desired currency (if no 0x orders are supplied, exchanges DAI, USDC, USDT, TUSD, and mUSD via mStable).\nYou can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation.\nPlease note that you must approve RariFundManager to burn of the necessary amount of RFT.\nYou also must input at least enough ETH to cover the protocol fees.\n@dev We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n@param inputAmount The amounts of tokens to be withdrawn and exchanged (including taker fees).\n@param outputErc20Contract The ERC20 contract address of the token to be outputted by the exchange. Set to address(0) to output ETH.\n@param orders The limit orders to be filled in ascending order of the price you pay.\n@param signatures The signatures for the orders.\n@param makerAssetFillAmount The amount of the maker assets to buy.",
            "id": 3160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAndExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2988,
                  "name": "inputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "9660:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9660:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2990,
                  "name": "outputErc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "9681:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9681:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2993,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "9710:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$5905_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 2991,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 5905,
                      "src": "9710:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$5905_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 2992,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "9710:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$5905_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2996,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "9742:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2994,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "9742:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 2995,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "9742:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2998,
                  "name": "makerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "9769:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9769:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9659:139:3"
            },
            "returnParameters": {
              "id": 3000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9814:0:3"
            },
            "scope": 3277,
            "src": "9631:1913:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3183,
              "nodeType": "Block",
              "src": "11863:145:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "11881:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11881:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11893:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11881:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206465706f736974206d6f7265207468616e203020657468",
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11896:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b063b6e19f2d2bb594343a3e489df4f1a7c3f38284aa15e06edbe91b12cb9fe5",
                          "typeString": "literal_string \"Must deposit more than 0 eth\""
                        },
                        "value": "Must deposit more than 0 eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b063b6e19f2d2bb594343a3e489df4f1a7c3f38284aa15e06edbe91b12cb9fe5",
                          "typeString": "literal_string \"Must deposit more than 0 eth\""
                        }
                      ],
                      "id": 3165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9345,
                        9346
                      ],
                      "referencedDeclaration": 9346,
                      "src": "11873:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11873:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3172,
                  "nodeType": "ExpressionStatement",
                  "src": "11873:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3179,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            7034
                          ],
                          "referencedDeclaration": 7034,
                          "src": "11988:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11988:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3176,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9342,
                            "src": "11977:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11977:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3173,
                            "name": "_rariFundManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2667,
                            "src": "11944:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundManager_$2609",
                              "typeString": "contract RariFundManager"
                            }
                          },
                          "id": 3174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1976,
                          "src": "11944:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) payable external returns (bool)"
                          }
                        },
                        "id": 3175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11944:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_address_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) pure returns (function (address) payable external returns (bool))"
                        }
                      },
                      "id": 3178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11944:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$value",
                        "typeString": "function (address) payable external returns (bool)"
                      }
                    },
                    "id": 3181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11944:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3164,
                  "id": 3182,
                  "nodeType": "Return",
                  "src": "11937:64:3"
                }
              ]
            },
            "documentation": "@notice Deposits funds to RariFund in exchange for REFT (with GSN support).\nYou may only deposit ETH.\nPlease note that you must approve RariFundProxy to transfer at least `amount`.\n@return Boolean indicating success.",
            "id": 3184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11828:2:3"
            },
            "returnParameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3163,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "11857:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11857:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11856:6:3"
            },
            "scope": 3277,
            "src": "11812:196:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3255,
              "nodeType": "Block",
              "src": "12455:630:3",
              "statements": [
                {
                  "assignments": [
                    3210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3210,
                      "name": "blob",
                      "nodeType": "VariableDeclaration",
                      "scope": 3255,
                      "src": "12465:17:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3209,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12465:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3226,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3213,
                        "name": "relay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3186,
                        "src": "12515:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3214,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3188,
                        "src": "12534:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3215,
                        "name": "encodedFunction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3190,
                        "src": "12552:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3216,
                        "name": "transactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3192,
                        "src": "12581:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3217,
                        "name": "gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3194,
                        "src": "12609:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3218,
                        "name": "gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3196,
                        "src": "12631:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3219,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3198,
                        "src": "12653:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3220,
                          "name": "getHubAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6954,
                          "src": "12704:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12704:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3223,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9470,
                            "src": "12780:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RariFundProxy_$3277",
                              "typeString": "contract RariFundProxy"
                            }
                          ],
                          "id": 3222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12772:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12772:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3211,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9329,
                        "src": "12485:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12485:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 3225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12485:353:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12465:373:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3233,
                          "name": "approvalData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3200,
                          "src": "12901:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3228,
                                  "name": "blob",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3210,
                                  "src": "12862:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 3227,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9336,
                                "src": "12852:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 3229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12852:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 3230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "toEthSignedMessageHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7839,
                            "src": "12852:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                              "typeString": "function (bytes32) pure returns (bytes32)"
                            }
                          },
                          "id": 3231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12852:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 3232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recover",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7823,
                        "src": "12852:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes memory) pure returns (address)"
                        }
                      },
                      "id": 3234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12852:62:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3235,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "12918:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12852:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3241,
                  "nodeType": "IfStatement",
                  "src": "12848:117:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12963:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3237,
                        "name": "_rejectRelayedCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7162,
                        "src": "12944:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256,bytes memory)"
                        }
                      },
                      "id": 3239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12944:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(uint256,bytes memory)"
                      }
                    },
                    "functionReturnParameters": 3208,
                    "id": 3240,
                    "nodeType": "Return",
                    "src": "12937:28:3"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3242,
                      "name": "_gsnTrustedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "12979:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13008:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13000:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 3245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13000:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12979:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3251,
                  "nodeType": "IfStatement",
                  "src": "12975:65:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 3248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13038:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 3247,
                        "name": "_rejectRelayedCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7162,
                        "src": "13019:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256,bytes memory)"
                        }
                      },
                      "id": 3249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13019:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(uint256,bytes memory)"
                      }
                    },
                    "functionReturnParameters": 3208,
                    "id": 3250,
                    "nodeType": "Return",
                    "src": "13012:28:3"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3252,
                      "name": "_approveRelayedCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7132,
                        7146
                      ],
                      "referencedDeclaration": 7132,
                      "src": "13057:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (uint256,bytes memory)"
                      }
                    },
                    "id": 3253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13057:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(uint256,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 3208,
                  "id": 3254,
                  "nodeType": "Return",
                  "src": "13050:28:3"
                }
              ]
            },
            "documentation": "@dev Ensures that only transactions with a trusted signature can be relayed through the GSN.",
            "id": 3256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3186,
                  "name": "relay",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12166:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12166:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3188,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12189:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12189:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3190,
                  "name": "encodedFunction",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12211:30:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3189,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12211:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3192,
                  "name": "transactionFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12251:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12251:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3194,
                  "name": "gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12283:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12283:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3196,
                  "name": "gasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12309:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12309:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3198,
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12335:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12335:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3200,
                  "name": "approvalData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12358:27:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3199,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12358:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3202,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12395:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12395:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12156:252:3"
            },
            "returnParameters": {
              "id": 3208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3205,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12432:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12432:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3207,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "12441:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3206,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12441:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12431:23:3"
            },
            "scope": 3277,
            "src": "12130:955:3",
            "stateMutability": "view",
            "superFunction": 7536,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3263,
              "nodeType": "Block",
              "src": "13249:64:3",
              "statements": []
            },
            "documentation": "@dev Code executed before processing a call relayed through the GSN.",
            "id": 3264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3264,
                  "src": "13208:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3257,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13208:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13207:14:3"
            },
            "returnParameters": {
              "id": 3262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3261,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3264,
                  "src": "13240:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3260,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13240:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13239:9:3"
            },
            "scope": 3277,
            "src": "13183:130:3",
            "stateMutability": "nonpayable",
            "superFunction": 7081,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3275,
              "nodeType": "Block",
              "src": "13483:64:3",
              "statements": []
            },
            "documentation": "@dev Code executed after processing a call relayed through the GSN.",
            "id": 3276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3266,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3276,
                  "src": "13436:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3265,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13436:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3268,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3276,
                  "src": "13450:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3267,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13450:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3270,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3276,
                  "src": "13456:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13456:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3272,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3276,
                  "src": "13465:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3271,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13465:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13435:38:3"
            },
            "returnParameters": {
              "id": 3274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13483:0:3"
            },
            "scope": 3277,
            "src": "13410:137:3",
            "stateMutability": "nonpayable",
            "superFunction": 7120,
            "visibility": "internal"
          }
        ],
        "scope": 3278,
        "src": "1663:11886:3"
      }
    ],
    "src": "540:13010:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0xf980c1430e55b1867cd9337a1f20246ab3b7255032486d0b71c24e820eebf3ab": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "name": "FundManagerSet",
          "type": "event"
        },
        "0xeb58b3605dc4b57dbf9dbd3db2d10cea4dd28005a4d8310f298e16d63b204761": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "name": "GsnTrustedSignerSet",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x830405d045810d02985b20c8902aa806ffe7fc8598401e410248a74cac6d15ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "outputErc20Contract",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "payee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "withdrawalAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            }
          ],
          "name": "PostWithdrawalExchange",
          "type": "event"
        },
        "0xf4a68710ff1aa4f191fc7ca5b60a8ea5b54b9eaf7d5cd488db3c84a552a43371": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "inputErc20Contract",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "payee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            }
          ],
          "name": "PreDepositExchange",
          "type": "event"
        },
        "0xb9f84b8e65164b14439ae3620df0a4d8786d896996c0282b683f9d8c08f046e8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldRelayHub",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newRelayHub",
              "type": "address"
            }
          ],
          "name": "RelayHubChanged",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3dA62B96162B3299eF07BE7e03030800b8d9D416",
      "transactionHash": "0x3fba1ef2792debbfcaf0a9ed2044397bfcce1fd43155b4887696366413be002d"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-13T03:23:02.179Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "This contract faciliates deposits to RariFundManager from exchanges and withdrawals from RariFundManager for exchanges.",
    "methods": {
      "acceptRelayedCall(address,address,bytes,uint256,uint256,uint256,uint256,bytes,uint256)": {
        "details": "Ensures that only transactions with a trusted signature can be relayed through the GSN."
      },
      "constructor": {
        "details": "Constructor that sets supported ERC20 token contract addresses."
      },
      "deposit()": {
        "return": "Boolean indicating success."
      },
      "exchangeAndDeposit(address,uint256,(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256)": {
        "details": "We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).",
        "params": {
          "inputAmount": "The amount of tokens to be exchanged (including taker fees).",
          "inputErc20Contract": "The ERC20 contract address of the token to be exchanged. Set to address(0) to input ETH.",
          "orders": "The limit orders to be filled in ascending order of the price you pay.",
          "signatures": "The signatures for the orders.",
          "takerAssetFillAmount": "The amount of the taker asset to sell (excluding taker fees)."
        }
      },
      "getHubAddr()": {
        "details": "Returns the address of the {IRelayHub} contract for this recipient."
      },
      "initialize(address)": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "postRelayedCall(bytes,bool,uint256,bytes32)": {
        "details": "See `IRelayRecipient.postRelayedCall`.     * This function should not be overriden directly, use `_postRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract."
      },
      "preRelayedCall(bytes)": {
        "details": "See `IRelayRecipient.preRelayedCall`.     * This function should not be overriden directly, use `_preRelayedCall` instead.     * * Requirements:     * - the caller must be the `RelayHub` contract."
      },
      "relayHubVersion()": {
        "details": "Returns the version string of the {IRelayHub} for which this recipient implementation was built. If {_upgradeRelayHub} is used, the new {IRelayHub} instance should be compatible with this version."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFundManager(address)": {
        "details": "Sets or upgrades the RariFundManager of the RariFundProxy.",
        "params": {
          "newContract": "The address of the new RariFundManager contract."
        }
      },
      "setGsnTrustedSigner(address)": {
        "details": "Sets or upgrades the trusted GSN signer of the RariFundProxy.",
        "params": {
          "newAddress": "The Ethereum address of the new trusted GSN signer."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawAndExchange(uint256,address,(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256)": {
        "details": "We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).",
        "params": {
          "inputAmount": "The amounts of tokens to be withdrawn and exchanged (including taker fees).",
          "makerAssetFillAmount": "The amount of the maker assets to buy.",
          "orders": "The limit orders to be filled in ascending order of the price you pay.",
          "outputErc20Contract": "The ERC20 contract address of the token to be outputted by the exchange. Set to address(0) to output ETH.",
          "signatures": "The signatures for the orders."
        }
      }
    },
    "title": "RariFundProxy"
  },
  "userdoc": {
    "methods": {
      "deposit()": {
        "notice": "Deposits funds to RariFund in exchange for REFT (with GSN support). You may only deposit ETH. Please note that you must approve RariFundProxy to transfer at least `amount`."
      },
      "exchangeAndDeposit(address,uint256,(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256)": {
        "notice": "Exchanges and deposits funds to RariFund in exchange for RFT (via 0x). You can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation. Please note that you must approve RariFundProxy to transfer at least `inputAmount` unless you are inputting ETH. You also must input at least enough ETH to cover the protocol fee (and enough to cover `orders` if you are inputting ETH)."
      },
      "withdrawAndExchange(uint256,address,(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256)": {
        "notice": "Withdraws funds from RariFund in exchange for RFT and exchanges to them to the desired currency (if no 0x orders are supplied, exchanges DAI, USDC, USDT, TUSD, and mUSD via mStable). You can retrieve orders from the 0x swap API (https://0x.org/docs/api#get-swapv0quote). See the web client for implementation. Please note that you must approve RariFundManager to burn of the necessary amount of RFT. You also must input at least enough ETH to cover the protocol fees."
      }
    }
  }
}